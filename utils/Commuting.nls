to job-commuting-model
   ifelse job-commuting-holiday? [holiday-commuting ] [normal-commuting] 
  
end
          
to normal-commuting    
   ; calculate ds for SIR calculation
   let dS631 S631
   let dI631 I631
   let dS632 S632
   let dI632 I632
   let dS611 S611
   let dI611 I611 
   let dS612 S612
   let dI612 I612
   let dS36322 S36322
   let dI36322 I36322
   let dS36311 S36311
   let dI36311 I36311
   let dS36312 S36312
   let dI36312 I36312
   let dS36122 S36122
   let dI36122 I36122
   let dS36111 S36111
   let dI36111 I36111
   let dS36112 S36112
   let dI36112 I36112
   let dS731 S731
   let dI731 I731
   let dS17312 S17312
   let dI17312 I17312
   let dS17111 S17111
   let dI17111 I17111
   let dS17112 S17112
   let dI17112 I17112
   let dS18311 S18311
   let dI18311 I18311
   let dS18312 S18312
   let dI18312 I18312
   let dS18111 S18111
   let dI18111 I18111
   let dS18112 S18112
   let dI18112 I18112
   
   let sumnoncommuters S611 + E611 + I611 + R611 + S612 + E612 + I612 + R612 + S36122 + E36122 + I36122 + R36122 + S36111 + E36111 + I36111 + R36111 + S36112 + E36112 + I36112 + R36112 + S17111 + E17111 + I17111 + R17111 + S17112 + E17112 + I17112 + R17112 + S18111 + E18111 + I18111 + R18111 + S18112 + E18112 + I18112 + R18112  
   let sumcommuters S631 + E631 + I631 + R631 + S632 + E632 + I632 + R632 + S36322 + E36322 + I36322 + R36322 + S36311 + E36311 + I36311 + R36311 + S36312 + E36312 + I36312 + R36312 + S731 + E731 + I731 + R731 + S17312 + E17312 + I17312 + R17312 + S18311 + E18311 + I18311 + R18311 + S18312 + E18312 + I18312 + R18312   

   ;; only commuting 5 days a week
   ;; To make the model quicker; only commuting once in seven days. Infections multiplied with 5 (below), corresponding with 5 workingdays
   ;; Downside, ds are the same for the five days, in stead of different each day.
   if (ticks mod 7 = 0) [
   
   ;; infected destination municipality
   ask my-out-commuterflows [
   if (([I611] of end2) + ([I612] of end2) + ([I36122] of end2) + ([I36111] of end2) + ([I36112] of end2) + ([I17111] of end2) + ([I17112] of end2) + ([I18111] of end2) + ([I18112] of end2)) > (([sumnoncommuters] of end2) / 100 * Commuter-Threshold) [
    
       let commuters ([nr-people] of self * decimaljob)
       ask end1[
       
       if S631 > 0 [
         ;; multiplied by 5, because there are five workingdays in a week, but it is only calculated once per week.
         ;; More commuters means higher infection chance in municipality. Ranging from 0.5 to 1. Highest nr commuters is 21200
            set S631 S631 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS631 * dI611 * (item 158 commutercontact)) + (dS631 * dI612 * (item 183 commutercontact)) + (dS631 * dI36122 * (item 258 commutercontact)) + (dS631 * dI36111 * (item 283 commutercontact)) + (dS631 * dI36112 * (item 308 commutercontact)) + (dS631 * dI17111 * (item 408 commutercontact)) + (dS631 * dI17112 * (item 433 commutercontact)) + (dS631 * dI18111 * (item 508 commutercontact)) + (dS631 * dI18112 * (item 533 commutercontact)))))
            set E631 E631 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS631 * dI611 * (item 158 commutercontact)) + (dS631 * dI612 * (item 183 commutercontact)) + (dS631 * dI36122 * (item 258 commutercontact)) + (dS631 * dI36111 * (item 283 commutercontact)) + (dS631 * dI36112 * (item 308 commutercontact)) + (dS631 * dI17111 * (item 408 commutercontact)) + (dS631 * dI17112 * (item 433 commutercontact)) + (dS631 * dI18111 * (item 508 commutercontact)) + (dS631 * dI18112 * (item 533 commutercontact)))))
            if S631 < 0 [set S631 0]
            if E631 > population [set E631 population]
       ]
       
       if S632 > 0 [
            set S632 S632 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS632 * dI611 * (item 159 commutercontact)) + (dS632 * dI612 * (item 184 commutercontact)) + (dS632 * dI36122 * (item 259 commutercontact)) + (dS632 * dI36111 * (item 284 commutercontact)) + (dS632 * dI36112 * (item 309 commutercontact)) + (dS632 * dI17111 * (item 409 commutercontact)) + (dS632 * dI17112 * (item 434 commutercontact)) + (dS632 * dI18111 * (item 509 commutercontact)) + (dS632 * dI18112 * (item 534 commutercontact)))))
            set E632 E632 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS632 * dI611 * (item 159 commutercontact)) + (dS632 * dI612 * (item 184 commutercontact)) + (dS632 * dI36122 * (item 259 commutercontact)) + (dS632 * dI36111 * (item 284 commutercontact)) + (dS632 * dI36112 * (item 309 commutercontact)) + (dS632 * dI17111 * (item 409 commutercontact)) + (dS632 * dI17112 * (item 434 commutercontact)) + (dS632 * dI18111 * (item 509 commutercontact)) + (dS632 * dI18112 * (item 534 commutercontact)))))
            if S632 < 0 [set S632 0]
            if E632 > population [set E632 population]
       ]
       
       if S36322 > 0 [
            set S36322 S36322 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36322 * dI611 * (item 163 commutercontact)) + (dS36322 * dI612 * (item 188 commutercontact)) + (dS36322 * dI36122 * (item 263 commutercontact)) + (dS36322 * dI36111 * (item 288 commutercontact)) + (dS36322 * dI36112 * (item 313 commutercontact)) + (dS36322 * dI17111 * (item 413 commutercontact)) + (dS36322 * dI17112 * (item 438 commutercontact)) + (dS36322 * dI18111 * (item 513 commutercontact)) + (dS36322 * dI18112 * (item 538 commutercontact)))))
            set E36322 E36322 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36322 * dI611 * (item 163 commutercontact)) + (dS36322 * dI612 * (item 188 commutercontact)) + (dS36322 * dI36122 * (item 263 commutercontact)) + (dS36322 * dI36111 * (item 288 commutercontact)) + (dS36322 * dI36112 * (item 313 commutercontact)) + (dS36322 * dI17111 * (item 413 commutercontact)) + (dS36322 * dI17112 * (item 438 commutercontact)) + (dS36322 * dI18111 * (item 513 commutercontact)) + (dS36322 * dI18112 * (item 538 commutercontact)))))
            if S36322 < 0 [set S36322 0]
            if E36322 > population [set E36322 population]
       ]
       
       if S36311 > 0 [
            set S36311 S36311 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36311 * dI611 * (item 164 commutercontact)) + (dS36311 * dI612 * (item 189 commutercontact)) + (dS36311 * dI36122 * (item 264 commutercontact)) + (dS36311 * dI36111 * (item 289 commutercontact)) + (dS36311 * dI36112 * (item 314 commutercontact)) + (dS36311 * dI17111 * (item 414 commutercontact)) + (dS36311 * dI17112 * (item 439 commutercontact)) + (dS36311 * dI18111 * (item 514 commutercontact)) + (dS36311 * dI18112 * (item 539 commutercontact)))))
            set E36311 E36311 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36311 * dI611 * (item 164 commutercontact)) + (dS36311 * dI612 * (item 189 commutercontact)) + (dS36311 * dI36122 * (item 264 commutercontact)) + (dS36311 * dI36111 * (item 289 commutercontact)) + (dS36311 * dI36112 * (item 314 commutercontact)) + (dS36311 * dI17111 * (item 414 commutercontact)) + (dS36311 * dI17112 * (item 439 commutercontact)) + (dS36311 * dI18111 * (item 514 commutercontact)) + (dS36311 * dI18112 * (item 539 commutercontact)))))
            if S36311 < 0 [set S36311 0]
            if E36311 > population [set E36311 population]
       ]
       
       if S36312 > 0 [
            set S36312 S36312 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36312 * dI611 * (item 165 commutercontact)) + (dS36312 * dI612 * (item 190 commutercontact)) + (dS36312 * dI36122 * (item 265 commutercontact)) + (dS36312 * dI36111 * (item 290 commutercontact)) + (dS36312 * dI36112 * (item 315 commutercontact)) + (dS36312 * dI17111 * (item 415 commutercontact)) + (dS36312 * dI17112 * (item 440 commutercontact)) + (dS36312 * dI18111 * (item 515 commutercontact)) + (dS36312 * dI18112 * (item 540 commutercontact)))))
            set E36312 E36312 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36312 * dI611 * (item 165 commutercontact)) + (dS36312 * dI612 * (item 190 commutercontact)) + (dS36312 * dI36122 * (item 265 commutercontact)) + (dS36312 * dI36111 * (item 290 commutercontact)) + (dS36312 * dI36112 * (item 315 commutercontact)) + (dS36312 * dI17111 * (item 415 commutercontact)) + (dS36312 * dI17112 * (item 440 commutercontact)) + (dS36312 * dI18111 * (item 515 commutercontact)) + (dS36312 * dI18112 * (item 540 commutercontact)))))
            if S36312 < 0 [set S36312 0]
            if E36312 > population [set E36312 population]
       ]
       
       if S731 > 0 [
            set S731 S731 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS731 * dI611 * (item 168 commutercontact)) + (dS731 * dI612 * (item 193 commutercontact)) + (dS731 * dI36122 * (item 268 commutercontact)) + (dS731 * dI36111 * (item 293 commutercontact)) + (dS731 * dI36112 * (item 318 commutercontact)) + (dS731 * dI17111 * (item 418 commutercontact)) + (dS731 * dI17112 * (item 443 commutercontact)) + (dS731 * dI18111 * (item 518 commutercontact)) + (dS731 * dI18112 * (item 543 commutercontact)))))
            set E731 E731 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS731 * dI611 * (item 168 commutercontact)) + (dS731 * dI612 * (item 193 commutercontact)) + (dS731 * dI36122 * (item 268 commutercontact)) + (dS731 * dI36111 * (item 293 commutercontact)) + (dS731 * dI36112 * (item 318 commutercontact)) + (dS731 * dI17111 * (item 418 commutercontact)) + (dS731 * dI17112 * (item 443 commutercontact)) + (dS731 * dI18111 * (item 518 commutercontact)) + (dS731 * dI18112 * (item 543 commutercontact)))))
            if S731 < 0 [set S731 0]
            if E731 > population [set E731 population]
       ]
       
       if S17312 > 0 [
            set S17312 S17312 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17312 * dI611 * (item 169 commutercontact)) + (dS17312 * dI612 * (item 194 commutercontact)) + (dS17312 * dI36122 * (item 269 commutercontact)) + (dS17312 * dI36111 * (item 294 commutercontact)) + (dS17312 * dI36112 * (item 319 commutercontact)) + (dS17312 * dI17111 * (item 419 commutercontact)) + (dS17312 * dI17112 * (item 444 commutercontact)) + (dS17312 * dI18111 * (item 519 commutercontact)) + (dS17312 * dI18112 * (item 544 commutercontact)))))
            set E17312 E17312 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17312 * dI611 * (item 169 commutercontact)) + (dS17312 * dI612 * (item 194 commutercontact)) + (dS17312 * dI36122 * (item 269 commutercontact)) + (dS17312 * dI36111 * (item 294 commutercontact)) + (dS17312 * dI36112 * (item 319 commutercontact)) + (dS17312 * dI17111 * (item 419 commutercontact)) + (dS17312 * dI17112 * (item 444 commutercontact)) + (dS17312 * dI18111 * (item 519 commutercontact)) + (dS17312 * dI18112 * (item 544 commutercontact)))))
            if S17312 < 0 [set S17312 0]
            if E17312 > population [set E17312 population]
       ]
       
       if S18311 > 0 [
            set S18311 S18311 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18311 * dI611 * (item 172 commutercontact)) + (dS18311 * dI612 * (item 197 commutercontact)) + (dS18311 * dI36122 * (item 272 commutercontact)) + (dS18311 * dI36111 * (item 297 commutercontact)) + (dS18311 * dI36112 * (item 322 commutercontact)) + (dS18311 * dI17111 * (item 422 commutercontact)) + (dS18311 * dI17112 * (item 447 commutercontact)) + (dS18311 * dI18111 * (item 522 commutercontact)) + (dS18311 * dI18112 * (item 547 commutercontact)))))
            set E18311 E18311 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18311 * dI611 * (item 172 commutercontact)) + (dS18311 * dI612 * (item 197 commutercontact)) + (dS18311 * dI36122 * (item 272 commutercontact)) + (dS18311 * dI36111 * (item 297 commutercontact)) + (dS18311 * dI36112 * (item 322 commutercontact)) + (dS18311 * dI17111 * (item 422 commutercontact)) + (dS18311 * dI17112 * (item 447 commutercontact)) + (dS18311 * dI18111 * (item 522 commutercontact)) + (dS18311 * dI18112 * (item 547 commutercontact)))))
            if S18311 < 0 [set S18311 0]
            if E18311 > population [set E18311 population]
       ]
       
       if S18312 > 0 [      
            set S18312 S18312 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18312 * dI611 * (item 173 commutercontact)) + (dS18312 * dI612 * (item 198 commutercontact)) + (dS18312 * dI36122 * (item 273 commutercontact)) + (dS18312 * dI36111 * (item 298 commutercontact)) + (dS18312 * dI36112 * (item 323 commutercontact)) + (dS18312 * dI17111 * (item 423 commutercontact)) + (dS18312 * dI17112 * (item 448 commutercontact)) + (dS18312 * dI18111 * (item 523 commutercontact)) + (dS18312 * dI18112 * (item 548 commutercontact)))))
            set E18312 E18312 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18312 * dI611 * (item 173 commutercontact)) + (dS18312 * dI612 * (item 198 commutercontact)) + (dS18312 * dI36122 * (item 273 commutercontact)) + (dS18312 * dI36111 * (item 298 commutercontact)) + (dS18312 * dI36112 * (item 323 commutercontact)) + (dS18312 * dI17111 * (item 423 commutercontact)) + (dS18312 * dI17112 * (item 448 commutercontact)) + (dS18312 * dI18111 * (item 523 commutercontact)) + (dS18312 * dI18112 * (item 548 commutercontact)))))
            if S18312 < 0 [set S18312 0]
            if E18312 > population [set E18312 population]
       ]           
     ]
   ]
   
   ;;infected home municipality
   if (([I631] of end1) + ([I632] of end1) + ([I36322] of end1) + ([I36311] of end1) + ([I36312] of end1) + ([I731] of end1) + ([I17312] of end1) + ([I18311] of end1) + ([I18312] of end1)) > (([sumcommuters] of end1) / 100 * Commuter-Threshold) [  

       let commuters ([nr-people] of self)
       ask end2[
       
       if S611 > 0 [
            set S611 S611 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS611 * dI631 * (item 158 commutercontact)) + (dS611 * dI632 * (item 183 commutercontact)) + (dS611 * dI36322 * (item 258 commutercontact)) + (dS611 * dI36311 * (item 283 commutercontact)) + (dS611 * dI36312 * (item 308 commutercontact)) + (dS611 * dI731 * (item 408 commutercontact)) + (dS611 * dI17312 * (item 433 commutercontact)) + (dS611 * dI18311 * (item 508 commutercontact)) + (dS611 * dI18312 * (item 533 commutercontact)))))
            set E611 E611 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS611 * dI631 * (item 158 commutercontact)) + (dS611 * dI632 * (item 183 commutercontact)) + (dS611 * dI36322 * (item 258 commutercontact)) + (dS611 * dI36311 * (item 283 commutercontact)) + (dS611 * dI36312 * (item 308 commutercontact)) + (dS611 * dI731 * (item 408 commutercontact)) + (dS611 * dI17312 * (item 433 commutercontact)) + (dS611 * dI18311 * (item 508 commutercontact)) + (dS611 * dI18312 * (item 533 commutercontact)))))
            if S611 < 0 [set S611 0]
            if E611 > population [set E611 population]
       ]
       if S612 > 0 [
            set S612 S612 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS612 * dI631 * (item 159 commutercontact)) + (dS612 * dI632 * (item 184 commutercontact)) + (dS612 * dI36322 * (item 259 commutercontact)) + (dS612 * dI36311 * (item 284 commutercontact)) + (dS612 * dI36312 * (item 309 commutercontact)) + (dS612 * dI731 * (item 409 commutercontact)) + (dS612 * dI17312 * (item 434 commutercontact)) + (dS612 * dI18311 * (item 509 commutercontact)) + (dS612 * dI18312 * (item 534 commutercontact)))))
            set E612 E612 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS612 * dI631 * (item 159 commutercontact)) + (dS612 * dI632 * (item 184 commutercontact)) + (dS612 * dI36322 * (item 259 commutercontact)) + (dS612 * dI36311 * (item 284 commutercontact)) + (dS612 * dI36312 * (item 309 commutercontact)) + (dS612 * dI731 * (item 409 commutercontact)) + (dS612 * dI17312 * (item 434 commutercontact)) + (dS612 * dI18311 * (item 509 commutercontact)) + (dS612 * dI18312 * (item 534 commutercontact)))))
            if S612 < 0 [set S612 0]
            if E612 > population [set E612 population]
       ]
       if S36122 > 0 [
            set S36122 S36122 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36122 * dI631 * (item 163 commutercontact)) + (dS36122 * dI632 * (item 188 commutercontact)) + (dS36122 * dI36322 * (item 263 commutercontact)) + (dS36122 * dI36311 * (item 288 commutercontact)) + (dS36122 * dI36312 * (item 313 commutercontact)) + (dS36122 * dI731 * (item 413 commutercontact)) + (dS36122 * dI17312 * (item 438 commutercontact)) + (dS36122 * dI18311 * (item 513 commutercontact)) + (dS36122 * dI18312 * (item 538 commutercontact)))))
            set E36122 E36122 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36122 * dI631 * (item 163 commutercontact)) + (dS36122 * dI632 * (item 188 commutercontact)) + (dS36122 * dI36322 * (item 263 commutercontact)) + (dS36122 * dI36311 * (item 288 commutercontact)) + (dS36122 * dI36312 * (item 313 commutercontact)) + (dS36122 * dI731 * (item 413 commutercontact)) + (dS36122 * dI17312 * (item 438 commutercontact)) + (dS36122 * dI18311 * (item 513 commutercontact)) + (dS36122 * dI18312 * (item 538 commutercontact)))))
            if S36122 < 0 [set S36122 0]
            if E36122 > population [set E36122 population]
       ]
       if S36111 > 0 [
            set S36111 S36111 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36111 * dI631 * (item 164 commutercontact)) + (dS36111 * dI632 * (item 189 commutercontact)) + (dS36111 * dI36322 * (item 264 commutercontact)) + (dS36111 * dI36311 * (item 289 commutercontact)) + (dS36111 * dI36312 * (item 314 commutercontact)) + (dS36111 * dI731 * (item 414 commutercontact)) + (dS36111 * dI17312 * (item 439 commutercontact)) + (dS36111 * dI18311 * (item 514 commutercontact)) + (dS36111 * dI18312 * (item 539 commutercontact)))))
            set E36111 E36111 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36111 * dI631 * (item 164 commutercontact)) + (dS36111 * dI632 * (item 189 commutercontact)) + (dS36111 * dI36322 * (item 264 commutercontact)) + (dS36111 * dI36311 * (item 289 commutercontact)) + (dS36111 * dI36312 * (item 314 commutercontact)) + (dS36111 * dI731 * (item 414 commutercontact)) + (dS36111 * dI17312 * (item 439 commutercontact)) + (dS36111 * dI18311 * (item 514 commutercontact)) + (dS36111 * dI18312 * (item 539 commutercontact)))))
            if S36111 < 0 [set S36111 0]
            if E36111 > population [set E36111 population]
       ]
       if S36112 > 0 [
            set S36112 S36112 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36112 * dI631 * (item 165 commutercontact)) + (dS36112 * dI632 * (item 190 commutercontact)) + (dS36112 * dI36322 * (item 265 commutercontact)) + (dS36112 * dI36311 * (item 290 commutercontact)) + (dS36112 * dI36312 * (item 315 commutercontact)) + (dS36112 * dI731 * (item 415 commutercontact)) + (dS36112 * dI17312 * (item 440 commutercontact)) + (dS36112 * dI18311 * (item 515 commutercontact)) + (dS36112 * dI18312 * (item 540 commutercontact)))))
            set E36112 E36112 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36112 * dI631 * (item 165 commutercontact)) + (dS36112 * dI632 * (item 190 commutercontact)) + (dS36112 * dI36322 * (item 265 commutercontact)) + (dS36112 * dI36311 * (item 290 commutercontact)) + (dS36112 * dI36312 * (item 315 commutercontact)) + (dS36112 * dI731 * (item 415 commutercontact)) + (dS36112 * dI17312 * (item 440 commutercontact)) + (dS36112 * dI18311 * (item 515 commutercontact)) + (dS36112 * dI18312 * (item 540 commutercontact)))))
            if S36112 < 0 [set S36112 0]
            if E36112 > population [set E36112 population]
       ]
       if S17111 > 0 [
            set S17111 S17111 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17111 * dI631 * (item 168 commutercontact)) + (dS17111 * dI632 * (item 193 commutercontact)) + (dS17111 * dI36322 * (item 268 commutercontact)) + (dS17111 * dI36311 * (item 293 commutercontact)) + (dS17111 * dI36312 * (item 318 commutercontact)) + (dS17111 * dI731 * (item 418 commutercontact)) + (dS17111 * dI17312 * (item 443 commutercontact)) + (dS17111 * dI18311 * (item 518 commutercontact)) + (dS17111 * dI18312 * (item 543 commutercontact)))))
            set E17111 E17111 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17111 * dI631 * (item 168 commutercontact)) + (dS17111 * dI632 * (item 193 commutercontact)) + (dS17111 * dI36322 * (item 268 commutercontact)) + (dS17111 * dI36311 * (item 293 commutercontact)) + (dS17111 * dI36312 * (item 318 commutercontact)) + (dS17111 * dI731 * (item 418 commutercontact)) + (dS17111 * dI17312 * (item 443 commutercontact)) + (dS17111 * dI18311 * (item 518 commutercontact)) + (dS17111 * dI18312 * (item 543 commutercontact)))))
            if S17111 < 0 [set S17111 0]
            if E17111 > population [set E17111 population]
       ]
       if S17112 > 0 [ 
            set S17112 S17112 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17112 * dI631 * (item 169 commutercontact)) + (dS17112 * dI632 * (item 194 commutercontact)) + (dS17112 * dI36322 * (item 269 commutercontact)) + (dS17112 * dI36311 * (item 294 commutercontact)) + (dS17112 * dI36312 * (item 319 commutercontact)) + (dS17112 * dI731 * (item 419 commutercontact)) + (dS17112 * dI17312 * (item 444 commutercontact)) + (dS17112 * dI18311 * (item 519 commutercontact)) + (dS17112 * dI18312 * (item 544 commutercontact)))))
            set E17112 E17112 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17112 * dI631 * (item 169 commutercontact)) + (dS17112 * dI632 * (item 194 commutercontact)) + (dS17112 * dI36322 * (item 269 commutercontact)) + (dS17112 * dI36311 * (item 294 commutercontact)) + (dS17112 * dI36312 * (item 319 commutercontact)) + (dS17112 * dI731 * (item 419 commutercontact)) + (dS17112 * dI17312 * (item 444 commutercontact)) + (dS17112 * dI18311 * (item 519 commutercontact)) + (dS17112 * dI18312 * (item 544 commutercontact)))))
            if S17112 < 0 [set S17112 0]
            if E17112 > population [set E17112 population]
       ]
       if S18111 > 0 [
            set S18111 S18111 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18111 * dI631 * (item 172 commutercontact)) + (dS18111 * dI632 * (item 197 commutercontact)) + (dS18111 * dI36322 * (item 272 commutercontact)) + (dS18111 * dI36311 * (item 297 commutercontact)) + (dS18111 * dI36312 * (item 322 commutercontact)) + (dS18111 * dI731 * (item 422 commutercontact)) + (dS18111 * dI17312 * (item 447 commutercontact)) + (dS18111 * dI18311 * (item 522 commutercontact)) + (dS18111 * dI18312 * (item 547 commutercontact)))))
            set E18111 E18111 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18111 * dI631 * (item 172 commutercontact)) + (dS18111 * dI632 * (item 197 commutercontact)) + (dS18111 * dI36322 * (item 272 commutercontact)) + (dS18111 * dI36311 * (item 297 commutercontact)) + (dS18111 * dI36312 * (item 322 commutercontact)) + (dS18111 * dI731 * (item 422 commutercontact)) + (dS18111 * dI17312 * (item 447 commutercontact)) + (dS18111 * dI18311 * (item 522 commutercontact)) + (dS18111 * dI18312 * (item 547 commutercontact)))))
            if S18111 < 0 [set S18111 0]
            if E18111 > population [set E18111 population]
       ]
       if S18112 > 0 [
            set S18112 S18112 - 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18112 * dI631 * (item 173 commutercontact)) + (dS18112 * dI632 * (item 198 commutercontact)) + (dS18112 * dI36322 * (item 273 commutercontact)) + (dS18112 * dI36311 * (item 298 commutercontact)) + (dS18112 * dI36312 * (item 323 commutercontact)) + (dS18112 * dI731 * (item 423 commutercontact)) + (dS18112 * dI17312 * (item 448 commutercontact)) + (dS18112 * dI18311 * (item 523 commutercontact)) + (dS18112 * dI18312 * (item 548 commutercontact)))))
            set E18112 E18112 + 5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18112 * dI631 * (item 173 commutercontact)) + (dS18112 * dI632 * (item 198 commutercontact)) + (dS18112 * dI36322 * (item 273 commutercontact)) + (dS18112 * dI36311 * (item 298 commutercontact)) + (dS18112 * dI36312 * (item 323 commutercontact)) + (dS18112 * dI731 * (item 423 commutercontact)) + (dS18112 * dI17312 * (item 448 commutercontact)) + (dS18112 * dI18311 * (item 523 commutercontact)) + (dS18112 * dI18312 * (item 548 commutercontact)))))
            if S18112 < 0 [set S18112 0]
            if E18112 > population [set E18112 population]
       ]
     ]
   ]
   ]
   ]
   
end

to holiday-commuting
  
  ;; model starts running 1 January. So summerholiday in July and August is ticks between 182 and 244 for year 1. 
  ;; 181 ticks commuting, then 62 ticks holiday, the rest of the year normal commuting again
  ;; In holiday only 20% of normal commuting at that moment.
  
  if (ticks = 0) [set decimaljob 1]
  if (ticks mod 365 = 76) [set decimaljob decimaljob * 0.2]
  if (ticks mod 365 = 245) [set decimaljob 1]

  normal-commuting
  
end

;; Job classes commuting     S631 S632 S36322 S36311 S36312 S731 S17312 S18311 S18312
;; Job classes commuting     I631 I632 I36322 I36311 I36312 I731 I17312 I18311 I18312
;; Job classes non-commuting I611 I612 I36122 I36111 I36112 I17111 I17112 I18111 I18112
;; job classes non-commuting S611 S612 S36122 S36111 S36112 S17111 S17112 S18111 S18112 



  
  