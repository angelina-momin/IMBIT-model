to population-model-min
  ;; 0-5 months
   if (ticks mod 30 = 0) [
   let sum112 S112 + E112 + I112 + R112
   set S112 S112 - (S112 / sum112 * 36.2)                
   set E112 E112 - (E112 / sum112 * 36.2) 
   set I112 I112 - (I112 / sum112 * 36.2)
   set R112 R112 - (R112 / sum112 * 36.2) 
   
   ;; 5 months - 5 years
   let sum212 S212 + E212 + I212 + R212
   set S212 S212 - (S212 / sum212 * 36.2)
   set E212 E212 - (E212 / sum212 * 36.2) 
   set I212 I212 - (I212 / sum212 * 36.2)
   set R212 R212 - (R212 / sum212 * 36.2)
   
   ;; 5 - 12 years
   let sum312 S312 + E312 + I312 + R312
   set S312 S312 - (S312 / sum312 * 36.2) 
   set E312 E312 - (E312 / sum312 * 36.2) 
   set I312 I312 - (I312 / sum312 * 36.2)  
   set R312 R312 - (R312 / sum312 * 36.2) 
     
   ;; 12- 17 years
   ;; Adjusted to ageingplus fractions
   let sum422 S422 + E422 + I422 + R422 
   set S422 S422 - (S422 / sum422 * (36.2 / 2)) 
   set E422 E422 - (E422 / sum422 * (36.2 / 2)) 
   set I422 I422 - (I422 / sum422 * (36.2 / 2))  
   set R422 R422 - (R422 / sum422 * (36.2 / 2))
   
   let sum412 S412 + E412 + I412 + R412 
   set S412 S412 - (S412 / sum412 * (36.2 / 2)) 
   set E412 E412 - (E412 / sum412 * (36.2 / 2)) 
   set I412 I412 - (I412 / sum412 * (36.2 / 2))
   set R412 R412 - (R412 / sum412 * (36.2 / 2))
   
   ;; 17- 25 years
   let sum511 S511 + E511 + I511 + R511
   set S511 S511 - (S511 / sum511 * 36.2) 
   set E511 E511 - (E511 / sum511 * 36.2)
   set I511 I511 - (I511 / sum511 * 36.2)
   set R511 R511 - (R511 / sum511 * 36.2) 
   
   ;; 25 - 35 years
   ;; Adjusted to ageingplus fractions
   let sum631 S631 + E631 + I631 + R631
   set S631 S631 - (S631 / sum631 * (36.2 * 0.495 * 0.9 * 0.961 ) )  
   set E631 E631 - (E631 / sum631 * (36.2 * 0.495 * 0.9 * 0.961 ) ) 
   set I631 I631 - (I631 / sum631 * (36.2 * 0.495 * 0.9 * 0.961 ) ) 
   set R631 R631 - (R631 / sum631 * (36.2 * 0.495 * 0.9 * 0.961 ) ) 
   
   let sum632 S632 + E632 + I632 + R632
   set S632 S632 - (S632 / sum632 * (36.2 * 0.495 * 0.9 * 0.039) )
   set E632 E632 - (E632 / sum632 * (36.2 * 0.495 * 0.9 * 0.039) )
   set I632 I632 - (I632 / sum632 * (36.2 * 0.495 * 0.9 * 0.039) )
   set R632 R632 - (R632 / sum632 * (36.2 * 0.495 * 0.9 * 0.039) )
   
   let sum611 S611 + E611 + I611 + R611
   set S611 S611 - (S611 / sum611 * (36.2 * 0.495 * 0.1 * 0.961) )
   set E611 E611 - (E611 / sum611 * (36.2 * 0.495 * 0.1 * 0.961) )
   set I611 I611 - (I611 / sum611 * (36.2 * 0.495 * 0.1 * 0.961) )
   set R611 R611 - (R611 / sum611 * (36.2 * 0.495 * 0.1 * 0.961) )
   
   let sum612 S612 + E612 + I612 + R612
   set S612 S612 - (S612 / sum612 * (36.2 * 0.495 * 0.1 * 0.039) )  
   set E612 E612 - (E612 / sum612 * (36.2 * 0.495 * 0.1 * 0.039) )
   set I612 I612 - (I612 / sum612 * (36.2 * 0.495 * 0.1 * 0.039) )
   set R612 R612 - (R612 / sum612 * (36.2 * 0.495 * 0.1 * 0.039) )
   
   let sum36322 S36322 + E36322 + I36322 + R36322
   set S36322 S36322 - (S36322 / sum36322 * (36.2 * 0.505 * 0.8 * 0.167 * 1.0))
   set E36322 E36322 - (E36322 / sum36322 * (36.2 * 0.505 * 0.8 * 0.167 * 1.0))
   set I36322 I36322 - (I36322 / sum36322 * (36.2 * 0.505 * 0.8 * 0.167 * 1.0))
   set R36322 R36322 - (R36322 / sum36322 * (36.2 * 0.505 * 0.8 * 0.167 * 1.0))
   
   let sum36311 S36311 + E36311 + I36311 + R36311
   set S36311 S36311 - (S36311 / sum36311 * (36.2 * 0.505 * 0.8 * 0.833 * 0.961))
   set E36311 E36311 - (E36311 / sum36311 * (36.2 * 0.505 * 0.8 * 0.833 * 0.961)) 
   set I36311 I36311 - (I36311 / sum36311 * (36.2 * 0.505 * 0.8 * 0.833 * 0.961)) 
   set R36311 R36311 - (R36311 / sum36311 * (36.2 * 0.505 * 0.8 * 0.833 * 0.961))
   
   let sum36312 S36312 + E36312 + I36312 + R36312
   set S36312 S36312 - (S36312 / sum36312 * (36.2 * 0.505 * 0.8 * 0.833 * 0.039))
   set E36312 E36312 - (E36312 / sum36312 * (36.2 * 0.505 * 0.8 * 0.833 * 0.039))
   set I36312 I36312 - (I36312 / sum36312 * (36.2 * 0.505 * 0.8 * 0.833 * 0.039))
   set R36312 R36312 - (R36312 / sum36312 * (36.2 * 0.505 * 0.8 * 0.833 * 0.039)) 
   
   let sum36122 S36122 + E36122 + I36122 + R36122
   set S36122 S36122 - (S36122 / sum36122 * (36.2 * 0.505 * 0.2 * 0.167 * 1.0))
   set E36122 E36122 - (E36122 / sum36122 * (36.2 * 0.505 * 0.2 * 0.167 * 1.0))
   set I36122 I36122 - (I36122 / sum36122 * (36.2 * 0.505 * 0.2 * 0.167 * 1.0))
   set R36122 R36122 - (R36122 / sum36122 * (36.2 * 0.505 * 0.2 * 0.167 * 1.0))
   
   let sum36111 S36111 + E36111 + I36111 + R36111
   set S36111 S36111 - (S36111 / sum36111 * (36.2 * 0.505 * 0.2 * 0.833 * 0.961))  
   set E36111 E36111 - (E36111 / sum36111 * (36.2 * 0.505 * 0.2 * 0.833 * 0.961)) 
   set I36111 I36111 - (I36111 / sum36111 * (36.2 * 0.505 * 0.2 * 0.833 * 0.961)) 
   set R36111 R36111 - (R36111 / sum36111 * (36.2 * 0.505 * 0.2 * 0.833 * 0.961)) 
   
   let sum36112 S36112 + E36112 + I36112 + R36112
   set S36112 S36112 - (S36112 / sum36112 * (36.2 * 0.505 * 0.2 * 0.833 * 0.039))
   set E36112 E36112 - (E36112 / sum36112 * (36.2 * 0.505 * 0.2 * 0.833 * 0.039)) 
   set I36112 I36112 - (I36112 / sum36112 * (36.2 * 0.505 * 0.2 * 0.833 * 0.039))
   set R36112 R36112 - (R36112 / sum36112 * (36.2 * 0.505 * 0.2 * 0.833 * 0.039))
   
   ;; 35- 50 years
   ;; Adjusted to ageingplus fractions
   let sum731 S731 + E731 + I731 + R731
   set S731 S731 - (S731 / sum731 * (36.2 * 0.7 * 0.8671 ) ) 
   set E731 E731 - (E731 / sum731 * (36.2 * 0.7 * 0.8671 ) ) 
   set I731 I731 - (I731 / sum731 * (36.2 * 0.7 * 0.8671 ) ) 
   set R731 R731 - (R731 / sum731 * (36.2 * 0.7 * 0.8671 ) )  
   
   let sum732 S732 + E732 + I732 + R732
   set S732 S732 - (S732 / sum732 * (36.2 * 0.7 * 0.1329 ) ) 
   set E732 E732 - (E732 / sum732 * (36.2 * 0.7 * 0.1329 ) )
   set I732 I732 - (I732 / sum732 * (36.2 * 0.7 * 0.1329 ) )
   set R732 R732 - (R732 / sum732 * (36.2 * 0.7 * 0.1329 ) )
   
   let sum711 S711 + E711 + I711 + R711
   set S711 S711 - (S711 / sum711 * (36.2 * 0.3 * 0.8671 ) ) 
   set E711 E711 - (E711 / sum711 * (36.2 * 0.3 * 0.8671 ) )
   set I711 I711 - (I711 / sum711 * (36.2 * 0.3 * 0.8671 ) ) 
   set R711 R711 - (R711 / sum711 * (36.2 * 0.3 * 0.8671 ) )
   
   let sum712 S712 + E712 + I712 + R712
   set S712 S712 - (S712 / sum712 * (36.2 * 0.3 * 0.8671 ) )
   set E712 E712 - (E712 / sum712 * (36.2 * 0.3 * 0.8671 ) )
   set I712 I712 - (I712 / sum712 * (36.2 * 0.3 * 0.8671 ) )
   set R712 R712 - (R712 / sum712 * (36.2 * 0.3 * 0.8671 ) )
   
   ;; 50-65 years
   ;; Adjusted to ageingplus fractions
   let sum831 S831 + E831 + I831 + R831
   set S831 S831 - (S831 / sum831 * (36.2 * 0.7 * 0.9363 ) )
   set E831 E831 - (E831 / sum831 * (36.2 * 0.7 * 0.9363 ) )
   set I831 I831 - (I831 / sum831 * (36.2 * 0.7 * 0.9363 ) )
   set R831 R831 - (R831 / sum831 * (36.2 * 0.7 * 0.9363 ) )
   
   let sum832 S832 + E832 + I832 + R832
   set S832 S832 - (S832 / sum832 * (36.2 * 0.7 * 0.0637 ) )
   set E832 E832 - (E832 / sum832 * (36.2 * 0.7 * 0.0637 ) )
   set I832 I832 - (I832 / sum832 * (36.2 * 0.7 * 0.0637 ) )
   set R832 R832 - (R832 / sum832 * (36.2 * 0.7 * 0.0637 ) )
   
   let sum18111 S18111 + E18111 + I18111 + R18111
   set S18111 S18111 - (S18111 / sum18111 * (36.2 * 0.3 * 0.9363 ) )
   set E18111 E18111 - (E18111 / sum18111 * (36.2 * 0.3 * 0.9363 ) )
   set I18111 I18111 - (I18111 / sum18111 * (36.2 * 0.3 * 0.9363 ) )
   set R18111 R18111 - (R18111 / sum18111 * (36.2 * 0.3 * 0.9363 ) )
   
   let sum18112 S18112 + E18112 + I18112 + R18112
   set S18112 S18112 - (S18112 / sum18112 * (36.2 * 0.3 * 0.0637 ) )
   set E18112 E18112 - (E18112 / sum18112 * (36.2 * 0.3 * 0.0637 ) )
   set I18112 I18112 - (I18112 / sum18112 * (36.2 * 0.3 * 0.0637 ) )
   set R18112 R18112 - (R18112 / sum18112 * (36.2 * 0.3 * 0.0637 ) )
   
   ;; 65+ years
   let sum19111 S19111 + E19111 + I19111 + R19111
   set S19111 S19111 - (S19111 / sum19111 * 36.2) 
   set E19111 E19111 - (E19111 / sum19111 * 36.2) 
   set I19111 I19111 - (I19111 / sum19111 * 36.2) 
   set R19111 R19111 - (R19111 / sum19111 * 36.2) 
   ]
   
   ;;When only testing this population model
   ;set totalsusceptible S112 + S212 + S312 + S422 + S412 + S511 + S631 + S632 + S611 + S612 + S36322 + S36311 + S36312 + S36122 + S36111 + S36112 + S731 + S732 + S711 + S712 + S831 + S832 + S18111 + S18112 + S19111
   ;set totalexposed E112 + E212 + E312 + E422 + E412 + E511 + E631 + E632 + E611 + E612 + E36322 + E36311 + E36312 + E36122 + E36111 + E36112 + E731 + E732 + E711 + E712 + E831 + E832 + E18111 + E18112 + E19111
   ;set totalinfected I112 + I212 + I312 + I422 + I412 + I511 + I631 + I632 + I611 + I612 + I36322 + I36311 + I36312 + I36122 + I36111 + I36112 + I731 + I732 + I711 + I712 + I831 + I832 + I18111 + I18112 + I19111    
   ;set totalrecovered R112 + R212 + R312 + R422 + R412 + R511 + R631 + R632 + R611 + R612 + R36322 + R36311 + R36312 + R36122 + R36111 + R36112 + R731 + R732 + R711 + R712 + R831 + R832 + R18111 + R18112 + R19111

   ;set totalpopulation totalsusceptible + totalexposed + totalinfected + totalrecovered 

   set fractionsusceptible 1 / population * totalsusceptible
   set fractionexposed 1 / population * totalexposed
   set fractioninfected 1 / population * totalinfected
   set fractionrecovered 1 / population * totalrecovered
   
   ;;to check infections in age groups with several unique groups
   set suminfected1217 I422 + I412
   set suminfected2535 I631 + I632 + I611 + I612 + I36322 + I36311 + I36312 + I36122 + I36111 + I36112
   set suminfected3550 I731 + I732 + I711 + I712    
   set suminfected5065 I831 + I832 + I18111 + I18112  
end


