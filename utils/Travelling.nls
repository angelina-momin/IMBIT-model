to visit-travelling-model
  ;till individuals who are 0-5 years or 80+ go 20% less often to gatherings and events. In this model only age group 65+ exist, therefore 7% is reducted. It is assumed that this is the same for holiday and visits.
  set decimalGAET 1
  set traveltotal 0
  set neighbouring 1

  ; Values depend on scenario  
  if ticks = 0 or (ticks - Day-COVID-19-Outbreak) mod Frequency = 0 [
    if (Scenario ="COVID19_History") [visittravelling_covid19_history_neigh]
    if (Scenario ="Road_Map_Scenario") [visittravelling_road_map_scenario_neigh]
    if (Scenario ="Economic_Scenario") [visittravelling_economic_scenario_neigh]
    if (Scenario ="Age_Scenario") [visittravelling_age_scenario_neigh]  
    set travelling0-5yrs_neigh travelling0-5yrs
    set travelling5-12yrs_neigh travelling5-12yrs
    set travelling12-17yrs_neigh travelling12-17yrs
    set travelling17-25yrs_neigh travelling17-25yrs
    set travelling25-35yrs_neigh travelling25-35yrs
    set travelling35-50yrs_neigh travelling35-50yrs
    set travelling50-65yrs_neigh travelling50-65yrs
    set travelling65plusyrs_neigh travelling65plusyrs
    set decimalVT_neigh decimalVT
  ]
  
  set travelling0-5yrs travelling0-5yrs_neigh 
  set travelling5-12yrs travelling5-12yrs_neigh 
  set travelling12-17yrs travelling12-17yrs_neigh 
  set travelling17-25yrs travelling17-25yrs_neigh 
  set travelling25-35yrs travelling25-35yrs_neigh 
  set travelling35-50yrs travelling35-50yrs_neigh 
  set travelling50-65yrs travelling50-65yrs_neigh 
  set travelling65plusyrs travelling65plusyrs_neigh 
  set decimalVT decimalVT_neigh
  
  ; Change travelflow to neighbouring municipalities
  set travelflows my-out-travelneighflows
  ifelse extra-visit-travelling-holiday? [holiday-visittravelling] [normal-visittravelling]  
  ;set VTtotal VTtotal + traveltotal
  
  ; Values depend on scenario
  if ticks = 0 or (ticks - Day-COVID-19-Outbreak) mod Frequency = 0 [
    if (Scenario ="COVID19_History") [visittravelling_covid19_history_non_neigh]
    if (Scenario ="Road_Map_Scenario") [visittravelling_road_map_scenario_non_neigh]
    if (Scenario ="Economic_Scenario") [visittravelling_economic_scenario_non_neigh]
    if (Scenario ="Age_Scenario") [visittravelling_age_scenario_non_neigh]
    set travelling0-5yrs_non_neigh travelling0-5yrs
    set travelling5-12yrs_non_neigh travelling5-12yrs
    set travelling12-17yrs_non_neigh travelling12-17yrs
    set travelling17-25yrs_non_neigh travelling17-25yrs
    set travelling25-35yrs_non_neigh travelling25-35yrs
    set travelling35-50yrs_non_neigh travelling35-50yrs
    set travelling50-65yrs_non_neigh travelling50-65yrs
    set travelling65plusyrs_non_neigh travelling65plusyrs
    set decimalVT_non_neigh decimalVT
  ]
  
  set travelling0-5yrs travelling0-5yrs_non_neigh 
  set travelling5-12yrs travelling5-12yrs_non_neigh 
  set travelling12-17yrs travelling12-17yrs_non_neigh 
  set travelling17-25yrs travelling17-25yrs_non_neigh 
  set travelling25-35yrs travelling25-35yrs_non_neigh 
  set travelling35-50yrs travelling35-50yrs_non_neigh 
  set travelling50-65yrs travelling50-65yrs_non_neigh 
  set travelling65plusyrs travelling65plusyrs_non_neigh 
  set decimalVT decimalVT_non_neigh
  
  ; Change travelflow to nonneighbouring municipalities
  set travelflows my-out-travelnonneighflows
  ifelse extra-visit-travelling-holiday? [holiday-visittravelling] [normal-visittravelling] 
  set VTtotal VTtotal + traveltotal 
end

to gathering-events-travelling-model  
  ;individuals travel less depending on their age. 
  set traveltotal 0
  set travelling0-5yrs 0.76 
  set travelling5-12yrs 1.09
  set travelling12-17yrs 1.14
  set travelling17-25yrs 1.04 
  set travelling25-35yrs 1.12
  set travelling35-50yrs 1.08 
  set travelling50-65yrs 0.97
  set travelling65plusyrs 0.85
  set decimalVT 1
  set decimalGAET decimalGAETcalc
  
  set neighbouring 1.60
  set travelflows my-out-travelneighflows
  ifelse extra-gathering-events-travelling-holiday [holiday-gathering-eventstravelling] [normal-visittravelling] 
  
  set neighbouring 0.78
  set travelflows my-out-travelnonneighflows
  ifelse extra-visit-travelling-holiday? [holiday-visittravelling] [normal-visittravelling] 
  set GAETtotal GAETtotal + traveltotal
end

to normal-visittravelling
   ; travellers
   let dCS112 S112
   let dCI112 I112
   let dCS212 S212 
   let dCI212 I212   
   let dCS312 S312 
   let dCI312 I312 
   let dCS422 S422 
   let dCI422 I422 
   let dCS412 S412   
   let dCI412 I412 
   let dCS511 S511
   let dCI511 I511
   let dCS631 S631 
   let dCI631 I631 
   let dCS632 S632
   let dCI632 I632
   let dCS611 S611  
   let dCI611 I611 
   let dCS26112 S26112 
   let dCI26112 I26112  
   let dCS36322 S36322 
   let dCI36322 I36322  
   let dCS36311 S36311  
   let dCI36311 I36311   
   let dCS36312 S36312 
   let dCI36312 I36312 
   let dCS36122 S36122 
   let dCI36122 I36122 
   let dCS36111 S36111 
   let dCI36111 I36111 
   let dCS36112 S36112 
   let dCI36112 I36112 
   let dCS17311 S17311 
   let dCI17311 I17311 
   let dCS17312 S17312 
   let dCI17312 I17312
   let dCS17111 S17111 
   let dCI17111 I17111 
   let dCS17112 S17112
   let dCI17112 I17112  
   let dCS18311 S18311 
   let dCI18311 I18311
   let dCS18312 S18312  
   let dCI18312 I18312 
   let dCS18111 S18111 
   let dCI18111 I18111 
   let dCS18112 S18112  
   let dCI18112 I18112 
   let dCS19111 S19111 
   let dCI19111 I19111 
  
; non travellers
   let dHS112 S112
   let dHI112 I112
   let dHS212 S212
   let dHI212 I212
   let dHS312 S312
   let dHI312 I312
   let dHS422 S422
   let dHI422 I422
   let dHS412 S412
   let dHI412 I412
   let dHS511 S511
   let dHI511 I511 
   let dHS631 S631 
   let dHI631 I631 
   let dHS632 S632 
   let dHI632 I632 
   let dHS611 S611 
   let dHI611 I611
   let dHS26112 S26112 
   let dHI26112 I26112 
   let dHS36322 S36322 
   let dHI36322 I36322 
   let dHS36311 S36311 
   let dHI36311 I36311   
   let dHS36312 S36312
   let dHI36312 I36312
   let dHS36122 S36122
   let dHI36122 I36122
   let dHS36111 S36111  
   let dHI36111 I36111
   let dHS36112 S36112 
   let dHI36112 I36112
   let dHS17311 S17311
   let dHI17311 I17311 
   let dHS17312 S17312 
   let dHI17312 I17312
   let dHS17111 S17111
   let dHI17111 I17111 
   let dHS17112 S17112 
   let dHI17112 I17112
   let dHS18311 S18311
   let dHI18311 I18311  
   let dHS18312 S18312
   let dHI18312 I18312
   let dHS18111 S18111 
   let dHI18111 I18111 
   let dHS18112 S18112 
   let dHI18112 I18112  
   let dHS19111 S19111  
   let dHI19111 I19111

   let sumnonvisitcommuters (S112 + E112 + I112 + R112 + S212 + E212 + I212 + R212 + S312 + E312 + I312 + R312 + S422 + E422 + I422 + R422 + S412 + E412 + I412 + R412 + S511 + E511 + I511 + R511 + S631 + E631 + I631 + R631 + S632 + E632 + I632 + R632 + S611 + E611 + I611 + R611 + S26112 + E26112 + I26112 + R26112 + S36322 + E36322 + I36322 + R36322 + S36311 + E36311 + I36311 + R36311 + S36312 + E36312 + I36312 + R36312 + S36122 + E36122 + I36122 + R36122 + S36111 + E36111 + I36111 + R36111 + S36112 + E36112 + I36112 + R36112 + S17311 + E17311 + I17311 + R17311 + S17312 + E17312 + I17312 + R17312 + S17111 + E17111 + I17111 + R17111 + S17112 + E17112 + I17112 + R17112 + S18311 + E18311 + I18311 + R18311 + S18312 + E18312 + I18312 + R18312 + S18111 + E18111 + I18111 + R18111 + S18112 + E18112 + I18112 + R18112 + S19111 + E19111 + I19111 + R19111) / 100 * 95
   let sumvisitcommuters (S112 + E112 + I112 + R112 + S212 + E212 + I212 + R212 + S312 + E312 + I312 + R312 + S422 + E422 + I422 + R422 + S412 + E412 + I412 + R412 + S511 + E511 + I511 + R511 + S631 + E631 + I631 + R631 + S632 + E632 + I632 + R632 + S611 + E611 + I611 + R611 + S26112 + E26112 + I26112 + R26112 + S36322 + E36322 + I36322 + R36322 + S36311 + E36311 + I36311 + R36311 + S36312 + E36312 + I36312 + R36312 + S36122 + E36122 + I36122 + R36122 + S36111 + E36111 + I36111 + R36111 + S36112 + E36112 + I36112 + R36112 + S17311 + E17311 + I17311 + R17311 + S17312 + E17312 + I17312 + R17312 + S17111 + E17111 + I17111 + R17111 + S17112 + E17112 + I17112 + R17112 + S18311 + E18311 + I18311 + R18311 + S18312 + E18312 + I18312 + R18312 + S18111 + E18111 + I18111 + R18111 + S18112 + E18112 + I18112 + R18112 + S19111 + E19111 + I19111 + R19111) / 100 * 5    

   ;; only travelling 1 days a week
   ;; To make the model quicker; only travelling is calculated once in seven days. 
   ;; Downside, ds are the same for the seven days, instead of different each day.
   if (ticks mod 7 = 0) [
   
   ;; infected destination municipality dCS * dHI
   ask travelflows [
   if (([I112] of end2) + ([I212] of end2) + ([I312] of end2) + ([I422] of end2) + ([I412] of end2) + ([I511] of end2) + ([I631] of end2) + ([I632] of end2) + ([I611] of end2) + ([I26112] of end2) + ([I36322] of end2) + ([I36311] of end2) + ([I36312] of end2) + ([I36122] of end2) + ([I36111] of end2) + ([I36112] of end2) + ([I17311] of end2) + ([I17312] of end2) + ([I17111] of end2) + ([I17112] of end2) + ([I18311] of end2) + ([I18312] of end2) + ([I18111] of end2) + ([I18112] of end2) + ([I19111] of end2)) > (([sumnonvisitcommuters] of end2) / 100 * travelling-threshold) [
    
       let travellers ([nr-people] of self)
       ask end1[   
          
       if S112 > 0 [
         ;; multiplied by 7, because there are seven days in a week, but it is only calculated once per week.
         ;; More travellers means higher infection chance in municipality. Ranging from 0.5 to 1. Highest nr commuters is around 21200           
            set travelextraS112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS112 * dHI112	 * (item 	0	 commutercontact)) + 	(dCS112 * 	dHI212	 * (item 	1	 commutercontact)) + 	(dCS112 * 	dHI312	 * (item 	2	 commutercontact)) + 	(dCS112 * 	dHI422	 * (item 	3	 commutercontact)) + 	(dCS112 * 	dHI412	 * (item 	4	 commutercontact)) + 	(dCS112 * 	dHI511	 * (item 	5	 commutercontact)) + 	(dCS112 * 	dHI631	 * (item 	6	 commutercontact)) + 	(dCS112 * 	dHI632	 * (item 	7	 commutercontact)) + 	(dCS112 * 	dHI611	 * (item 	8	 commutercontact)) + 	(dCS112 * 	dHI26112	 * (item 	9	 commutercontact)) + 	(dCS112 * 	dHI36322	 * (item 	10	 commutercontact)) + 	(dCS112 * 	dHI36311	 * (item 	11	 commutercontact)) + 	(dCS112 * 	dHI36312	 * (item 	12	 commutercontact)) + 	(dCS112 * 	dHI36122	 * (item 	13	 commutercontact)) + 	(dCS112 * 	dHI36111	 * (item 	14	 commutercontact)) + 	(dCS112 * 	dHI36112	 * (item 	15	 commutercontact)) + 	(dCS112 * 	dHI17311	 * (item 	16	 commutercontact)) + 	(dCS112 * 	dHI17312	 * (item 	17	 commutercontact)) + 	(dCS112 * 	dHI17111	 * (item 	18	 commutercontact)) + 	(dCS112 * 	dHI17112	 * (item 	19	 commutercontact)) + 	(dCS112 * 	dHI18311	 * (item 	20	 commutercontact)) + 	(dCS112 * 	dHI18312	 * (item 	21	 commutercontact)) + 	(dCS112 * 	dHI18111	 * (item 	22	 commutercontact)) + 	(dCS112 * 	dHI18112	 * (item 	23	 commutercontact)) + 	(dCS112 * 	dHI19111	 * (item 	24	 commutercontact)))) * decimalGAET * neighbouring)
            set S112 S112 - travelextraS112 * travelling0-5yrs
            set E112 E112 + travelextraS112 * travelling0-5yrs
            if S112 < 0 [set S112 0]
            if E112 > population [set E112 population]
       ]
                    
       if S212 > 0 [  
            set travelextraS212 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS212 * dHI112	 * (item 	25	 commutercontact)) + 	(dCS212 * 	dHI212	 * (item 	26	 commutercontact)) + 	(dCS212 * 	dHI312	 * (item 	27	 commutercontact)) + 	(dCS212 * 	dHI422	 * (item 	28	 commutercontact)) + 	(dCS212 * 	dHI412	 * (item 	29	 commutercontact)) + 	(dCS212 * 	dHI511	 * (item 	30	 commutercontact)) + 	(dCS212 * 	dHI631	 * (item 	31	 commutercontact)) + 	(dCS212 * 	dHI632	 * (item 	32	 commutercontact)) + 	(dCS212 * 	dHI611	 * (item 	33	 commutercontact)) + 	(dCS212 * 	dHI26112	 * (item 	34	 commutercontact)) + 	(dCS212 * 	dHI36322	 * (item 	35	 commutercontact)) + 	(dCS212 * 	dHI36311	 * (item 	36	 commutercontact)) + 	(dCS212 * 	dHI36312	 * (item 	37	 commutercontact)) + 	(dCS212 * 	dHI36122	 * (item 	38	 commutercontact)) + 	(dCS212 * 	dHI36111	 * (item 	39	 commutercontact)) + 	(dCS212 * 	dHI36112	 * (item 	40	 commutercontact)) + 	(dCS212 * 	dHI17311	 * (item 	41	 commutercontact)) + 	(dCS212 * 	dHI17312	 * (item 	42	 commutercontact)) + 	(dCS212 * 	dHI17111	 * (item 	43	 commutercontact)) + 	(dCS212 * 	dHI17112	 * (item 	44	 commutercontact)) + 	(dCS212 * 	dHI18311	 * (item 	45	 commutercontact)) + 	(dCS212 * 	dHI18312	 * (item 	46	 commutercontact)) + 	(dCS212 * 	dHI18111	 * (item 	47	 commutercontact)) + 	(dCS212 * 	dHI18112	 * (item 	48	 commutercontact)) + 	(dCS212 * 	dHI19111	 * (item 	49	 commutercontact)))) * decimalGAET * neighbouring)
            set S212 S212 - travelextraS212 * travelling0-5yrs
            set E212 E212 + travelextraS212 * travelling0-5yrs
            if S212 < 0 [set S212 0]
            if E212 > population [set E212 population]
       ]
                              
       if S312 > 0 [  
            set travelextraS312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS312 * dHI112	 * (item 	50	 commutercontact)) + 	(dCS312 * 	dHI212	 * (item 	51	 commutercontact)) + 	(dCS312 * 	dHI312	 * (item 	52	 commutercontact)) + 	(dCS312 * 	dHI422	 * (item 	53	 commutercontact)) + 	(dCS312 * 	dHI412	 * (item 	54	 commutercontact)) + 	(dCS312 * 	dHI511	 * (item 	55	 commutercontact)) + 	(dCS312 * 	dHI631	 * (item 	56	 commutercontact)) + 	(dCS312 * 	dHI632	 * (item 	57	 commutercontact)) + 	(dCS312 * 	dHI611	 * (item 	58	 commutercontact)) + 	(dCS312 * 	dHI26112	 * (item 	59	 commutercontact)) + 	(dCS312 * 	dHI36322	 * (item 	60	 commutercontact)) + 	(dCS312 * 	dHI36311	 * (item 	61	 commutercontact)) + 	(dCS312 * 	dHI36312	 * (item 	62	 commutercontact)) + 	(dCS312 * 	dHI36122	 * (item 	63	 commutercontact)) + 	(dCS312 * 	dHI36111	 * (item 	64	 commutercontact)) + 	(dCS312 * 	dHI36112	 * (item 	65	 commutercontact)) + 	(dCS312 * 	dHI17311	 * (item 	66	 commutercontact)) + 	(dCS312 * 	dHI17312	 * (item 	67	 commutercontact)) + 	(dCS312 * 	dHI17111	 * (item 	68	 commutercontact)) + 	(dCS312 * 	dHI17112	 * (item 	69	 commutercontact)) + 	(dCS312 * 	dHI18311	 * (item 	70	 commutercontact)) + 	(dCS312 * 	dHI18312	 * (item 	71	 commutercontact)) + 	(dCS312 * 	dHI18111	 * (item 	72	 commutercontact)) + 	(dCS312 * 	dHI18112	 * (item 	73	 commutercontact)) + 	(dCS312 * 	dHI19111	 * (item 	74	 commutercontact)))) * decimalGAET * neighbouring)
            set S312 S312 - travelextraS312 * travelling5-12yrs
            set E312 E312 + travelextraS312 * travelling5-12yrs
            if S312 < 0 [set S312 0]
            if E312 > population [set E312 population]
       ]
                           
       if S422 > 0 [  
            set travelextraS422 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS422 *	dHI112	 * (item 	75	 commutercontact)) + 	(dCS422 * 	dHI212	 * (item 	76	 commutercontact)) + 	(dCS422 * 	dHI312	 * (item 	77	 commutercontact)) + 	(dCS422 * 	dHI422	 * (item 	78	 commutercontact)) + 	(dCS422 * 	dHI412	 * (item 	79	 commutercontact)) + 	(dCS422 * 	dHI511	 * (item 	80	 commutercontact)) + 	(dCS422 * 	dHI631	 * (item 	81	 commutercontact)) + 	(dCS422 * 	dHI632	 * (item 	82	 commutercontact)) + 	(dCS422 * 	dHI611	 * (item 	83	 commutercontact)) + 	(dCS422 * 	dHI26112	 * (item 	84	 commutercontact)) + 	(dCS422 * 	dHI36322	 * (item 	85	 commutercontact)) + 	(dCS422 * 	dHI36311	 * (item 	86	 commutercontact)) + 	(dCS422 * 	dHI36312	 * (item 	87	 commutercontact)) + 	(dCS422 * 	dHI36122	 * (item 	88	 commutercontact)) + 	(dCS422 * 	dHI36111	 * (item 	89	 commutercontact)) + 	(dCS422 * 	dHI36112	 * (item 	90	 commutercontact)) + 	(dCS422 * 	dHI17311	 * (item 	91	 commutercontact)) + 	(dCS422 * 	dHI17312	 * (item 	92	 commutercontact)) + 	(dCS422 * 	dHI17111	 * (item 	93	 commutercontact)) + 	(dCS422 * 	dHI17112	 * (item 	94	 commutercontact)) + 	(dCS422 * 	dHI18311	 * (item 	95	 commutercontact)) + 	(dCS422 * 	dHI18312	 * (item 	96	 commutercontact)) + 	(dCS422 * 	dHI18111	 * (item 	97	 commutercontact)) + 	(dCS422 * 	dHI18112	 * (item 	98	 commutercontact)) + 	(dCS422 * 	dHI19111	 * (item 	99	 commutercontact)))) * decimalGAET * neighbouring)
            set S422 S422 - travelextraS422 * travelling12-17yrs
            set E422 E422 + travelextraS422 * travelling12-17yrs
            if S422 < 0 [set S422 0]
            if E422 > population [set E422 population]
       ]
                              
       if S412 > 0 [  
            set travelextraS412 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS412 * dHI112	 * (item 	100	 commutercontact)) + 	(dCS412 * 	dHI212	 * (item 	101	 commutercontact)) + 	(dCS412 * 	dHI312	 * (item 	102	 commutercontact)) + 	(dCS412 * 	dHI422	 * (item 	103	 commutercontact)) + 	(dCS412 * 	dHI412	 * (item 	104	 commutercontact)) + 	(dCS412 * 	dHI511	 * (item 	105	 commutercontact)) + 	(dCS412 * 	dHI631	 * (item 	106	 commutercontact)) + 	(dCS412 * 	dHI632	 * (item 	107	 commutercontact)) + 	(dCS412 * 	dHI611	 * (item 	108	 commutercontact)) + 	(dCS412 * 	dHI26112	 * (item 	109	 commutercontact)) + 	(dCS412 * 	dHI36322	 * (item 	110	 commutercontact)) + 	(dCS412 * 	dHI36311	 * (item 	111	 commutercontact)) + 	(dCS412 * 	dHI36312	 * (item 	112	 commutercontact)) + 	(dCS412 * 	dHI36122	 * (item 	113	 commutercontact)) + 	(dCS412 * 	dHI36111	 * (item 	114	 commutercontact)) + 	(dCS412 * 	dHI36112	 * (item 	115	 commutercontact)) + 	(dCS412 * 	dHI17311	 * (item 	116	 commutercontact)) + 	(dCS412 * 	dHI17312	 * (item 	117	 commutercontact)) + 	(dCS412 * 	dHI17111	 * (item 	118	 commutercontact)) + 	(dCS412 * 	dHI17112	 * (item 	119	 commutercontact)) + 	(dCS412 * 	dHI18311	 * (item 	120	 commutercontact)) + 	(dCS412 * 	dHI18312	 * (item 	121	 commutercontact)) + 	(dCS412 * 	dHI18111	 * (item 	122	 commutercontact)) + 	(dCS412 * 	dHI18112	 * (item 	123	 commutercontact)) + 	(dCS412 * 	dHI19111	 * (item 	124	 commutercontact)))) * decimalGAET * neighbouring)
            set S412 S412 - travelextraS412 * travelling12-17yrs
            set E412 E412 + travelextraS412 * travelling12-17yrs
            if S412 < 0 [set S412 0]
            if E412 > population [set E412 population]
       ]
                              
       if S511 > 0 [  
            set travelextraS511 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS511 * dHI112	 * (item 	125	 commutercontact)) + 	(dCS511 * 	dHI212	 * (item 	126	 commutercontact)) + 	(dCS511 * 	dHI312	 * (item 	127	 commutercontact)) + 	(dCS511 * 	dHI422	 * (item 	128	 commutercontact)) + 	(dCS511 * 	dHI412	 * (item 	129	 commutercontact)) + 	(dCS511 * 	dHI511	 * (item 	130	 commutercontact)) + 	(dCS511 * 	dHI631	 * (item 	131	 commutercontact)) + 	(dCS511 * 	dHI632	 * (item 	132	 commutercontact)) + 	(dCS511 * 	dHI611	 * (item 	133	 commutercontact)) + 	(dCS511 * 	dHI26112	 * (item 	134	 commutercontact)) + 	(dCS511 * 	dHI36322	 * (item 	135	 commutercontact)) + 	(dCS511 * 	dHI36311	 * (item 	136	 commutercontact)) + 	(dCS511 * 	dHI36312	 * (item 	137	 commutercontact)) + 	(dCS511 * 	dHI36122	 * (item 	138	 commutercontact)) + 	(dCS511 * 	dHI36111	 * (item 	139	 commutercontact)) + 	(dCS511 * 	dHI36112	 * (item 	140	 commutercontact)) + 	(dCS511 * 	dHI17311	 * (item 	141	 commutercontact)) + 	(dCS511 * 	dHI17312	 * (item 	142	 commutercontact)) + 	(dCS511 * 	dHI17111	 * (item 	143	 commutercontact)) + 	(dCS511 * 	dHI17112	 * (item 	144	 commutercontact)) + 	(dCS511 * 	dHI18311	 * (item 	145	 commutercontact)) + 	(dCS511 * 	dHI18312	 * (item 	146	 commutercontact)) + 	(dCS511 * 	dHI18111	 * (item 	147	 commutercontact)) + 	(dCS511 * 	dHI18112	 * (item 	148	 commutercontact)) + 	(dCS511 * 	dHI19111	 * (item 	149	 commutercontact)))) * decimalGAET * neighbouring)
            set S511 S511 - travelextraS511 * travelling17-25yrs
            set E511 E511 + travelextraS511 * travelling17-25yrs
            if S511 < 0 [set S511 0]
            if E511 > population [set E511 population]
       ]
                              
       if S631 > 0 [  
            set travelextraS631 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS631 *	dHI112	 * (item 	150	 commutercontact)) + 	(dCS631 * 	dHI212	 * (item 	151	 commutercontact)) + 	(dCS631 * 	dHI312	 * (item 	152	 commutercontact)) + 	(dCS631 * 	dHI422	 * (item 	153	 commutercontact)) + 	(dCS631 * 	dHI412	 * (item 	154	 commutercontact)) + 	(dCS631 * 	dHI511	 * (item 	155	 commutercontact)) + 	(dCS631 * 	dHI631	 * (item 	156	 commutercontact)) + 	(dCS631 * 	dHI632	 * (item 	157	 commutercontact)) + 	(dCS631 * 	dHI611	 * (item 	158	 commutercontact)) + 	(dCS631 * 	dHI26112	 * (item 	159	 commutercontact)) + 	(dCS631 * 	dHI36322	 * (item 	160	 commutercontact)) + 	(dCS631 * 	dHI36311	 * (item 	161	 commutercontact)) + 	(dCS631 * 	dHI36312	 * (item 	162	 commutercontact)) + 	(dCS631 * 	dHI36122	 * (item 	163	 commutercontact)) + 	(dCS631 * 	dHI36111	 * (item 	164	 commutercontact)) + 	(dCS631 * 	dHI36112	 * (item 	165	 commutercontact)) + 	(dCS631 * 	dHI17311	 * (item 	166	 commutercontact)) + 	(dCS631 * 	dHI17312	 * (item 	167	 commutercontact)) + 	(dCS631 * 	dHI17111	 * (item 	168	 commutercontact)) + 	(dCS631 * 	dHI17112	 * (item 	169	 commutercontact)) + 	(dCS631 * 	dHI18311	 * (item 	170	 commutercontact)) + 	(dCS631 * 	dHI18312	 * (item 	171	 commutercontact)) + 	(dCS631 * 	dHI18111	 * (item 	172	 commutercontact)) + 	(dCS631 * 	dHI18112	 * (item 	173	 commutercontact)) + 	(dCS631 * 	dHI19111	 * (item 	174	 commutercontact)))) * decimalGAET * neighbouring)
            set S631 S631 - travelextraS631 * travelling25-35yrs
            set E631 E631 + travelextraS631 * travelling25-35yrs
            if S631 < 0 [set S631 0]
            if E631 > population [set E631 population]
       ]
                              
       if S632 > 0 [  
            set travelextraS632 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS632 * dHI112	 * (item 	175	 commutercontact)) + 	(dCS632 * 	dHI212	 * (item 	176	 commutercontact)) + 	(dCS632 * 	dHI312	 * (item 	177	 commutercontact)) + 	(dCS632 * 	dHI422	 * (item 	178	 commutercontact)) + 	(dCS632 * 	dHI412	 * (item 	179	 commutercontact)) + 	(dCS632 * 	dHI511	 * (item 	180	 commutercontact)) + 	(dCS632 * 	dHI631	 * (item 	181	 commutercontact)) + 	(dCS632 * 	dHI632	 * (item 	182	 commutercontact)) + 	(dCS632 * 	dHI611	 * (item 	183	 commutercontact)) + 	(dCS632 * 	dHI26112	 * (item 	184	 commutercontact)) + 	(dCS632 * 	dHI36322	 * (item 	185	 commutercontact)) + 	(dCS632 * 	dHI36311	 * (item 	186	 commutercontact)) + 	(dCS632 * 	dHI36312	 * (item 	187	 commutercontact)) + 	(dCS632 * 	dHI36122	 * (item 	188	 commutercontact)) + 	(dCS632 * 	dHI36111	 * (item 	189	 commutercontact)) + 	(dCS632 * 	dHI36112	 * (item 	190	 commutercontact)) + 	(dCS632 * 	dHI17311	 * (item 	191	 commutercontact)) + 	(dCS632 * 	dHI17312	 * (item 	192	 commutercontact)) + 	(dCS632 * 	dHI17111	 * (item 	193	 commutercontact)) + 	(dCS632 * 	dHI17112	 * (item 	194	 commutercontact)) + 	(dCS632 * 	dHI18311	 * (item 	195	 commutercontact)) + 	(dCS632 * 	dHI18312	 * (item 	196	 commutercontact)) + 	(dCS632 * 	dHI18111	 * (item 	197	 commutercontact)) + 	(dCS632 * 	dHI18112	 * (item 	198	 commutercontact)) + 	(dCS632 * 	dHI19111	 * (item 	199	 commutercontact)))) * decimalGAET * neighbouring)
            set S632 S632 - travelextraS632 * travelling25-35yrs
            set E632 E632 + travelextraS632 * travelling25-35yrs
            if S632 < 0 [set S632 0]
            if E632 > population [set E632 population]
       ]  
          
       if S611 > 0 [  
            set travelextraS611 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS611 * dHI112	 * (item 	200	 commutercontact)) + 	(dCS611 * 	dHI212	 * (item 	201	 commutercontact)) + 	(dCS611 * 	dHI312	 * (item 	202	 commutercontact)) + 	(dCS611 * 	dHI422	 * (item 	203	 commutercontact)) + 	(dCS611 * 	dHI412	 * (item 	204	 commutercontact)) + 	(dCS611 * 	dHI511	 * (item 	205	 commutercontact)) + 	(dCS611 * 	dHI631	 * (item 	206	 commutercontact)) + 	(dCS611 * 	dHI632	 * (item 	207	 commutercontact)) + 	(dCS611 * 	dHI611	 * (item 	208	 commutercontact)) + 	(dCS611 * 	dHI26112	 * (item 	209	 commutercontact)) + 	(dCS611 * 	dHI36322	 * (item 	210	 commutercontact)) + 	(dCS611 * 	dHI36311	 * (item 	211	 commutercontact)) + 	(dCS611 * 	dHI36312	 * (item 	212	 commutercontact)) + 	(dCS611 * 	dHI36122	 * (item 	213	 commutercontact)) + 	(dCS611 * 	dHI36111	 * (item 	214	 commutercontact)) + 	(dCS611 * 	dHI36112	 * (item 	215	 commutercontact)) + 	(dCS611 * 	dHI17311	 * (item 	216	 commutercontact)) + 	(dCS611 * 	dHI17312	 * (item 	217	 commutercontact)) + 	(dCS611 * 	dHI17111	 * (item 	218	 commutercontact)) + 	(dCS611 * 	dHI17112	 * (item 	219	 commutercontact)) + 	(dCS611 * 	dHI18311	 * (item 	220	 commutercontact)) + 	(dCS611 * 	dHI18312	 * (item 	221	 commutercontact)) + 	(dCS611 * 	dHI18111	 * (item 	222	 commutercontact)) + 	(dCS611 * 	dHI18112	 * (item 	223	 commutercontact)) + 	(dCS611 * 	dHI19111	 * (item 	224	 commutercontact)))) * decimalGAET * neighbouring)
            set S611 S611 - travelextraS611 * travelling25-35yrs
            set E611 E611 + travelextraS611 * travelling25-35yrs
            if S611 < 0 [set S611 0]
            if E611 > population [set E611 population]
       ]
     
       if S26112 > 0 [  
            set travelextraS26112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS26112 * dHI112	 * (item 	225	 commutercontact)) + 	(dCS26112 * 	dHI212	 * (item 	226	 commutercontact)) + 	(dCS26112 * 	dHI312	 * (item 	227	 commutercontact)) + 	(dCS26112 * 	dHI422	 * (item 	228	 commutercontact)) + 	(dCS26112 * 	dHI412	 * (item 	229	 commutercontact)) + 	(dCS26112 * 	dHI511	 * (item 	230	 commutercontact)) + 	(dCS26112 * 	dHI631	 * (item 	231	 commutercontact)) + 	(dCS26112 * 	dHI632	 * (item 	232	 commutercontact)) + 	(dCS26112 * 	dHI611	 * (item 	233	 commutercontact)) + 	(dCS26112 * 	dHI26112	 * (item 	234	 commutercontact)) + 	(dCS26112 * 	dHI36322	 * (item 	235	 commutercontact)) + 	(dCS26112 * 	dHI36311	 * (item 	236	 commutercontact)) + 	(dCS26112 * 	dHI36312	 * (item 	237	 commutercontact)) + 	(dCS26112 * 	dHI36122	 * (item 	238	 commutercontact)) + 	(dCS26112 * 	dHI36111	 * (item 	239	 commutercontact)) + 	(dCS26112 * 	dHI36112	 * (item 	240	 commutercontact)) + 	(dCS26112 * 	dHI17311	 * (item 	241	 commutercontact)) + 	(dCS26112 * 	dHI17312	 * (item 	242	 commutercontact)) + 	(dCS26112 * 	dHI17111	 * (item 	243	 commutercontact)) + 	(dCS26112 * 	dHI17112	 * (item 	244	 commutercontact)) + 	(dCS26112 * 	dHI18311	 * (item 	245	 commutercontact)) + 	(dCS26112 * 	dHI18312	 * (item 	246	 commutercontact)) + 	(dCS26112 * 	dHI18111	 * (item 	247	 commutercontact)) + 	(dCS26112 * 	dHI18112	 * (item 	248	 commutercontact)) + 	(dCS26112 * 	dHI19111	 * (item 	249	 commutercontact)))) * decimalGAET * neighbouring)
            set S26112 S26112 - travelextraS26112 * travelling25-35yrs
            set E26112 E26112 + travelextraS26112 * travelling25-35yrs
            if S26112 < 0 [set S26112 0]
            if E26112 > population [set E26112 population]
       ]        
          
       if S36322 > 0 [  
            set travelextraS36322 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS36322 * dHI112	 * (item 	250	 commutercontact)) + 	(dCS36322 * 	dHI212	 * (item 	251	 commutercontact)) + 	(dCS36322 * 	dHI312	 * (item 	252	 commutercontact)) + 	(dCS36322 * 	dHI422	 * (item 	253	 commutercontact)) + 	(dCS36322 * 	dHI412	 * (item 	254	 commutercontact)) + 	(dCS36322 * 	dHI511	 * (item 	255	 commutercontact)) + 	(dCS36322 * 	dHI631	 * (item 	256	 commutercontact)) + 	(dCS36322 * 	dHI632	 * (item 	257	 commutercontact)) + 	(dCS36322 * 	dHI611	 * (item 	258	 commutercontact)) + 	(dCS36322 * 	dHI26112	 * (item 	259	 commutercontact)) + 	(dCS36322 * 	dHI36322	 * (item 	260	 commutercontact)) + 	(dCS36322 * 	dHI36311	 * (item 	261	 commutercontact)) + 	(dCS36322 * 	dHI36312	 * (item 	262	 commutercontact)) + 	(dCS36322 * 	dHI36122	 * (item 	263	 commutercontact)) + 	(dCS36322 * 	dHI36111	 * (item 	264	 commutercontact)) + 	(dCS36322 * 	dHI36112	 * (item 	265	 commutercontact)) + 	(dCS36322 * 	dHI17311	 * (item 	266	 commutercontact)) + 	(dCS36322 * 	dHI17312	 * (item 	267	 commutercontact)) + 	(dCS36322 * 	dHI17111	 * (item 	268	 commutercontact)) + 	(dCS36322 * 	dHI17112	 * (item 	269	 commutercontact)) + 	(dCS36322 * 	dHI18311	 * (item 	270	 commutercontact)) + 	(dCS36322 * 	dHI18312	 * (item 	271	 commutercontact)) + 	(dCS36322 * 	dHI18111	 * (item 	272	 commutercontact)) + 	(dCS36322 * 	dHI18112	 * (item 	273	 commutercontact)) + 	(dCS36322 * 	dHI19111	 * (item 	274	 commutercontact)))) * decimalGAET * neighbouring)
            set S36322 S36322 - travelextraS36322 * travelling25-35yrs
            set E36322 E36322 + travelextraS36322 * travelling25-35yrs
            if S36322 < 0 [set S36322 0]
            if E36322 > population [set E36322 population]
       ]             
          
       if S36311 > 0 [  
            set travelextraS36311 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS36311 * dHI112	 * (item 	275	 commutercontact)) + 	(dCS36311 * 	dHI212	 * (item 	276	 commutercontact)) + 	(dCS36311 * 	dHI312	 * (item 	277	 commutercontact)) + 	(dCS36311 * 	dHI422	 * (item 	278	 commutercontact)) + 	(dCS36311 * 	dHI412	 * (item 	279	 commutercontact)) + 	(dCS36311 * 	dHI511	 * (item 	280	 commutercontact)) + 	(dCS36311 * 	dHI631	 * (item 	281	 commutercontact)) + 	(dCS36311 * 	dHI632	 * (item 	282	 commutercontact)) + 	(dCS36311 * 	dHI611	 * (item 	283	 commutercontact)) + 	(dCS36311 * 	dHI26112	 * (item 	284	 commutercontact)) + 	(dCS36311 * 	dHI36322	 * (item 	285	 commutercontact)) + 	(dCS36311 * 	dHI36311	 * (item 	286	 commutercontact)) + 	(dCS36311 * 	dHI36312	 * (item 	287	 commutercontact)) + 	(dCS36311 * 	dHI36122	 * (item 	288	 commutercontact)) + 	(dCS36311 * 	dHI36111	 * (item 	289	 commutercontact)) + 	(dCS36311 * 	dHI36112	 * (item 	290	 commutercontact)) + 	(dCS36311 * 	dHI17311	 * (item 	291	 commutercontact)) + 	(dCS36311 * 	dHI17312	 * (item 	292	 commutercontact)) + 	(dCS36311 * 	dHI17111	 * (item 	293	 commutercontact)) + 	(dCS36311 * 	dHI17112	 * (item 	294	 commutercontact)) + 	(dCS36311 * 	dHI18311	 * (item 	295	 commutercontact)) + 	(dCS36311 * 	dHI18312	 * (item 	296	 commutercontact)) + 	(dCS36311 * 	dHI18111	 * (item 	297	 commutercontact)) + 	(dCS36311 * 	dHI18112	 * (item 	298	 commutercontact)) + 	(dCS36311 * 	dHI19111	 * (item 	299	 commutercontact)))) * decimalGAET * neighbouring)
            set S36311 S36311 - travelextraS36311 * travelling25-35yrs
            set E36311 E36311 + travelextraS36311 * travelling25-35yrs
            if S36311 < 0 [set S36311 0]
            if E36311 > population [set E36311 population]
       ]   
          
       if S36312 > 0 [  
            set travelextraS36312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS36312 * dHI112	 * (item 	300	 commutercontact)) + 	(dCS36312 * 	dHI212	 * (item 	301	 commutercontact)) + 	(dCS36312 * 	dHI312	 * (item 	302	 commutercontact)) + 	(dCS36312 * 	dHI422	 * (item 	303	 commutercontact)) + 	(dCS36312 * 	dHI412	 * (item 	304	 commutercontact)) + 	(dCS36312 * 	dHI511	 * (item 	305	 commutercontact)) + 	(dCS36312 * 	dHI631	 * (item 	306	 commutercontact)) + 	(dCS36312 * 	dHI632	 * (item 	307	 commutercontact)) + 	(dCS36312 * 	dHI611	 * (item 	308	 commutercontact)) + 	(dCS36312 * 	dHI26112	 * (item 	309	 commutercontact)) + 	(dCS36312 * 	dHI36322	 * (item 	310	 commutercontact)) + 	(dCS36312 * 	dHI36311	 * (item 	311	 commutercontact)) + 	(dCS36312 * 	dHI36312	 * (item 	312	 commutercontact)) + 	(dCS36312 * 	dHI36122	 * (item 	313	 commutercontact)) + 	(dCS36312 * 	dHI36111	 * (item 	314	 commutercontact)) + 	(dCS36312 * 	dHI36112	 * (item 	315	 commutercontact)) + 	(dCS36312 * 	dHI17311	 * (item 	316	 commutercontact)) + 	(dCS36312 * 	dHI17312	 * (item 	317	 commutercontact)) + 	(dCS36312 * 	dHI17111	 * (item 	318	 commutercontact)) + 	(dCS36312 * 	dHI17112	 * (item 	319	 commutercontact)) + 	(dCS36312 * 	dHI18311	 * (item 	320	 commutercontact)) + 	(dCS36312 * 	dHI18312	 * (item 	321	 commutercontact)) + 	(dCS36312 * 	dHI18111	 * (item 	322	 commutercontact)) + 	(dCS36312 * 	dHI18112	 * (item 	323	 commutercontact)) + 	(dCS36312 * 	dHI19111	 * (item 	324	 commutercontact)))) * decimalGAET * neighbouring)
            set S36312 S36312 - travelextraS36312 * travelling25-35yrs
            set E36312 E36312 + travelextraS36312 * travelling25-35yrs
            if S36312 < 0 [set S36312 0]
            if E36312 > population [set E36312 population]
       ]
                              
       if S36122 > 0 [  
            set travelextraS36122 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS36122 * dHI112	 * (item 	325	 commutercontact)) + 	(dCS36122 * 	dHI212	 * (item 	326	 commutercontact)) + 	(dCS36122 * 	dHI312	 * (item 	327	 commutercontact)) + 	(dCS36122 * 	dHI422	 * (item 	328	 commutercontact)) + 	(dCS36122 * 	dHI412	 * (item 	329	 commutercontact)) + 	(dCS36122 * 	dHI511	 * (item 	330	 commutercontact)) + 	(dCS36122 * 	dHI631	 * (item 	331	 commutercontact)) + 	(dCS36122 * 	dHI632	 * (item 	332	 commutercontact)) + 	(dCS36122 * 	dHI611	 * (item 	333	 commutercontact)) + 	(dCS36122 * 	dHI26112	 * (item 	334	 commutercontact)) + 	(dCS36122 * 	dHI36322	 * (item 	335	 commutercontact)) + 	(dCS36122 * 	dHI36311	 * (item 	336	 commutercontact)) + 	(dCS36122 * 	dHI36312	 * (item 	337	 commutercontact)) + 	(dCS36122 * 	dHI36122	 * (item 	338	 commutercontact)) + 	(dCS36122 * 	dHI36111	 * (item 	339	 commutercontact)) + 	(dCS36122 * 	dHI36112	 * (item 	340	 commutercontact)) + 	(dCS36122 * 	dHI17311	 * (item 	341	 commutercontact)) + 	(dCS36122 * 	dHI17312	 * (item 	342	 commutercontact)) + 	(dCS36122 * 	dHI17111	 * (item 	343	 commutercontact)) + 	(dCS36122 * 	dHI17112	 * (item 	344	 commutercontact)) + 	(dCS36122 * 	dHI18311	 * (item 	345	 commutercontact)) + 	(dCS36122 * 	dHI18312	 * (item 	346	 commutercontact)) + 	(dCS36122 * 	dHI18111	 * (item 	347	 commutercontact)) + 	(dCS36122 * 	dHI18112	 * (item 	348	 commutercontact)) + 	(dCS36122 * 	dHI19111	 * (item 	349	 commutercontact)))) * decimalGAET * neighbouring)
            set S36122 S36122 - travelextraS36122 * travelling25-35yrs
            set E36122 E36122 + travelextraS36122 * travelling25-35yrs
            if S36122 < 0 [set S36122 0]
            if E36122 > population [set E36122 population]
       ]
                              
       if S36111 > 0 [  
            set travelextraS36111 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS36111 * dHI112	 * (item 	350	 commutercontact)) + 	(dCS36111 * 	dHI212	 * (item 	351	 commutercontact)) + 	(dCS36111 * 	dHI312	 * (item 	352	 commutercontact)) + 	(dCS36111 * 	dHI422	 * (item 	353	 commutercontact)) + 	(dCS36111 * 	dHI412	 * (item 	354	 commutercontact)) + 	(dCS36111 * 	dHI511	 * (item 	355	 commutercontact)) + 	(dCS36111 * 	dHI631	 * (item 	356	 commutercontact)) + 	(dCS36111 * 	dHI632	 * (item 	357	 commutercontact)) + 	(dCS36111 * 	dHI611	 * (item 	358	 commutercontact)) + 	(dCS36111 * 	dHI26112	 * (item 	359	 commutercontact)) + 	(dCS36111 * 	dHI36322	 * (item 	360	 commutercontact)) + 	(dCS36111 * 	dHI36311	 * (item 	361	 commutercontact)) + 	(dCS36111 * 	dHI36312	 * (item 	362	 commutercontact)) + 	(dCS36111 * 	dHI36122	 * (item 	363	 commutercontact)) + 	(dCS36111 * 	dHI36111	 * (item 	364	 commutercontact)) + 	(dCS36111 * 	dHI36112	 * (item 	365	 commutercontact)) + 	(dCS36111 * 	dHI17311	 * (item 	366	 commutercontact)) + 	(dCS36111 * 	dHI17312	 * (item 	367	 commutercontact)) + 	(dCS36111 * 	dHI17111	 * (item 	368	 commutercontact)) + 	(dCS36111 * 	dHI17112	 * (item 	369	 commutercontact)) + 	(dCS36111 * 	dHI18311	 * (item 	370	 commutercontact)) + 	(dCS36111 * 	dHI18312	 * (item 	371	 commutercontact)) + 	(dCS36111 * 	dHI18111	 * (item 	372	 commutercontact)) + 	(dCS36111 * 	dHI18112	 * (item 	373	 commutercontact)) + 	(dCS36111 * 	dHI19111	 * (item 	374	 commutercontact)))) * decimalGAET * neighbouring)
            set S36111 S36111 - travelextraS36111 * travelling25-35yrs
            set E36111 E36111 + travelextraS36111 * travelling25-35yrs
            if S36111 < 0 [set S36111 0]
            if E36111 > population [set E36111 population]
       ]          
        
       if S36112 > 0 [  
            set travelextraS36112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS36112 *	dHI112	 * (item 	375	 commutercontact)) + 	(dCS36112 * 	dHI212	 * (item 	376	 commutercontact)) + 	(dCS36112 * 	dHI312	 * (item 	377	 commutercontact)) + 	(dCS36112 * 	dHI422	 * (item 	378	 commutercontact)) + 	(dCS36112 * 	dHI412	 * (item 	379	 commutercontact)) + 	(dCS36112 * 	dHI511	 * (item 	380	 commutercontact)) + 	(dCS36112 * 	dHI631	 * (item 	381	 commutercontact)) + 	(dCS36112 * 	dHI632	 * (item 	382	 commutercontact)) + 	(dCS36112 * 	dHI611	 * (item 	383	 commutercontact)) + 	(dCS36112 * 	dHI26112	 * (item 	384	 commutercontact)) + 	(dCS36112 * 	dHI36322	 * (item 	385	 commutercontact)) + 	(dCS36112 * 	dHI36311	 * (item 	386	 commutercontact)) + 	(dCS36112 * 	dHI36312	 * (item 	387	 commutercontact)) + 	(dCS36112 * 	dHI36122	 * (item 	388	 commutercontact)) + 	(dCS36112 * 	dHI36111	 * (item 	389	 commutercontact)) + 	(dCS36112 * 	dHI36112	 * (item 	390	 commutercontact)) + 	(dCS36112 * 	dHI17311	 * (item 	391	 commutercontact)) + 	(dCS36112 * 	dHI17312	 * (item 	392	 commutercontact)) + 	(dCS36112 * 	dHI17111	 * (item 	393	 commutercontact)) + 	(dCS36112 * 	dHI17112	 * (item 	394	 commutercontact)) + 	(dCS36112 * 	dHI18311	 * (item 	395	 commutercontact)) + 	(dCS36112 * 	dHI18312	 * (item 	396	 commutercontact)) + 	(dCS36112 * 	dHI18111	 * (item 	397	 commutercontact)) + 	(dCS36112 * 	dHI18112	 * (item 	398	 commutercontact)) + 	(dCS36112 * 	dHI19111	 * (item 	399	 commutercontact)))) * decimalGAET * neighbouring)
            set S36112 S36112 - travelextraS36112 * travelling25-35yrs
            set E36112 E36112 + travelextraS36112 * travelling25-35yrs
            if S36112 < 0 [set S36112 0]
            if E36112 > population [set E36112 population]
       ]          
                              
       if S17311 > 0 [  
            set travelextraS17311 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS17311 *	dHI112	 * (item 	400	 commutercontact)) + 	(dCS17311 * 	dHI212	 * (item 	401	 commutercontact)) + 	(dCS17311 * 	dHI312	 * (item 	402	 commutercontact)) + 	(dCS17311 * 	dHI422	 * (item 	403	 commutercontact)) + 	(dCS17311 * 	dHI412	 * (item 	404	 commutercontact)) + 	(dCS17311 * 	dHI511	 * (item 	405	 commutercontact)) + 	(dCS17311 * 	dHI631	 * (item 	406	 commutercontact)) + 	(dCS17311 * 	dHI632	 * (item 	407	 commutercontact)) + 	(dCS17311 * 	dHI611	 * (item 	408	 commutercontact)) + 	(dCS17311 * 	dHI26112	 * (item 	409	 commutercontact)) + 	(dCS17311 * 	dHI36322	 * (item 	410	 commutercontact)) + 	(dCS17311 * 	dHI36311	 * (item 	411	 commutercontact)) + 	(dCS17311 * 	dHI36312	 * (item 	412	 commutercontact)) + 	(dCS17311 * 	dHI36122	 * (item 	413	 commutercontact)) + 	(dCS17311 * 	dHI36111	 * (item 	414	 commutercontact)) + 	(dCS17311 * 	dHI36112	 * (item 	415	 commutercontact)) + 	(dCS17311 * 	dHI17311	 * (item 	416	 commutercontact)) + 	(dCS17311 * 	dHI17312	 * (item 	417	 commutercontact)) + 	(dCS17311 * 	dHI17111	 * (item 	418	 commutercontact)) + 	(dCS17311 * 	dHI17112	 * (item 	419	 commutercontact)) + 	(dCS17311 * 	dHI18311	 * (item 	420	 commutercontact)) + 	(dCS17311 * 	dHI18312	 * (item 	421	 commutercontact)) + 	(dCS17311 * 	dHI18111	 * (item 	422	 commutercontact)) + 	(dCS17311 * 	dHI18112	 * (item 	423	 commutercontact)) + 	(dCS17311 * 	dHI19111	 * (item 	424	 commutercontact)))) * decimalGAET * neighbouring)
            set S17311 S17311 - travelextraS17311 * travelling35-50yrs
            set E17311 E17311 + travelextraS17311 * travelling35-50yrs
            if S17311 < 0 [set S17311 0]
            if E17311 > population [set E17311 population]
       ]          
                              
       if S17312 > 0 [  
            set travelextraS17312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS17312 *	dHI112	 * (item 	425	 commutercontact)) + 	(dCS17312 * 	dHI212	 * (item 	426	 commutercontact)) + 	(dCS17312 * 	dHI312	 * (item 	427	 commutercontact)) + 	(dCS17312 * 	dHI422	 * (item 	428	 commutercontact)) + 	(dCS17312 * 	dHI412	 * (item 	429	 commutercontact)) + 	(dCS17312 * 	dHI511	 * (item 	430	 commutercontact)) + 	(dCS17312 * 	dHI631	 * (item 	431	 commutercontact)) + 	(dCS17312 * 	dHI632	 * (item 	432	 commutercontact)) + 	(dCS17312 * 	dHI611	 * (item 	433	 commutercontact)) + 	(dCS17312 * 	dHI26112	 * (item 	434	 commutercontact)) + 	(dCS17312 * 	dHI36322	 * (item 	435	 commutercontact)) + 	(dCS17312 * 	dHI36311	 * (item 	436	 commutercontact)) + 	(dCS17312 * 	dHI36312	 * (item 	437	 commutercontact)) + 	(dCS17312 * 	dHI36122	 * (item 	438	 commutercontact)) + 	(dCS17312 * 	dHI36111	 * (item 	439	 commutercontact)) + 	(dCS17312 * 	dHI36112	 * (item 	440	 commutercontact)) + 	(dCS17312 * 	dHI17311	 * (item 	441	 commutercontact)) + 	(dCS17312 * 	dHI17312	 * (item 	442	 commutercontact)) + 	(dCS17312 * 	dHI17111	 * (item 	443	 commutercontact)) + 	(dCS17312 * 	dHI17112	 * (item 	444	 commutercontact)) + 	(dCS17312 * 	dHI18311	 * (item 	445	 commutercontact)) + 	(dCS17312 * 	dHI18312	 * (item 	446	 commutercontact)) + 	(dCS17312 * 	dHI18111	 * (item 	447	 commutercontact)) + 	(dCS17312 * 	dHI18112	 * (item 	448	 commutercontact)) + 	(dCS17312 * 	dHI19111	 * (item 	449	 commutercontact)))) * decimalGAET * neighbouring)
            set S17312 S17312 - travelextraS17312 * travelling35-50yrs
            set E17312 E17312 + travelextraS17312 * travelling35-50yrs
            if S17312 < 0 [set S17312 0]
            if E17312 > population [set E17312 population]
       ]          
                              
       if S17111 > 0 [  
            set travelextraS17111 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS17111 *	dHI112	 * (item 	450	 commutercontact)) + 	(dCS17111 * 	dHI212	 * (item 	451	 commutercontact)) + 	(dCS17111 * 	dHI312	 * (item 	452	 commutercontact)) + 	(dCS17111 * 	dHI422	 * (item 	453	 commutercontact)) + 	(dCS17111 * 	dHI412	 * (item 	454	 commutercontact)) + 	(dCS17111 * 	dHI511	 * (item 	455	 commutercontact)) + 	(dCS17111 * 	dHI631	 * (item 	456	 commutercontact)) + 	(dCS17111 * 	dHI632	 * (item 	457	 commutercontact)) + 	(dCS17111 * 	dHI611	 * (item 	458	 commutercontact)) + 	(dCS17111 * 	dHI26112	 * (item 	459	 commutercontact)) + 	(dCS17111 * 	dHI36322	 * (item 	460	 commutercontact)) + 	(dCS17111 * 	dHI36311	 * (item 	461	 commutercontact)) + 	(dCS17111 * 	dHI36312	 * (item 	462	 commutercontact)) + 	(dCS17111 * 	dHI36122	 * (item 	463	 commutercontact)) + 	(dCS17111 * 	dHI36111	 * (item 	464	 commutercontact)) + 	(dCS17111 * 	dHI36112	 * (item 	465	 commutercontact)) + 	(dCS17111 * 	dHI17311	 * (item 	466	 commutercontact)) + 	(dCS17111 * 	dHI17312	 * (item 	467	 commutercontact)) + 	(dCS17111 * 	dHI17111	 * (item 	468	 commutercontact)) + 	(dCS17111 * 	dHI17112	 * (item 	469	 commutercontact)) + 	(dCS17111 * 	dHI18311	 * (item 	470	 commutercontact)) + 	(dCS17111 * 	dHI18312	 * (item 	471	 commutercontact)) + 	(dCS17111 * 	dHI18111	 * (item 	472	 commutercontact)) + 	(dCS17111 * 	dHI18112	 * (item 	473	 commutercontact)) + 	(dCS17111 * 	dHI19111	 * (item 	474	 commutercontact)))) * decimalGAET * neighbouring)
            set S17111 S17111 - travelextraS17111 * travelling35-50yrs
            set E17111 E17111 + travelextraS17111 * travelling35-50yrs
            if S17111 < 0 [set S17111 0]
            if E17111 > population [set E17111 population]
       ]          
                              
       if S17112 > 0 [  
            set travelextraS17112 (((0.5 + (1 / 14900 * travellers * 0.5)) * ((dCS17112 * dHI112	 * (item 	475	 commutercontact)) + 	(dCS17112 * 	dHI212	 * (item 	476	 commutercontact)) + 	(dCS17112 * 	dHI312	 * (item 	477	 commutercontact)) + 	(dCS17112 * 	dHI422	 * (item 	478	 commutercontact)) + 	(dCS17112 * 	dHI412	 * (item 	479	 commutercontact)) + 	(dCS17112 * 	dHI511	 * (item 	480	 commutercontact)) + 	(dCS17112 * 	dHI631	 * (item 	481	 commutercontact)) + 	(dCS17112 * 	dHI632	 * (item 	482	 commutercontact)) + 	(dCS17112 * 	dHI611	 * (item 	483	 commutercontact)) + 	(dCS17112 * 	dHI26112	 * (item 	484	 commutercontact)) + 	(dCS17112 * 	dHI36322	 * (item 	485	 commutercontact)) + 	(dCS17112 * 	dHI36311	 * (item 	486	 commutercontact)) + 	(dCS17112 * 	dHI36312	 * (item 	487	 commutercontact)) + 	(dCS17112 * 	dHI36122	 * (item 	488	 commutercontact)) + 	(dCS17112 * 	dHI36111	 * (item 	489	 commutercontact)) + 	(dCS17112 * 	dHI36112	 * (item 	490	 commutercontact)) + 	(dCS17112 * 	dHI17311	 * (item 	491	 commutercontact)) + 	(dCS17112 * 	dHI17312	 * (item 	492	 commutercontact)) + 	(dCS17112 * 	dHI17111	 * (item 	493	 commutercontact)) + 	(dCS17112 * 	dHI17112	 * (item 	494	 commutercontact)) + 	(dCS17112 * 	dHI18311	 * (item 	495	 commutercontact)) + 	(dCS17112 * 	dHI18312	 * (item 	496	 commutercontact)) + 	(dCS17112 * 	dHI18111	 * (item 	497	 commutercontact)) + 	(dCS17112 * 	dHI18112	 * (item 	498	 commutercontact)) + 	(dCS17112 * 	dHI19111	 * (item 	499	 commutercontact)))) * decimalGAET * neighbouring)
            set S17112 S17112 - travelextraS17112 * travelling35-50yrs 
            set E17112 E17112 + travelextraS17112 * travelling35-50yrs
            if S17112 < 0 [set S17112 0]
            if E17112 > population [set E17112 population]
       ]          
                              
       if S18311 > 0 [  
            set travelextraS18311 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS18311 *	dHI112	 * (item 	500	 commutercontact)) + 	(dCS18311 * 	dHI212	 * (item 	501	 commutercontact)) + 	(dCS18311 * 	dHI312	 * (item 	502	 commutercontact)) + 	(dCS18311 * 	dHI422	 * (item 	503	 commutercontact)) + 	(dCS18311 * 	dHI412	 * (item 	504	 commutercontact)) + 	(dCS18311 * 	dHI511	 * (item 	505	 commutercontact)) + 	(dCS18311 * 	dHI631	 * (item 	506	 commutercontact)) + 	(dCS18311 * 	dHI632	 * (item 	507	 commutercontact)) + 	(dCS18311 * 	dHI611	 * (item 	508	 commutercontact)) + 	(dCS18311 * 	dHI26112	 * (item 	509	 commutercontact)) + 	(dCS18311 * 	dHI36322	 * (item 	510	 commutercontact)) + 	(dCS18311 * 	dHI36311	 * (item 	511	 commutercontact)) + 	(dCS18311 * 	dHI36312	 * (item 	512	 commutercontact)) + 	(dCS18311 * 	dHI36122	 * (item 	513	 commutercontact)) + 	(dCS18311 * 	dHI36111	 * (item 	514	 commutercontact)) + 	(dCS18311 * 	dHI36112	 * (item 	515	 commutercontact)) + 	(dCS18311 * 	dHI17311	 * (item 	516	 commutercontact)) + 	(dCS18311 * 	dHI17312	 * (item 	517	 commutercontact)) + 	(dCS18311 * 	dHI17111	 * (item 	518	 commutercontact)) + 	(dCS18311 * 	dHI17112	 * (item 	519	 commutercontact)) + 	(dCS18311 * 	dHI18311	 * (item 	520	 commutercontact)) + 	(dCS18311 * 	dHI18312	 * (item 	521	 commutercontact)) + 	(dCS18311 * 	dHI18111	 * (item 	522	 commutercontact)) + 	(dCS18311 * 	dHI18112	 * (item 	523	 commutercontact)) + 	(dCS18311 * 	dHI19111	 * (item 	524	 commutercontact)))) * decimalGAET * neighbouring)
            set S18311 S18311 - travelextraS18311 * travelling50-65yrs
            set E18311 E18311 + travelextraS18311 * travelling50-65yrs
            if S18311 < 0 [set S18311 0]
            if E18311 > population [set E18311 population]
       ]          
                              
       if S18312 > 0 [  
            set travelextraS18312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS18312 * dHI112	 * (item 	525	 commutercontact)) + 	(dCS18312 * 	dHI212	 * (item 	526	 commutercontact)) + 	(dCS18312 * 	dHI312	 * (item 	527	 commutercontact)) + 	(dCS18312 * 	dHI422	 * (item 	528	 commutercontact)) + 	(dCS18312 * 	dHI412	 * (item 	529	 commutercontact)) + 	(dCS18312 * 	dHI511	 * (item 	530	 commutercontact)) + 	(dCS18312 * 	dHI631	 * (item 	531	 commutercontact)) + 	(dCS18312 * 	dHI632	 * (item 	532	 commutercontact)) + 	(dCS18312 * 	dHI611	 * (item 	533	 commutercontact)) + 	(dCS18312 * 	dHI26112	 * (item 	534	 commutercontact)) + 	(dCS18312 * 	dHI36322	 * (item 	535	 commutercontact)) + 	(dCS18312 * 	dHI36311	 * (item 	536	 commutercontact)) + 	(dCS18312 * 	dHI36312	 * (item 	537	 commutercontact)) + 	(dCS18312 * 	dHI36122	 * (item 	538	 commutercontact)) + 	(dCS18312 * 	dHI36111	 * (item 	539	 commutercontact)) + 	(dCS18312 * 	dHI36112	 * (item 	540	 commutercontact)) + 	(dCS18312 * 	dHI17311	 * (item 	541	 commutercontact)) + 	(dCS18312 * 	dHI17312	 * (item 	542	 commutercontact)) + 	(dCS18312 * 	dHI17111	 * (item 	543	 commutercontact)) + 	(dCS18312 * 	dHI17112	 * (item 	544	 commutercontact)) + 	(dCS18312 * 	dHI18311	 * (item 	545	 commutercontact)) + 	(dCS18312 * 	dHI18312	 * (item 	546	 commutercontact)) + 	(dCS18312 * 	dHI18111	 * (item 	547	 commutercontact)) + 	(dCS18312 * 	dHI18112	 * (item 	548	 commutercontact)) + 	(dCS18312 * 	dHI19111	 * (item 	549	 commutercontact)))) * decimalGAET * neighbouring)
            set S18312 S18312 - travelextraS18312 * travelling50-65yrs
            set E18312 E18312 + travelextraS18312 * travelling50-65yrs
            if S18312 < 0 [set S18312 0]
            if E18312 > population [set E18312 population]
       ]
                              
       if S18111 > 0 [  
            set travelextraS18111 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS18111 *	dHI112	 * (item 	550	 commutercontact)) + 	(dCS18111 * 	dHI212	 * (item 	551	 commutercontact)) + 	(dCS18111 * 	dHI312	 * (item 	552	 commutercontact)) + 	(dCS18111 * 	dHI422	 * (item 	553	 commutercontact)) + 	(dCS18111 * 	dHI412	 * (item 	554	 commutercontact)) + 	(dCS18111 * 	dHI511	 * (item 	555	 commutercontact)) + 	(dCS18111 * 	dHI631	 * (item 	556	 commutercontact)) + 	(dCS18111 * 	dHI632	 * (item 	557	 commutercontact)) + 	(dCS18111 * 	dHI611	 * (item 	558	 commutercontact)) + 	(dCS18111 * 	dHI26112	 * (item 	559	 commutercontact)) + 	(dCS18111 * 	dHI36322	 * (item 	560	 commutercontact)) + 	(dCS18111 * 	dHI36311	 * (item 	561	 commutercontact)) + 	(dCS18111 * 	dHI36312	 * (item 	562	 commutercontact)) + 	(dCS18111 * 	dHI36122	 * (item 	563	 commutercontact)) + 	(dCS18111 * 	dHI36111	 * (item 	564	 commutercontact)) + 	(dCS18111 * 	dHI36112	 * (item 	565	 commutercontact)) + 	(dCS18111 * 	dHI17311	 * (item 	566	 commutercontact)) + 	(dCS18111 * 	dHI17312	 * (item 	567	 commutercontact)) + 	(dCS18111 * 	dHI17111	 * (item 	568	 commutercontact)) + 	(dCS18111 * 	dHI17112	 * (item 	569	 commutercontact)) + 	(dCS18111 * 	dHI18311	 * (item 	570	 commutercontact)) + 	(dCS18111 * 	dHI18312	 * (item 	571	 commutercontact)) + 	(dCS18111 * 	dHI18111	 * (item 	572	 commutercontact)) + 	(dCS18111 * 	dHI18112	 * (item 	573	 commutercontact)) + 	(dCS18111 * 	dHI19111	 * (item 	574	 commutercontact)))) * decimalGAET * neighbouring)
            set S18111 S18111 - travelextraS18111 * travelling50-65yrs
            set E18111 E18111 + travelextraS18111 * travelling50-65yrs
            if S18111 < 0 [set S18111 0]
            if E18111 > population [set E18111 population]
       ]
                              
       if S18112 > 0 [  
            set travelextraS18112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS18112 * dHI112	 * (item 	575	 commutercontact)) + 	(dCS18112 * 	dHI212	 * (item 	576	 commutercontact)) + 	(dCS18112 * 	dHI312	 * (item 	577	 commutercontact)) + 	(dCS18112 * 	dHI422	 * (item 	578	 commutercontact)) + 	(dCS18112 * 	dHI412	 * (item 	579	 commutercontact)) + 	(dCS18112 * 	dHI511	 * (item 	580	 commutercontact)) + 	(dCS18112 * 	dHI631	 * (item 	581	 commutercontact)) + 	(dCS18112 * 	dHI632	 * (item 	582	 commutercontact)) + 	(dCS18112 * 	dHI611	 * (item 	583	 commutercontact)) + 	(dCS18112 * 	dHI26112	 * (item 	584	 commutercontact)) + 	(dCS18112 * 	dHI36322	 * (item 	585	 commutercontact)) + 	(dCS18112 * 	dHI36311	 * (item 	586	 commutercontact)) + 	(dCS18112 * 	dHI36312	 * (item 	587	 commutercontact)) + 	(dCS18112 * 	dHI36122	 * (item 	588	 commutercontact)) + 	(dCS18112 * 	dHI36111	 * (item 	589	 commutercontact)) + 	(dCS18112 * 	dHI36112	 * (item 	590	 commutercontact)) + 	(dCS18112 * 	dHI17311	 * (item 	591	 commutercontact)) + 	(dCS18112 * 	dHI17312	 * (item 	592	 commutercontact)) + 	(dCS18112 * 	dHI17111	 * (item 	593	 commutercontact)) + 	(dCS18112 * 	dHI17112	 * (item 	594	 commutercontact)) + 	(dCS18112 * 	dHI18311	 * (item 	595	 commutercontact)) + 	(dCS18112 * 	dHI18312	 * (item 	596	 commutercontact)) + 	(dCS18112 * 	dHI18111	 * (item 	597	 commutercontact)) + 	(dCS18112 * 	dHI18112	 * (item 	598	 commutercontact)) + 	(dCS18112 * 	dHI19111	 * (item 	599	 commutercontact)))) * decimalGAET * neighbouring)
            set S18112 S18112 - travelextraS18112 * travelling50-65yrs
            set E18112 E18112 + travelextraS18112 * travelling50-65yrs
            if S18112 < 0 [set S18112 0]
            if E18112 > population [set E18112 population]
       ]          
                              
       if S19111 > 0 [  
            set travelextraS19111 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dCS19111 *	dHI112	 * (item 	600	 commutercontact)) + 	(dCS19111 * 	dHI212	 * (item 	601	 commutercontact)) + 	(dCS19111 * 	dHI312	 * (item 	602	 commutercontact)) + 	(dCS19111 * 	dHI422	 * (item 	603	 commutercontact)) + 	(dCS19111 * 	dHI412	 * (item 	604	 commutercontact)) + 	(dCS19111 * 	dHI511	 * (item 	605	 commutercontact)) + 	(dCS19111 * 	dHI631	 * (item 	606	 commutercontact)) + 	(dCS19111 * 	dHI632	 * (item 	607	 commutercontact)) + 	(dCS19111 * 	dHI611	 * (item 	608	 commutercontact)) + 	(dCS19111 * 	dHI26112	 * (item 	609	 commutercontact)) + 	(dCS19111 * 	dHI36322	 * (item 	610	 commutercontact)) + 	(dCS19111 * 	dHI36311	 * (item 	611	 commutercontact)) + 	(dCS19111 * 	dHI36312	 * (item 	612	 commutercontact)) + 	(dCS19111 * 	dHI36122	 * (item 	613	 commutercontact)) + 	(dCS19111 * 	dHI36111	 * (item 	614	 commutercontact)) + 	(dCS19111 * 	dHI36112	 * (item 	615	 commutercontact)) + 	(dCS19111 * 	dHI17311	 * (item 	616	 commutercontact)) + 	(dCS19111 * 	dHI17312	 * (item 	617	 commutercontact)) + 	(dCS19111 * 	dHI17111	 * (item 	618	 commutercontact)) + 	(dCS19111 * 	dHI17112	 * (item 	619	 commutercontact)) + 	(dCS19111 * 	dHI18311	 * (item 	620	 commutercontact)) + 	(dCS19111 * 	dHI18312	 * (item 	621	 commutercontact)) + 	(dCS19111 * 	dHI18111	 * (item 	622	 commutercontact)) + 	(dCS19111 * 	dHI18112	 * (item 	623	 commutercontact)) + 	(dCS19111 * 	dHI19111	 * (item 	624	 commutercontact)))) * decimalGAET * neighbouring)
            set S19111 S19111 - travelextraS19111 * travelling65plusyrs
            set E19111 E19111 + travelextraS19111 * travelling65plusyrs
            if S19111 < 0 [set S19111 0]
            if E19111 > population [set E19111 population]
        ]
      ]]
      set traveltotal traveltotal + (((travelextraS112  * travelling0-5yrs) + (travelextraS212 * travelling0-5yrs) + (travelextraS312 * travelling5-12yrs) + (travelextraS422 * travelling12-17yrs) + (travelextraS412 * travelling12-17yrs) + (travelextraS511 * travelling17-25yrs) + (travelextraS631 * travelling25-35yrs) + (travelextraS632 * travelling25-35yrs) + (travelextraS611 * travelling25-35yrs) + (travelextraS26112 * travelling25-35yrs) + (travelextraS36322 * travelling25-35yrs) + (travelextraS36311 * travelling25-35yrs) + (travelextraS36312 * travelling25-35yrs) + (travelextraS36122 * travelling25-35yrs) + (travelextraS36111 * travelling25-35yrs) + (travelextraS36112 * travelling25-35yrs) + (travelextraS17311 * travelling35-50yrs) + (travelextraS17312 * travelling35-50yrs) + (travelextraS17111 * travelling35-50yrs) + (travelextraS17112 * travelling35-50yrs) + (travelextraS18311 * travelling50-65yrs) + (travelextraS18312 * travelling50-65yrs) + (travelextraS18111 * travelling50-65yrs) + (travelextraS18112 * travelling50-65yrs) + (travelextraS19111 * travelling65plusyrs)) * decimalVT)
      
      ;;infected home municipality  dHS * dCI
   if (([I112] of end1) + ([I212] of end1) + ([I312] of end1) + ([I422] of end1) + ([I412] of end1) + ([I511] of end1) + ([I631] of end1) + ([I632] of end1) + ([I611] of end1) + ([I26112] of end1) + ([I36322] of end1) + ([I36311] of end1) + ([I36312] of end1) + ([I36122] of end1) + ([I36111] of end1) + ([I36112] of end1) + ([I17311] of end1) + ([I17312] of end1) + ([I17111] of end1) + ([I17112] of end1) + ([I18311] of end1) + ([I18312] of end1) + ([I18111] of end1) + ([I18112] of end1) + ([I19111] of end1)) > (([sumnonvisitcommuters] of end1) / 100 * travelling-threshold) [
    
       let travellers ([nr-people] of self)
       ask end2[   

       if S112 > 0 [
         ;; multiplied by 5, because there are five workingdays in a week, but it is only calculated once per week.
         ;; More commuters means higher infection chance in municipality. Ranging from 0.5 to 1. Highest nr commuters is 21200            
            set travelextraS112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS112 *	dCI112	 * (item 	0	 commutercontact)) + 	(dHS112 * 	dCI212	 * (item 	1	 commutercontact)) + 	(dHS112 * 	dCI312	 * (item 	2	 commutercontact)) + 	(dHS112 * 	dCI422	 * (item 	3	 commutercontact)) + 	(dHS112 * 	dCI412	 * (item 	4	 commutercontact)) + 	(dHS112 * 	dCI511	 * (item 	5	 commutercontact)) + 	(dHS112 * 	dCI631	 * (item 	6	 commutercontact)) + 	(dHS112 * 	dCI632	 * (item 	7	 commutercontact)) + 	(dHS112 * 	dCI611	 * (item 	8	 commutercontact)) + 	(dHS112 * 	dCI26112	 * (item 	9	 commutercontact)) + 	(dHS112 * 	dCI36322	 * (item 	10	 commutercontact)) + 	(dHS112 * 	dCI36311	 * (item 	11	 commutercontact)) + 	(dHS112 * 	dCI36312	 * (item 	12	 commutercontact)) + 	(dHS112 * 	dCI36122	 * (item 	13	 commutercontact)) + 	(dHS112 * 	dCI36111	 * (item 	14	 commutercontact)) + 	(dHS112 * 	dCI36112	 * (item 	15	 commutercontact)) + 	(dHS112 * 	dCI17311	 * (item 	16	 commutercontact)) + 	(dHS112 * 	dCI17312	 * (item 	17	 commutercontact)) + 	(dHS112 * 	dCI17111	 * (item 	18	 commutercontact)) + 	(dHS112 * 	dCI17112	 * (item 	19	 commutercontact)) + 	(dHS112 * 	dCI18311	 * (item 	20	 commutercontact)) + 	(dHS112 * 	dCI18312	 * (item 	21	 commutercontact)) + 	(dHS112 * 	dCI18111	 * (item 	22	 commutercontact)) + 	(dHS112 * 	dCI18112	 * (item 	23	 commutercontact)) + 	(dHS112 * 	dCI19111	 * (item 	24	 commutercontact)))) * decimalGAET * neighbouring)
            set S112 S112 - travelextraS112 * travelling0-5yrs
            set E112 E112 + travelextraS112 * travelling0-5yrs
            if S112 < 0 [set S112 0]
            if E112 > population [set E112 population]
       ]
                    
       if S212 > 0 [  
            set travelextraS212 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS212 *	dCI112	 * (item 	25	 commutercontact)) + 	(dHS212 * 	dCI212	 * (item 	26	 commutercontact)) + 	(dHS212 * 	dCI312	 * (item 	27	 commutercontact)) + 	(dHS212 * 	dCI422	 * (item 	28	 commutercontact)) + 	(dHS212 * 	dCI412	 * (item 	29	 commutercontact)) + 	(dHS212 * 	dCI511	 * (item 	30	 commutercontact)) + 	(dHS212 * 	dCI631	 * (item 	31	 commutercontact)) + 	(dHS212 * 	dCI632	 * (item 	32	 commutercontact)) + 	(dHS212 * 	dCI611	 * (item 	33	 commutercontact)) + 	(dHS212 * 	dCI26112	 * (item 	34	 commutercontact)) + 	(dHS212 * 	dCI36322	 * (item 	35	 commutercontact)) + 	(dHS212 * 	dCI36311	 * (item 	36	 commutercontact)) + 	(dHS212 * 	dCI36312	 * (item 	37	 commutercontact)) + 	(dHS212 * 	dCI36122	 * (item 	38	 commutercontact)) + 	(dHS212 * 	dCI36111	 * (item 	39	 commutercontact)) + 	(dHS212 * 	dCI36112	 * (item 	40	 commutercontact)) + 	(dHS212 * 	dCI17311	 * (item 	41	 commutercontact)) + 	(dHS212 * 	dCI17312	 * (item 	42	 commutercontact)) + 	(dHS212 * 	dCI17111	 * (item 	43	 commutercontact)) + 	(dHS212 * 	dCI17112	 * (item 	44	 commutercontact)) + 	(dHS212 * 	dCI18311	 * (item 	45	 commutercontact)) + 	(dHS212 * 	dCI18312	 * (item 	46	 commutercontact)) + 	(dHS212 * 	dCI18111	 * (item 	47	 commutercontact)) + 	(dHS212 * 	dCI18112	 * (item 	48	 commutercontact)) + 	(dHS212 * 	dCI19111	 * (item 	49	 commutercontact)))) * decimalGAET * neighbouring)
            set S212 S212 - travelextraS212 * travelling0-5yrs
            set E212 E212 + travelextraS212 * travelling0-5yrs
            if S212 < 0 [set S212 0]
            if E212 > population [set E212 population]
       ]
                              
       if S312 > 0 [  
            set travelextraS312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS312 * dCI112	 * (item 	50	 commutercontact)) + 	(dHS312 * 	dCI212	 * (item 	51	 commutercontact)) + 	(dHS312 * 	dCI312	 * (item 	52	 commutercontact)) + 	(dHS312 * 	dCI422	 * (item 	53	 commutercontact)) + 	(dHS312 * 	dCI412	 * (item 	54	 commutercontact)) + 	(dHS312 * 	dCI511	 * (item 	55	 commutercontact)) + 	(dHS312 * 	dCI631	 * (item 	56	 commutercontact)) + 	(dHS312 * 	dCI632	 * (item 	57	 commutercontact)) + 	(dHS312 * 	dCI611	 * (item 	58	 commutercontact)) + 	(dHS312 * 	dCI26112	 * (item 	59	 commutercontact)) + 	(dHS312 * 	dCI36322	 * (item 	60	 commutercontact)) + 	(dHS312 * 	dCI36311	 * (item 	61	 commutercontact)) + 	(dHS312 * 	dCI36312	 * (item 	62	 commutercontact)) + 	(dHS312 * 	dCI36122	 * (item 	63	 commutercontact)) + 	(dHS312 * 	dCI36111	 * (item 	64	 commutercontact)) + 	(dHS312 * 	dCI36112	 * (item 	65	 commutercontact)) + 	(dHS312 * 	dCI17311	 * (item 	66	 commutercontact)) + 	(dHS312 * 	dCI17312	 * (item 	67	 commutercontact)) + 	(dHS312 * 	dCI17111	 * (item 	68	 commutercontact)) + 	(dHS312 * 	dCI17112	 * (item 	69	 commutercontact)) + 	(dHS312 * 	dCI18311	 * (item 	70	 commutercontact)) + 	(dHS312 * 	dCI18312	 * (item 	71	 commutercontact)) + 	(dHS312 * 	dCI18111	 * (item 	72	 commutercontact)) + 	(dHS312 * 	dCI18112	 * (item 	73	 commutercontact)) + 	(dHS312 * 	dCI19111	 * (item 	74	 commutercontact)))) * decimalGAET * neighbouring)
            set S312 S312 - travelextraS312 * travelling5-12yrs
            set E312 E312 + travelextraS312 * travelling5-12yrs
            if S312 < 0 [set S312 0]
            if E312 > population [set E312 population]
       ]
       
       if S422 > 0 [  
            set travelextraS422 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS422 *	dCI112	 * (item 	75	 commutercontact)) + 	(dHS422 * 	dCI212	 * (item 	76	 commutercontact)) + 	(dHS422 * 	dCI312	 * (item 	77	 commutercontact)) + 	(dHS422 * 	dCI422	 * (item 	78	 commutercontact)) + 	(dHS422 * 	dCI412	 * (item 	79	 commutercontact)) + 	(dHS422 * 	dCI511	 * (item 	80	 commutercontact)) + 	(dHS422 * 	dCI631	 * (item 	81	 commutercontact)) + 	(dHS422 * 	dCI632	 * (item 	82	 commutercontact)) + 	(dHS422 * 	dCI611	 * (item 	83	 commutercontact)) + 	(dHS422 * 	dCI26112	 * (item 	84	 commutercontact)) + 	(dHS422 * 	dCI36322	 * (item 	85	 commutercontact)) + 	(dHS422 * 	dCI36311	 * (item 	86	 commutercontact)) + 	(dHS422 * 	dCI36312	 * (item 	87	 commutercontact)) + 	(dHS422 * 	dCI36122	 * (item 	88	 commutercontact)) + 	(dHS422 * 	dCI36111	 * (item 	89	 commutercontact)) + 	(dHS422 * 	dCI36112	 * (item 	90	 commutercontact)) + 	(dHS422 * 	dCI17311	 * (item 	91	 commutercontact)) + 	(dHS422 * 	dCI17312	 * (item 	92	 commutercontact)) + 	(dHS422 * 	dCI17111	 * (item 	93	 commutercontact)) + 	(dHS422 * 	dCI17112	 * (item 	94	 commutercontact)) + 	(dHS422 * 	dCI18311	 * (item 	95	 commutercontact)) + 	(dHS422 * 	dCI18312	 * (item 	96	 commutercontact)) + 	(dHS422 * 	dCI18111	 * (item 	97	 commutercontact)) + 	(dHS422 * 	dCI18112	 * (item 	98	 commutercontact)) + 	(dHS422 * 	dCI19111	 * (item 	99	 commutercontact)))) * decimalGAET * neighbouring)
            set S422 S422 - travelextraS422 * travelling12-17yrs
            set E422 E422 + travelextraS422 * travelling12-17yrs
            if S422 < 0 [set S422 0]
            if E422 > population [set E422 population]
       ]
                              
       if S412 > 0 [  
            set travelextraS412 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS412 * dCI112	 * (item 	100	 commutercontact)) + 	(dHS412 * 	dCI212	 * (item 	101	 commutercontact)) + 	(dHS412 * 	dCI312	 * (item 	102	 commutercontact)) + 	(dHS412 * 	dCI422	 * (item 	103	 commutercontact)) + 	(dHS412 * 	dCI412	 * (item 	104	 commutercontact)) + 	(dHS412 * 	dCI511	 * (item 	105	 commutercontact)) + 	(dHS412 * 	dCI631	 * (item 	106	 commutercontact)) + 	(dHS412 * 	dCI632	 * (item 	107	 commutercontact)) + 	(dHS412 * 	dCI611	 * (item 	108	 commutercontact)) + 	(dHS412 * 	dCI26112	 * (item 	109	 commutercontact)) + 	(dHS412 * 	dCI36322	 * (item 	110	 commutercontact)) + 	(dHS412 * 	dCI36311	 * (item 	111	 commutercontact)) + 	(dHS412 * 	dCI36312	 * (item 	112	 commutercontact)) + 	(dHS412 * 	dCI36122	 * (item 	113	 commutercontact)) + 	(dHS412 * 	dCI36111	 * (item 	114	 commutercontact)) + 	(dHS412 * 	dCI36112	 * (item 	115	 commutercontact)) + 	(dHS412 * 	dCI17311	 * (item 	116	 commutercontact)) + 	(dHS412 * 	dCI17312	 * (item 	117	 commutercontact)) + 	(dHS412 * 	dCI17111	 * (item 	118	 commutercontact)) + 	(dHS412 * 	dCI17112	 * (item 	119	 commutercontact)) + 	(dHS412 * 	dCI18311	 * (item 	120	 commutercontact)) + 	(dHS412 * 	dCI18312	 * (item 	121	 commutercontact)) + 	(dHS412 * 	dCI18111	 * (item 	122	 commutercontact)) + 	(dHS412 * 	dCI18112	 * (item 	123	 commutercontact)) + 	(dHS412 * 	dCI19111	 * (item 	124	 commutercontact)))) * decimalGAET * neighbouring)
            set S412 S412 - travelextraS412 * travelling12-17yrs
            set E412 E412 + travelextraS412 * travelling12-17yrs
            if S412 < 0 [set S412 0]
            if E412 > population [set E412 population]
       ]
                              
       if S511 > 0 [  
            set travelextraS511 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS511 * dCI112	 * (item 	125	 commutercontact)) + 	(dHS511 * 	dCI212	 * (item 	126	 commutercontact)) + 	(dHS511 * 	dCI312	 * (item 	127	 commutercontact)) + 	(dHS511 * 	dCI422	 * (item 	128	 commutercontact)) + 	(dHS511 * 	dCI412	 * (item 	129	 commutercontact)) + 	(dHS511 * 	dCI511	 * (item 	130	 commutercontact)) + 	(dHS511 * 	dCI631	 * (item 	131	 commutercontact)) + 	(dHS511 * 	dCI632	 * (item 	132	 commutercontact)) + 	(dHS511 * 	dCI611	 * (item 	133	 commutercontact)) + 	(dHS511 * 	dCI26112	 * (item 	134	 commutercontact)) + 	(dHS511 * 	dCI36322	 * (item 	135	 commutercontact)) + 	(dHS511 * 	dCI36311	 * (item 	136	 commutercontact)) + 	(dHS511 * 	dCI36312	 * (item 	137	 commutercontact)) + 	(dHS511 * 	dCI36122	 * (item 	138	 commutercontact)) + 	(dHS511 * 	dCI36111	 * (item 	139	 commutercontact)) + 	(dHS511 * 	dCI36112	 * (item 	140	 commutercontact)) + 	(dHS511 * 	dCI17311	 * (item 	141	 commutercontact)) + 	(dHS511 * 	dCI17312	 * (item 	142	 commutercontact)) + 	(dHS511 * 	dCI17111	 * (item 	143	 commutercontact)) + 	(dHS511 * 	dCI17112	 * (item 	144	 commutercontact)) + 	(dHS511 * 	dCI18311	 * (item 	145	 commutercontact)) + 	(dHS511 * 	dCI18312	 * (item 	146	 commutercontact)) + 	(dHS511 * 	dCI18111	 * (item 	147	 commutercontact)) + 	(dHS511 * 	dCI18112	 * (item 	148	 commutercontact)) + 	(dHS511 * 	dCI19111	 * (item 	149	 commutercontact)))) * decimalGAET * neighbouring)
            set S511 S511 - travelextraS511 * travelling17-25yrs
            set E511 E511 + travelextraS511 * travelling17-25yrs
            if S511 < 0 [set S511 0]
            if E511 > population [set E511 population]
       ]
                              
       if S631 > 0 [  
            set travelextraS631 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS631 *	dCI112	 * (item 	150	 commutercontact)) + 	(dHS631 * 	dCI212	 * (item 	151	 commutercontact)) + 	(dHS631 * 	dCI312	 * (item 	152	 commutercontact)) + 	(dHS631 * 	dCI422	 * (item 	153	 commutercontact)) + 	(dHS631 * 	dCI412	 * (item 	154	 commutercontact)) + 	(dHS631 * 	dCI511	 * (item 	155	 commutercontact)) + 	(dHS631 * 	dCI631	 * (item 	156	 commutercontact)) + 	(dHS631 * 	dCI632	 * (item 	157	 commutercontact)) + 	(dHS631 * 	dCI611	 * (item 	158	 commutercontact)) + 	(dHS631 * 	dCI26112	 * (item 	159	 commutercontact)) + 	(dHS631 * 	dCI36322	 * (item 	160	 commutercontact)) + 	(dHS631 * 	dCI36311	 * (item 	161	 commutercontact)) + 	(dHS631 * 	dCI36312	 * (item 	162	 commutercontact)) + 	(dHS631 * 	dCI36122	 * (item 	163	 commutercontact)) + 	(dHS631 * 	dCI36111	 * (item 	164	 commutercontact)) + 	(dHS631 * 	dCI36112	 * (item 	165	 commutercontact)) + 	(dHS631 * 	dCI17311	 * (item 	166	 commutercontact)) + 	(dHS631 * 	dCI17312	 * (item 	167	 commutercontact)) + 	(dHS631 * 	dCI17111	 * (item 	168	 commutercontact)) + 	(dHS631 * 	dCI17112	 * (item 	169	 commutercontact)) + 	(dHS631 * 	dCI18311	 * (item 	170	 commutercontact)) + 	(dHS631 * 	dCI18312	 * (item 	171	 commutercontact)) + 	(dHS631 * 	dCI18111	 * (item 	172	 commutercontact)) + 	(dHS631 * 	dCI18112	 * (item 	173	 commutercontact)) + 	(dHS631 * 	dCI19111	 * (item 	174	 commutercontact)))) * decimalGAET * neighbouring)
            set S631 S631 - travelextraS631 * travelling25-35yrs
            set E631 E631 + travelextraS631 * travelling25-35yrs
            if S631 < 0 [set S631 0]
            if E631 > population [set E631 population]
       ]
                              
       if S632 > 0 [  
            set travelextraS632 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS632 * dCI112	 * (item 	175	 commutercontact)) + 	(dHS632 * 	dCI212	 * (item 	176	 commutercontact)) + 	(dHS632 * 	dCI312	 * (item 	177	 commutercontact)) + 	(dHS632 * 	dCI422	 * (item 	178	 commutercontact)) + 	(dHS632 * 	dCI412	 * (item 	179	 commutercontact)) + 	(dHS632 * 	dCI511	 * (item 	180	 commutercontact)) + 	(dHS632 * 	dCI631	 * (item 	181	 commutercontact)) + 	(dHS632 * 	dCI632	 * (item 	182	 commutercontact)) + 	(dHS632 * 	dCI611	 * (item 	183	 commutercontact)) + 	(dHS632 * 	dCI26112	 * (item 	184	 commutercontact)) + 	(dHS632 * 	dCI36322	 * (item 	185	 commutercontact)) + 	(dHS632 * 	dCI36311	 * (item 	186	 commutercontact)) + 	(dHS632 * 	dCI36312	 * (item 	187	 commutercontact)) + 	(dHS632 * 	dCI36122	 * (item 	188	 commutercontact)) + 	(dHS632 * 	dCI36111	 * (item 	189	 commutercontact)) + 	(dHS632 * 	dCI36112	 * (item 	190	 commutercontact)) + 	(dHS632 * 	dCI17311	 * (item 	191	 commutercontact)) + 	(dHS632 * 	dCI17312	 * (item 	192	 commutercontact)) + 	(dHS632 * 	dCI17111	 * (item 	193	 commutercontact)) + 	(dHS632 * 	dCI17112	 * (item 	194	 commutercontact)) + 	(dHS632 * 	dCI18311	 * (item 	195	 commutercontact)) + 	(dHS632 * 	dCI18312	 * (item 	196	 commutercontact)) + 	(dHS632 * 	dCI18111	 * (item 	197	 commutercontact)) + 	(dHS632 * 	dCI18112	 * (item 	198	 commutercontact)) + 	(dHS632 * 	dCI19111	 * (item 	199	 commutercontact)))) * decimalGAET * neighbouring)
            set S632 S632 - travelextraS632 * travelling25-35yrs
            set E632 E632 + travelextraS632 * travelling25-35yrs
            if S632 < 0 [set S632 0]
            if E632 > population [set E632 population]
       ]  
          
       if S611 > 0 [  
            set travelextraS611 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS611 * dCI112	 * (item 	200	 commutercontact)) + 	(dHS611 * 	dCI212	 * (item 	201	 commutercontact)) + 	(dHS611 * 	dCI312	 * (item 	202	 commutercontact)) + 	(dHS611 * 	dCI422	 * (item 	203	 commutercontact)) + 	(dHS611 * 	dCI412	 * (item 	204	 commutercontact)) + 	(dHS611 * 	dCI511	 * (item 	205	 commutercontact)) + 	(dHS611 * 	dCI631	 * (item 	206	 commutercontact)) + 	(dHS611 * 	dCI632	 * (item 	207	 commutercontact)) + 	(dHS611 * 	dCI611	 * (item 	208	 commutercontact)) + 	(dHS611 * 	dCI26112	 * (item 	209	 commutercontact)) + 	(dHS611 * 	dCI36322	 * (item 	210	 commutercontact)) + 	(dHS611 * 	dCI36311	 * (item 	211	 commutercontact)) + 	(dHS611 * 	dCI36312	 * (item 	212	 commutercontact)) + 	(dHS611 * 	dCI36122	 * (item 	213	 commutercontact)) + 	(dHS611 * 	dCI36111	 * (item 	214	 commutercontact)) + 	(dHS611 * 	dCI36112	 * (item 	215	 commutercontact)) + 	(dHS611 * 	dCI17311	 * (item 	216	 commutercontact)) + 	(dHS611 * 	dCI17312	 * (item 	217	 commutercontact)) + 	(dHS611 * 	dCI17111	 * (item 	218	 commutercontact)) + 	(dHS611 * 	dCI17112	 * (item 	219	 commutercontact)) + 	(dHS611 * 	dCI18311	 * (item 	220	 commutercontact)) + 	(dHS611 * 	dCI18312	 * (item 	221	 commutercontact)) + 	(dHS611 * 	dCI18111	 * (item 	222	 commutercontact)) + 	(dHS611 * 	dCI18112	 * (item 	223	 commutercontact)) + 	(dHS611 * 	dCI19111	 * (item 	224	 commutercontact)))) * decimalGAET * neighbouring)
            set S611 S611 - travelextraS611 * travelling25-35yrs
            set E611 E611 + travelextraS611 * travelling25-35yrs
            if S611 < 0 [set S611 0]
            if E611 > population [set E611 population]
       ]
                              
       if S26112 > 0 [  
            set travelextraS26112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS26112 *	dCI112	 * (item 	225	 commutercontact)) + 	(dHS26112 * 	dCI212	 * (item 	226	 commutercontact)) + 	(dHS26112 * 	dCI312	 * (item 	227	 commutercontact)) + 	(dHS26112 * 	dCI422	 * (item 	228	 commutercontact)) + 	(dHS26112 * 	dCI412	 * (item 	229	 commutercontact)) + 	(dHS26112 * 	dCI511	 * (item 	230	 commutercontact)) + 	(dHS26112 * 	dCI631	 * (item 	231	 commutercontact)) + 	(dHS26112 * 	dCI632	 * (item 	232	 commutercontact)) + 	(dHS26112 * 	dCI611	 * (item 	233	 commutercontact)) + 	(dHS26112 * 	dCI26112	 * (item 	234	 commutercontact)) + 	(dHS26112 * 	dCI36322	 * (item 	235	 commutercontact)) + 	(dHS26112 * 	dCI36311	 * (item 	236	 commutercontact)) + 	(dHS26112 * 	dCI36312	 * (item 	237	 commutercontact)) + 	(dHS26112 * 	dCI36122	 * (item 	238	 commutercontact)) + 	(dHS26112 * 	dCI36111	 * (item 	239	 commutercontact)) + 	(dHS26112 * 	dCI36112	 * (item 	240	 commutercontact)) + 	(dHS26112 * 	dCI17311	 * (item 	241	 commutercontact)) + 	(dHS26112 * 	dCI17312	 * (item 	242	 commutercontact)) + 	(dHS26112 * 	dCI17111	 * (item 	243	 commutercontact)) + 	(dHS26112 * 	dCI17112	 * (item 	244	 commutercontact)) + 	(dHS26112 * 	dCI18311	 * (item 	245	 commutercontact)) + 	(dHS26112 * 	dCI18312	 * (item 	246	 commutercontact)) + 	(dHS26112 * 	dCI18111	 * (item 	247	 commutercontact)) + 	(dHS26112 * 	dCI18112	 * (item 	248	 commutercontact)) + 	(dHS26112 * 	dCI19111	 * (item 	249	 commutercontact)))) * decimalGAET * neighbouring)
            set S26112 S26112 - travelextraS26112 * travelling25-35yrs
            set E26112 E26112 + travelextraS26112 * travelling25-35yrs
            if S26112 < 0 [set S26112 0]
            if E26112 > population [set E26112 population]
       ]        
          
       if S36322 > 0 [ 
            set travelextraS36322 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS36322 * dCI112	 * (item 	250	 commutercontact)) + 	(dHS36322 * 	dCI212	 * (item 	251	 commutercontact)) + 	(dHS36322 * 	dCI312	 * (item 	252	 commutercontact)) + 	(dHS36322 * 	dCI422	 * (item 	253	 commutercontact)) + 	(dHS36322 * 	dCI412	 * (item 	254	 commutercontact)) + 	(dHS36322 * 	dCI511	 * (item 	255	 commutercontact)) + 	(dHS36322 * 	dCI631	 * (item 	256	 commutercontact)) + 	(dHS36322 * 	dCI632	 * (item 	257	 commutercontact)) + 	(dHS36322 * 	dCI611	 * (item 	258	 commutercontact)) + 	(dHS36322 * 	dCI26112	 * (item 	259	 commutercontact)) + 	(dHS36322 * 	dCI36322	 * (item 	260	 commutercontact)) + 	(dHS36322 * 	dCI36311	 * (item 	261	 commutercontact)) + 	(dHS36322 * 	dCI36312	 * (item 	262	 commutercontact)) + 	(dHS36322 * 	dCI36122	 * (item 	263	 commutercontact)) + 	(dHS36322 * 	dCI36111	 * (item 	264	 commutercontact)) + 	(dHS36322 * 	dCI36112	 * (item 	265	 commutercontact)) + 	(dHS36322 * 	dCI17311	 * (item 	266	 commutercontact)) + 	(dHS36322 * 	dCI17312	 * (item 	267	 commutercontact)) + 	(dHS36322 * 	dCI17111	 * (item 	268	 commutercontact)) + 	(dHS36322 * 	dCI17112	 * (item 	269	 commutercontact)) + 	(dHS36322 * 	dCI18311	 * (item 	270	 commutercontact)) + 	(dHS36322 * 	dCI18312	 * (item 	271	 commutercontact)) + 	(dHS36322 * 	dCI18111	 * (item 	272	 commutercontact)) + 	(dHS36322 * 	dCI18112	 * (item 	273	 commutercontact)) + 	(dHS36322 * 	dCI19111	 * (item 	274	 commutercontact)))) * decimalGAET * neighbouring)
            set S36322 S36322 - travelextraS36322 * travelling25-35yrs
            set E36322 E36322 + travelextraS36322 * travelling25-35yrs
            if S36322 < 0 [set S36322 0]
            if E36322 > population [set E36322 population]
       ]             
          
       if S36311 > 0 [  
            set travelextraS36311 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS36311 * dCI112	 * (item 	275	 commutercontact)) + 	(dHS36311 * 	dCI212	 * (item 	276	 commutercontact)) + 	(dHS36311 * 	dCI312	 * (item 	277	 commutercontact)) + 	(dHS36311 * 	dCI422	 * (item 	278	 commutercontact)) + 	(dHS36311 * 	dCI412	 * (item 	279	 commutercontact)) + 	(dHS36311 * 	dCI511	 * (item 	280	 commutercontact)) + 	(dHS36311 * 	dCI631	 * (item 	281	 commutercontact)) + 	(dHS36311 * 	dCI632	 * (item 	282	 commutercontact)) + 	(dHS36311 * 	dCI611	 * (item 	283	 commutercontact)) + 	(dHS36311 * 	dCI26112	 * (item 	284	 commutercontact)) + 	(dHS36311 * 	dCI36322	 * (item 	285	 commutercontact)) + 	(dHS36311 * 	dCI36311	 * (item 	286	 commutercontact)) + 	(dHS36311 * 	dCI36312	 * (item 	287	 commutercontact)) + 	(dHS36311 * 	dCI36122	 * (item 	288	 commutercontact)) + 	(dHS36311 * 	dCI36111	 * (item 	289	 commutercontact)) + 	(dHS36311 * 	dCI36112	 * (item 	290	 commutercontact)) + 	(dHS36311 * 	dCI17311	 * (item 	291	 commutercontact)) + 	(dHS36311 * 	dCI17312	 * (item 	292	 commutercontact)) + 	(dHS36311 * 	dCI17111	 * (item 	293	 commutercontact)) + 	(dHS36311 * 	dCI17112	 * (item 	294	 commutercontact)) + 	(dHS36311 * 	dCI18311	 * (item 	295	 commutercontact)) + 	(dHS36311 * 	dCI18312	 * (item 	296	 commutercontact)) + 	(dHS36311 * 	dCI18111	 * (item 	297	 commutercontact)) + 	(dHS36311 * 	dCI18112	 * (item 	298	 commutercontact)) + 	(dHS36311 * 	dCI19111	 * (item 	299	 commutercontact)))) * decimalGAET * neighbouring)
            set S36311 S36311 - travelextraS36311 * travelling25-35yrs
            set E36311 E36311 + travelextraS36311 * travelling25-35yrs
            if S36311 < 0 [set S36311 0]
            if E36311 > population [set E36311 population]
       ]   
          
       if S36312 > 0 [  
            set travelextraS36312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS36312 * dCI112	 * (item 	300	 commutercontact)) + 	(dHS36312 * 	dCI212	 * (item 	301	 commutercontact)) + 	(dHS36312 * 	dCI312	 * (item 	302	 commutercontact)) + 	(dHS36312 * 	dCI422	 * (item 	303	 commutercontact)) + 	(dHS36312 * 	dCI412	 * (item 	304	 commutercontact)) + 	(dHS36312 * 	dCI511	 * (item 	305	 commutercontact)) + 	(dHS36312 * 	dCI631	 * (item 	306	 commutercontact)) + 	(dHS36312 * 	dCI632	 * (item 	307	 commutercontact)) + 	(dHS36312 * 	dCI611	 * (item 	308	 commutercontact)) + 	(dHS36312 * 	dCI26112	 * (item 	309	 commutercontact)) + 	(dHS36312 * 	dCI36322	 * (item 	310	 commutercontact)) + 	(dHS36312 * 	dCI36311	 * (item 	311	 commutercontact)) + 	(dHS36312 * 	dCI36312	 * (item 	312	 commutercontact)) + 	(dHS36312 * 	dCI36122	 * (item 	313	 commutercontact)) + 	(dHS36312 * 	dCI36111	 * (item 	314	 commutercontact)) + 	(dHS36312 * 	dCI36112	 * (item 	315	 commutercontact)) + 	(dHS36312 * 	dCI17311	 * (item 	316	 commutercontact)) + 	(dHS36312 * 	dCI17312	 * (item 	317	 commutercontact)) + 	(dHS36312 * 	dCI17111	 * (item 	318	 commutercontact)) + 	(dHS36312 * 	dCI17112	 * (item 	319	 commutercontact)) + 	(dHS36312 * 	dCI18311	 * (item 	320	 commutercontact)) + 	(dHS36312 * 	dCI18312	 * (item 	321	 commutercontact)) + 	(dHS36312 * 	dCI18111	 * (item 	322	 commutercontact)) + 	(dHS36312 * 	dCI18112	 * (item 	323	 commutercontact)) + 	(dHS36312 * 	dCI19111	 * (item 	324	 commutercontact)))) * decimalGAET * neighbouring)
            set S36312 S36312 - travelextraS36312 * travelling25-35yrs
            set E36312 E36312 + travelextraS36312 * travelling25-35yrs
            if S36312 < 0 [set S36312 0]
            if E36312 > population [set E36312 population]
       ]
      
       if S36122 > 0 [  
            set travelextraS36122 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS36122 * dCI112	 * (item 	325	 commutercontact)) + 	(dHS36122 * 	dCI212	 * (item 	326	 commutercontact)) + 	(dHS36122 * 	dCI312	 * (item 	327	 commutercontact)) + 	(dHS36122 * 	dCI422	 * (item 	328	 commutercontact)) + 	(dHS36122 * 	dCI412	 * (item 	329	 commutercontact)) + 	(dHS36122 * 	dCI511	 * (item 	330	 commutercontact)) + 	(dHS36122 * 	dCI631	 * (item 	331	 commutercontact)) + 	(dHS36122 * 	dCI632	 * (item 	332	 commutercontact)) + 	(dHS36122 * 	dCI611	 * (item 	333	 commutercontact)) + 	(dHS36122 * 	dCI26112	 * (item 	334	 commutercontact)) + 	(dHS36122 * 	dCI36322	 * (item 	335	 commutercontact)) + 	(dHS36122 * 	dCI36311	 * (item 	336	 commutercontact)) + 	(dHS36122 * 	dCI36312	 * (item 	337	 commutercontact)) + 	(dHS36122 * 	dCI36122	 * (item 	338	 commutercontact)) + 	(dHS36122 * 	dCI36111	 * (item 	339	 commutercontact)) + 	(dHS36122 * 	dCI36112	 * (item 	340	 commutercontact)) + 	(dHS36122 * 	dCI17311	 * (item 	341	 commutercontact)) + 	(dHS36122 * 	dCI17312	 * (item 	342	 commutercontact)) + 	(dHS36122 * 	dCI17111	 * (item 	343	 commutercontact)) + 	(dHS36122 * 	dCI17112	 * (item 	344	 commutercontact)) + 	(dHS36122 * 	dCI18311	 * (item 	345	 commutercontact)) + 	(dHS36122 * 	dCI18312	 * (item 	346	 commutercontact)) + 	(dHS36122 * 	dCI18111	 * (item 	347	 commutercontact)) + 	(dHS36122 * 	dCI18112	 * (item 	348	 commutercontact)) + 	(dHS36122 * 	dCI19111	 * (item 	349	 commutercontact)))) * decimalGAET * neighbouring)
            set S36122 S36122 - travelextraS36122 * travelling25-35yrs
            set E36122 E36122 + travelextraS36122 * travelling25-35yrs
            if S36122 < 0 [set S36122 0]
            if E36122 > population [set E36122 population]
       ]
                              
       if S36111 > 0 [  
            set travelextraS36111 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS36111 * dCI112	 * (item 	350	 commutercontact)) + 	(dHS36111 * 	dCI212	 * (item 	351	 commutercontact)) + 	(dHS36111 * 	dCI312	 * (item 	352	 commutercontact)) + 	(dHS36111 * 	dCI422	 * (item 	353	 commutercontact)) + 	(dHS36111 * 	dCI412	 * (item 	354	 commutercontact)) + 	(dHS36111 * 	dCI511	 * (item 	355	 commutercontact)) + 	(dHS36111 * 	dCI631	 * (item 	356	 commutercontact)) + 	(dHS36111 * 	dCI632	 * (item 	357	 commutercontact)) + 	(dHS36111 * 	dCI611	 * (item 	358	 commutercontact)) + 	(dHS36111 * 	dCI26112	 * (item 	359	 commutercontact)) + 	(dHS36111 * 	dCI36322	 * (item 	360	 commutercontact)) + 	(dHS36111 * 	dCI36311	 * (item 	361	 commutercontact)) + 	(dHS36111 * 	dCI36312	 * (item 	362	 commutercontact)) + 	(dHS36111 * 	dCI36122	 * (item 	363	 commutercontact)) + 	(dHS36111 * 	dCI36111	 * (item 	364	 commutercontact)) + 	(dHS36111 * 	dCI36112	 * (item 	365	 commutercontact)) + 	(dHS36111 * 	dCI17311	 * (item 	366	 commutercontact)) + 	(dHS36111 * 	dCI17312	 * (item 	367	 commutercontact)) + 	(dHS36111 * 	dCI17111	 * (item 	368	 commutercontact)) + 	(dHS36111 * 	dCI17112	 * (item 	369	 commutercontact)) + 	(dHS36111 * 	dCI18311	 * (item 	370	 commutercontact)) + 	(dHS36111 * 	dCI18312	 * (item 	371	 commutercontact)) + 	(dHS36111 * 	dCI18111	 * (item 	372	 commutercontact)) + 	(dHS36111 * 	dCI18112	 * (item 	373	 commutercontact)) + 	(dHS36111 * 	dCI19111	 * (item 	374	 commutercontact)))) * decimalGAET * neighbouring)
            set S36111 S36111 - travelextraS36111 * travelling25-35yrs
            set E36111 E36111 + travelextraS36111 * travelling25-35yrs
            if S36111 < 0 [set S36111 0]
            if E36111 > population [set E36111 population]
       ]          
                              
       if S36112 > 0 [  
            set travelextraS36112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS36112 * dCI112	 * (item 	375	 commutercontact)) + 	(dHS36112 * 	dCI212	 * (item 	376	 commutercontact)) + 	(dHS36112 * 	dCI312	 * (item 	377	 commutercontact)) + 	(dHS36112 * 	dCI422	 * (item 	378	 commutercontact)) + 	(dHS36112 * 	dCI412	 * (item 	379	 commutercontact)) + 	(dHS36112 * 	dCI511	 * (item 	380	 commutercontact)) + 	(dHS36112 * 	dCI631	 * (item 	381	 commutercontact)) + 	(dHS36112 * 	dCI632	 * (item 	382	 commutercontact)) + 	(dHS36112 * 	dCI611	 * (item 	383	 commutercontact)) + 	(dHS36112 * 	dCI26112	 * (item 	384	 commutercontact)) + 	(dHS36112 * 	dCI36322	 * (item 	385	 commutercontact)) + 	(dHS36112 * 	dCI36311	 * (item 	386	 commutercontact)) + 	(dHS36112 * 	dCI36312	 * (item 	387	 commutercontact)) + 	(dHS36112 * 	dCI36122	 * (item 	388	 commutercontact)) + 	(dHS36112 * 	dCI36111	 * (item 	389	 commutercontact)) + 	(dHS36112 * 	dCI36112	 * (item 	390	 commutercontact)) + 	(dHS36112 * 	dCI17311	 * (item 	391	 commutercontact)) + 	(dHS36112 * 	dCI17312	 * (item 	392	 commutercontact)) + 	(dHS36112 * 	dCI17111	 * (item 	393	 commutercontact)) + 	(dHS36112 * 	dCI17112	 * (item 	394	 commutercontact)) + 	(dHS36112 * 	dCI18311	 * (item 	395	 commutercontact)) + 	(dHS36112 * 	dCI18312	 * (item 	396	 commutercontact)) + 	(dHS36112 * 	dCI18111	 * (item 	397	 commutercontact)) + 	(dHS36112 * 	dCI18112	 * (item 	398	 commutercontact)) + 	(dHS36112 * 	dCI19111	 * (item 	399	 commutercontact)))) * decimalGAET * neighbouring)
            set S36112 S36112 - travelextraS36112 * travelling25-35yrs
            set E36112 E36112 + travelextraS36112 * travelling25-35yrs
            if S36112 < 0 [set S36112 0]
            if E36112 > population [set E36112 population]
       ]          
                              
       if S17311 > 0 [  
            set travelextraS17311 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS17311 * dCI112	 * (item 	400	 commutercontact)) + 	(dHS17311 * 	dCI212	 * (item 	401	 commutercontact)) + 	(dHS17311 * 	dCI312	 * (item 	402	 commutercontact)) + 	(dHS17311 * 	dCI422	 * (item 	403	 commutercontact)) + 	(dHS17311 * 	dCI412	 * (item 	404	 commutercontact)) + 	(dHS17311 * 	dCI511	 * (item 	405	 commutercontact)) + 	(dHS17311 * 	dCI631	 * (item 	406	 commutercontact)) + 	(dHS17311 * 	dCI632	 * (item 	407	 commutercontact)) + 	(dHS17311 * 	dCI611	 * (item 	408	 commutercontact)) + 	(dHS17311 * 	dCI26112	 * (item 	409	 commutercontact)) + 	(dHS17311 * 	dCI36322	 * (item 	410	 commutercontact)) + 	(dHS17311 * 	dCI36311	 * (item 	411	 commutercontact)) + 	(dHS17311 * 	dCI36312	 * (item 	412	 commutercontact)) + 	(dHS17311 * 	dCI36122	 * (item 	413	 commutercontact)) + 	(dHS17311 * 	dCI36111	 * (item 	414	 commutercontact)) + 	(dHS17311 * 	dCI36112	 * (item 	415	 commutercontact)) + 	(dHS17311 * 	dCI17311	 * (item 	416	 commutercontact)) + 	(dHS17311 * 	dCI17312	 * (item 	417	 commutercontact)) + 	(dHS17311 * 	dCI17111	 * (item 	418	 commutercontact)) + 	(dHS17311 * 	dCI17112	 * (item 	419	 commutercontact)) + 	(dHS17311 * 	dCI18311	 * (item 	420	 commutercontact)) + 	(dHS17311 * 	dCI18312	 * (item 	421	 commutercontact)) + 	(dHS17311 * 	dCI18111	 * (item 	422	 commutercontact)) + 	(dHS17311 * 	dCI18112	 * (item 	423	 commutercontact)) + 	(dHS17311 * 	dCI19111	 * (item 	424	 commutercontact)))) * decimalGAET * neighbouring)
            set S17311 S17311 - travelextraS17311 * travelling35-50yrs
            set E17311 E17311 + travelextraS17311 * travelling35-50yrs
            if S17311 < 0 [set S17311 0]
            if E17311 > population [set E17311 population]
       ]          
                              
       if S17312 > 0 [  
            set travelextraS17312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS17312 * dCI112	 * (item 	425	 commutercontact)) + 	(dHS17312 * 	dCI212	 * (item 	426	 commutercontact)) + 	(dHS17312 * 	dCI312	 * (item 	427	 commutercontact)) + 	(dHS17312 * 	dCI422	 * (item 	428	 commutercontact)) + 	(dHS17312 * 	dCI412	 * (item 	429	 commutercontact)) + 	(dHS17312 * 	dCI511	 * (item 	430	 commutercontact)) + 	(dHS17312 * 	dCI631	 * (item 	431	 commutercontact)) + 	(dHS17312 * 	dCI632	 * (item 	432	 commutercontact)) + 	(dHS17312 * 	dCI611	 * (item 	433	 commutercontact)) + 	(dHS17312 * 	dCI26112	 * (item 	434	 commutercontact)) + 	(dHS17312 * 	dCI36322	 * (item 	435	 commutercontact)) + 	(dHS17312 * 	dCI36311	 * (item 	436	 commutercontact)) + 	(dHS17312 * 	dCI36312	 * (item 	437	 commutercontact)) + 	(dHS17312 * 	dCI36122	 * (item 	438	 commutercontact)) + 	(dHS17312 * 	dCI36111	 * (item 	439	 commutercontact)) + 	(dHS17312 * 	dCI36112	 * (item 	440	 commutercontact)) + 	(dHS17312 * 	dCI17311	 * (item 	441	 commutercontact)) + 	(dHS17312 * 	dCI17312	 * (item 	442	 commutercontact)) + 	(dHS17312 * 	dCI17111	 * (item 	443	 commutercontact)) + 	(dHS17312 * 	dCI17112	 * (item 	444	 commutercontact)) + 	(dHS17312 * 	dCI18311	 * (item 	445	 commutercontact)) + 	(dHS17312 * 	dCI18312	 * (item 	446	 commutercontact)) + 	(dHS17312 * 	dCI18111	 * (item 	447	 commutercontact)) + 	(dHS17312 * 	dCI18112	 * (item 	448	 commutercontact)) + 	(dHS17312 * 	dCI19111	 * (item 	449	 commutercontact)))) * decimalGAET * neighbouring)
            set S17312 S17312 - travelextraS17312 * travelling35-50yrs
            set E17312 E17312 + travelextraS17312 * travelling35-50yrs
            if S17312 < 0 [set S17312 0]
            if E17312 > population [set E17312 population]
       ]          
                              
       if S17111 > 0 [  
            set travelextraS17111 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS17111 *	dCI112	 * (item 	450	 commutercontact)) + 	(dHS17111 * 	dCI212	 * (item 	451	 commutercontact)) + 	(dHS17111 * 	dCI312	 * (item 	452	 commutercontact)) + 	(dHS17111 * 	dCI422	 * (item 	453	 commutercontact)) + 	(dHS17111 * 	dCI412	 * (item 	454	 commutercontact)) + 	(dHS17111 * 	dCI511	 * (item 	455	 commutercontact)) + 	(dHS17111 * 	dCI631	 * (item 	456	 commutercontact)) + 	(dHS17111 * 	dCI632	 * (item 	457	 commutercontact)) + 	(dHS17111 * 	dCI611	 * (item 	458	 commutercontact)) + 	(dHS17111 * 	dCI26112	 * (item 	459	 commutercontact)) + 	(dHS17111 * 	dCI36322	 * (item 	460	 commutercontact)) + 	(dHS17111 * 	dCI36311	 * (item 	461	 commutercontact)) + 	(dHS17111 * 	dCI36312	 * (item 	462	 commutercontact)) + 	(dHS17111 * 	dCI36122	 * (item 	463	 commutercontact)) + 	(dHS17111 * 	dCI36111	 * (item 	464	 commutercontact)) + 	(dHS17111 * 	dCI36112	 * (item 	465	 commutercontact)) + 	(dHS17111 * 	dCI17311	 * (item 	466	 commutercontact)) + 	(dHS17111 * 	dCI17312	 * (item 	467	 commutercontact)) + 	(dHS17111 * 	dCI17111	 * (item 	468	 commutercontact)) + 	(dHS17111 * 	dCI17112	 * (item 	469	 commutercontact)) + 	(dHS17111 * 	dCI18311	 * (item 	470	 commutercontact)) + 	(dHS17111 * 	dCI18312	 * (item 	471	 commutercontact)) + 	(dHS17111 * 	dCI18111	 * (item 	472	 commutercontact)) + 	(dHS17111 * 	dCI18112	 * (item 	473	 commutercontact)) + 	(dHS17111 * 	dCI19111	 * (item 	474	 commutercontact)))) * decimalGAET * neighbouring)
            set S17111 S17111 - travelextraS17111 * travelling35-50yrs
            set E17111 E17111 + travelextraS17111 * travelling35-50yrs
            if S17111 < 0 [set S17111 0]
            if E17111 > population [set E17111 population]
       ]          

       if S17112 > 0 [  
            set travelextraS17112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS17112 * dCI112	 * (item 	475	 commutercontact)) + 	(dHS17112 * 	dCI212	 * (item 	476	 commutercontact)) + 	(dHS17112 * 	dCI312	 * (item 	477	 commutercontact)) + 	(dHS17112 * 	dCI422	 * (item 	478	 commutercontact)) + 	(dHS17112 * 	dCI412	 * (item 	479	 commutercontact)) + 	(dHS17112 * 	dCI511	 * (item 	480	 commutercontact)) + 	(dHS17112 * 	dCI631	 * (item 	481	 commutercontact)) + 	(dHS17112 * 	dCI632	 * (item 	482	 commutercontact)) + 	(dHS17112 * 	dCI611	 * (item 	483	 commutercontact)) + 	(dHS17112 * 	dCI26112	 * (item 	484	 commutercontact)) + 	(dHS17112 * 	dCI36322	 * (item 	485	 commutercontact)) + 	(dHS17112 * 	dCI36311	 * (item 	486	 commutercontact)) + 	(dHS17112 * 	dCI36312	 * (item 	487	 commutercontact)) + 	(dHS17112 * 	dCI36122	 * (item 	488	 commutercontact)) + 	(dHS17112 * 	dCI36111	 * (item 	489	 commutercontact)) + 	(dHS17112 * 	dCI36112	 * (item 	490	 commutercontact)) + 	(dHS17112 * 	dCI17311	 * (item 	491	 commutercontact)) + 	(dHS17112 * 	dCI17312	 * (item 	492	 commutercontact)) + 	(dHS17112 * 	dCI17111	 * (item 	493	 commutercontact)) + 	(dHS17112 * 	dCI17112	 * (item 	494	 commutercontact)) + 	(dHS17112 * 	dCI18311	 * (item 	495	 commutercontact)) + 	(dHS17112 * 	dCI18312	 * (item 	496	 commutercontact)) + 	(dHS17112 * 	dCI18111	 * (item 	497	 commutercontact)) + 	(dHS17112 * 	dCI18112	 * (item 	498	 commutercontact)) + 	(dHS17112 * 	dCI19111	 * (item 	499	 commutercontact)))) * decimalGAET * neighbouring)
            set S17112 S17112 - travelextraS17112 * travelling35-50yrs
            set E17112 E17112 + travelextraS17112 * travelling35-50yrs
            if S17112 < 0 [set S17112 0]
            if E17112 > population [set E17112 population]
       ]          
                              
       if S18311 > 0 [  
            set travelextraS18311 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS18311 *	dCI112	 * (item 	500	 commutercontact)) + 	(dHS18311 * 	dCI212	 * (item 	501	 commutercontact)) + 	(dHS18311 * 	dCI312	 * (item 	502	 commutercontact)) + 	(dHS18311 * 	dCI422	 * (item 	503	 commutercontact)) + 	(dHS18311 * 	dCI412	 * (item 	504	 commutercontact)) + 	(dHS18311 * 	dCI511	 * (item 	505	 commutercontact)) + 	(dHS18311 * 	dCI631	 * (item 	506	 commutercontact)) + 	(dHS18311 * 	dCI632	 * (item 	507	 commutercontact)) + 	(dHS18311 * 	dCI611	 * (item 	508	 commutercontact)) + 	(dHS18311 * 	dCI26112	 * (item 	509	 commutercontact)) + 	(dHS18311 * 	dCI36322	 * (item 	510	 commutercontact)) + 	(dHS18311 * 	dCI36311	 * (item 	511	 commutercontact)) + 	(dHS18311 * 	dCI36312	 * (item 	512	 commutercontact)) + 	(dHS18311 * 	dCI36122	 * (item 	513	 commutercontact)) + 	(dHS18311 * 	dCI36111	 * (item 	514	 commutercontact)) + 	(dHS18311 * 	dCI36112	 * (item 	515	 commutercontact)) + 	(dHS18311 * 	dCI17311	 * (item 	516	 commutercontact)) + 	(dHS18311 * 	dCI17312	 * (item 	517	 commutercontact)) + 	(dHS18311 * 	dCI17111	 * (item 	518	 commutercontact)) + 	(dHS18311 * 	dCI17112	 * (item 	519	 commutercontact)) + 	(dHS18311 * 	dCI18311	 * (item 	520	 commutercontact)) + 	(dHS18311 * 	dCI18312	 * (item 	521	 commutercontact)) + 	(dHS18311 * 	dCI18111	 * (item 	522	 commutercontact)) + 	(dHS18311 * 	dCI18112	 * (item 	523	 commutercontact)) + 	(dHS18311 * 	dCI19111	 * (item 	524	 commutercontact)))) * decimalGAET * neighbouring)
            set S18311 S18311 - travelextraS18311 * travelling50-65yrs
            set E18311 E18311 + travelextraS18311 * travelling50-65yrs
            if S18311 < 0 [set S18311 0]
            if E18311 > population [set E18311 population]
       ]          
                              
       if S18312 > 0 [  
            set travelextraS18312 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS18312 * dCI112	 * (item 	525	 commutercontact)) + 	(dHS18312 * 	dCI212	 * (item 	526	 commutercontact)) + 	(dHS18312 * 	dCI312	 * (item 	527	 commutercontact)) + 	(dHS18312 * 	dCI422	 * (item 	528	 commutercontact)) + 	(dHS18312 * 	dCI412	 * (item 	529	 commutercontact)) + 	(dHS18312 * 	dCI511	 * (item 	530	 commutercontact)) + 	(dHS18312 * 	dCI631	 * (item 	531	 commutercontact)) + 	(dHS18312 * 	dCI632	 * (item 	532	 commutercontact)) + 	(dHS18312 * 	dCI611	 * (item 	533	 commutercontact)) + 	(dHS18312 * 	dCI26112	 * (item 	534	 commutercontact)) + 	(dHS18312 * 	dCI36322	 * (item 	535	 commutercontact)) + 	(dHS18312 * 	dCI36311	 * (item 	536	 commutercontact)) + 	(dHS18312 * 	dCI36312	 * (item 	537	 commutercontact)) + 	(dHS18312 * 	dCI36122	 * (item 	538	 commutercontact)) + 	(dHS18312 * 	dCI36111	 * (item 	539	 commutercontact)) + 	(dHS18312 * 	dCI36112	 * (item 	540	 commutercontact)) + 	(dHS18312 * 	dCI17311	 * (item 	541	 commutercontact)) + 	(dHS18312 * 	dCI17312	 * (item 	542	 commutercontact)) + 	(dHS18312 * 	dCI17111	 * (item 	543	 commutercontact)) + 	(dHS18312 * 	dCI17112	 * (item 	544	 commutercontact)) + 	(dHS18312 * 	dCI18311	 * (item 	545	 commutercontact)) + 	(dHS18312 * 	dCI18312	 * (item 	546	 commutercontact)) + 	(dHS18312 * 	dCI18111	 * (item 	547	 commutercontact)) + 	(dHS18312 * 	dCI18112	 * (item 	548	 commutercontact)) + 	(dHS18312 * 	dCI19111	 * (item 	549	 commutercontact)))) * decimalGAET * neighbouring)
            set S18312 S18312 - travelextraS18312 * travelling50-65yrs
            set E18312 E18312 + travelextraS18312 * travelling50-65yrs
            if S18312 < 0 [set S18312 0]
            if E18312 > population [set E18312 population]
       ]
                              
       if S18111 > 0 [  
            set travelextraS18111 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS18111 * dCI112	 * (item 	550	 commutercontact)) + 	(dHS18111 * 	dCI212	 * (item 	551	 commutercontact)) + 	(dHS18111 * 	dCI312	 * (item 	552	 commutercontact)) + 	(dHS18111 * 	dCI422	 * (item 	553	 commutercontact)) + 	(dHS18111 * 	dCI412	 * (item 	554	 commutercontact)) + 	(dHS18111 * 	dCI511	 * (item 	555	 commutercontact)) + 	(dHS18111 * 	dCI631	 * (item 	556	 commutercontact)) + 	(dHS18111 * 	dCI632	 * (item 	557	 commutercontact)) + 	(dHS18111 * 	dCI611	 * (item 	558	 commutercontact)) + 	(dHS18111 * 	dCI26112	 * (item 	559	 commutercontact)) + 	(dHS18111 * 	dCI36322	 * (item 	560	 commutercontact)) + 	(dHS18111 * 	dCI36311	 * (item 	561	 commutercontact)) + 	(dHS18111 * 	dCI36312	 * (item 	562	 commutercontact)) + 	(dHS18111 * 	dCI36122	 * (item 	563	 commutercontact)) + 	(dHS18111 * 	dCI36111	 * (item 	564	 commutercontact)) + 	(dHS18111 * 	dCI36112	 * (item 	565	 commutercontact)) + 	(dHS18111 * 	dCI17311	 * (item 	566	 commutercontact)) + 	(dHS18111 * 	dCI17312	 * (item 	567	 commutercontact)) + 	(dHS18111 * 	dCI17111	 * (item 	568	 commutercontact)) + 	(dHS18111 * 	dCI17112	 * (item 	569	 commutercontact)) + 	(dHS18111 * 	dCI18311	 * (item 	570	 commutercontact)) + 	(dHS18111 * 	dCI18312	 * (item 	571	 commutercontact)) + 	(dHS18111 * 	dCI18111	 * (item 	572	 commutercontact)) + 	(dHS18111 * 	dCI18112	 * (item 	573	 commutercontact)) + 	(dHS18111 * 	dCI19111	 * (item 	574	 commutercontact)))) * decimalGAET * neighbouring)
            set S18111 S18111 - travelextraS18111 * travelling50-65yrs
            set E18111 E18111 + travelextraS18111 * travelling50-65yrs
            if S18111 < 0 [set S18111 0]
            if E18111 > population [set E18111 population]
       ]
                              
       if S18112 > 0 [  
            set travelextraS18112 (((0.5 + (1 / 21200 * travellers * 0.5)) * ((dHS18112 *	dCI112	 * (item 	575	 commutercontact)) + 	(dHS18112 * 	dCI212	 * (item 	576	 commutercontact)) + 	(dHS18112 * 	dCI312	 * (item 	577	 commutercontact)) + 	(dHS18112 * 	dCI422	 * (item 	578	 commutercontact)) + 	(dHS18112 * 	dCI412	 * (item 	579	 commutercontact)) + 	(dHS18112 * 	dCI511	 * (item 	580	 commutercontact)) + 	(dHS18112 * 	dCI631	 * (item 	581	 commutercontact)) + 	(dHS18112 * 	dCI632	 * (item 	582	 commutercontact)) + 	(dHS18112 * 	dCI611	 * (item 	583	 commutercontact)) + 	(dHS18112 * 	dCI26112	 * (item 	584	 commutercontact)) + 	(dHS18112 * 	dCI36322	 * (item 	585	 commutercontact)) + 	(dHS18112 * 	dCI36311	 * (item 	586	 commutercontact)) + 	(dHS18112 * 	dCI36312	 * (item 	587	 commutercontact)) + 	(dHS18112 * 	dCI36122	 * (item 	588	 commutercontact)) + 	(dHS18112 * 	dCI36111	 * (item 	589	 commutercontact)) + 	(dHS18112 * 	dCI36112	 * (item 	590	 commutercontact)) + 	(dHS18112 * 	dCI17311	 * (item 	591	 commutercontact)) + 	(dHS18112 * 	dCI17312	 * (item 	592	 commutercontact)) + 	(dHS18112 * 	dCI17111	 * (item 	593	 commutercontact)) + 	(dHS18112 * 	dCI17112	 * (item 	594	 commutercontact)) + 	(dHS18112 * 	dCI18311	 * (item 	595	 commutercontact)) + 	(dHS18112 * 	dCI18312	 * (item 	596	 commutercontact)) + 	(dHS18112 * 	dCI18111	 * (item 	597	 commutercontact)) + 	(dHS18112 * 	dCI18112	 * (item 	598	 commutercontact)) + 	(dHS18112 * 	dCI19111	 * (item 	599	 commutercontact)))) * decimalGAET * neighbouring)
            set S18112 S18112 - travelextraS18112 * travelling50-65yrs
            set E18112 E18112 + travelextraS18112 * travelling50-65yrs
            if S18112 < 0 [set S18112 0]
            if E18112 > population [set E18112 population]
       ]          
                              
       if S19111 > 0 [  
            set travelextraS19111 (((0.5 + (1 / 21200 * travellers  * 0.5)) * ((dHS19111 * dCI112	 * (item 	600	 commutercontact)) + 	(dHS19111 * 	dCI212	 * (item 	601	 commutercontact)) + 	(dHS19111 * 	dCI312	 * (item 	602	 commutercontact)) + 	(dHS19111 * 	dCI422	 * (item 	603	 commutercontact)) + 	(dHS19111 * 	dCI412	 * (item 	604	 commutercontact)) + 	(dHS19111 * 	dCI511	 * (item 	605	 commutercontact)) + 	(dHS19111 * 	dCI631	 * (item 	606	 commutercontact)) + 	(dHS19111 * 	dCI632	 * (item 	607	 commutercontact)) + 	(dHS19111 * 	dCI611	 * (item 	608	 commutercontact)) + 	(dHS19111 * 	dCI26112	 * (item 	609	 commutercontact)) + 	(dHS19111 * 	dCI36322	 * (item 	610	 commutercontact)) + 	(dHS19111 * 	dCI36311	 * (item 	611	 commutercontact)) + 	(dHS19111 * 	dCI36312	 * (item 	612	 commutercontact)) + 	(dHS19111 * 	dCI36122	 * (item 	613	 commutercontact)) + 	(dHS19111 * 	dCI36111	 * (item 	614	 commutercontact)) + 	(dHS19111 * 	dCI36112	 * (item 	615	 commutercontact)) + 	(dHS19111 * 	dCI17311	 * (item 	616	 commutercontact)) + 	(dHS19111 * 	dCI17312	 * (item 	617	 commutercontact)) + 	(dHS19111 * 	dCI17111	 * (item 	618	 commutercontact)) + 	(dHS19111 * 	dCI17112	 * (item 	619	 commutercontact)) + 	(dHS19111 * 	dCI18311	 * (item 	620	 commutercontact)) + 	(dHS19111 * 	dCI18312	 * (item 	621	 commutercontact)) + 	(dHS19111 * 	dCI18111	 * (item 	622	 commutercontact)) + 	(dHS19111 * 	dCI18112	 * (item 	623	 commutercontact)) + 	(dHS19111 * 	dCI19111	 * (item 	624	 commutercontact)))) * decimalGAET * neighbouring)
            set S19111 S19111 - travelextraS19111 * travelling65plusyrs
            set E19111 E19111 + travelextraS19111 * travelling65plusyrs
            if S19111 < 0 [set S19111 0]
            if E19111 > population [set E19111 population]
        ]
      ]
      ] 
      set traveltotal traveltotal + (((travelextraS112 * travelling0-5yrs) + (travelextraS212 * travelling0-5yrs) + (travelextraS312 * travelling5-12yrs) + (travelextraS422 * travelling12-17yrs) + (travelextraS412 * travelling12-17yrs) + (travelextraS511 * travelling17-25yrs) + (travelextraS631 * travelling25-35yrs) + (travelextraS632 * travelling25-35yrs) + (travelextraS611 * travelling25-35yrs) + (travelextraS26112 * travelling25-35yrs) + (travelextraS36322 * travelling25-35yrs) + (travelextraS36311 * travelling25-35yrs) + (travelextraS36312 * travelling25-35yrs) + (travelextraS36122 * travelling25-35yrs) + (travelextraS36111 * travelling25-35yrs) + (travelextraS36112 * travelling25-35yrs) + (travelextraS17311 * travelling35-50yrs) + (travelextraS17312 * travelling35-50yrs) + (travelextraS17111 * travelling35-50yrs) + (travelextraS17112 * travelling35-50yrs) + (travelextraS18311 * travelling50-65yrs) + (travelextraS18312 * travelling50-65yrs) + (travelextraS18111 * travelling50-65yrs) + (travelextraS18112 * travelling50-65yrs) + (travelextraS19111 * travelling65plusyrs)) * decimalVT)
      ]        
    ]    
end

to holiday-gathering-eventstravelling
  ;; model starts running 1 January. So summerholiday in July and August is ticks between 182 and 244 for year 1. 
  ;; 181 ticks travelling, then 62 ticks holiday, the rest of the year normal travelling again
  ;; Two times more events are visited
  
  if (ticks = 0) [set decimalGAET decimalGAET * 1]
  if (ticks mod 365 = 76) [set decimalGAET decimalGAET * 2]
  if (ticks mod 365 = 245) [set decimalGAET decimalGAET * 1]
  
  normal-visittravelling  
end


to holiday-visittravelling
  ;; model starts running 1 January. So summerholiday in July and August is ticks between 182 and 244 for year 1. 
  ;; 181 ticks travelling, then 62 ticks holiday, the rest of the year normal travelling again
  ;; Two times more visits
  
  ; no decimalVT exist therefore decimalGAET is used
  if (ticks = 0) [set decimalGAET 1]
  if (ticks mod 365 = 76) [set decimalGAET decimalGAET * 1.5]
  if (ticks mod 365 = 245) [set decimalGAET 1]
  
  normal-visittravelling
end

; VT numbers are based on the survey
to VTneighnormal
  set travelling0-5yrs 1.1 
  set travelling5-12yrs 0.5 
  set travelling12-17yrs 0.5
  set travelling17-25yrs 0.7 
  set travelling25-35yrs 0.6
  set travelling35-50yrs 0.8
  set travelling50-65yrs 1.9
  set travelling65plusyrs 0.9
  set decimalVT 1
end

to VTneighconcern
  set travelling0-5yrs 1
  set travelling5-12yrs 0.6
  set travelling12-17yrs 0.7
  set travelling17-25yrs 0.725
  set travelling25-35yrs 0.625
  set travelling35-50yrs 0.725
  set travelling50-65yrs 1.725
  set travelling65plusyrs 0.925
  set decimalVT 0.95 ; 0.95
end

to VTneighserious
  set travelling0-5yrs 0.9
  set travelling5-12yrs 0.7
  set travelling12-17yrs 0.9
  set travelling17-25yrs 0.75
  set travelling25-35yrs 0.65
  set travelling35-50yrs 0.65
  set travelling50-65yrs 1.55
  set travelling65plusyrs 0.95
  set decimalVT 0.9 ; 0.9
end

to VTneighsevere
  set travelling0-5yrs 0.8
  set travelling5-12yrs 0.8
  set travelling12-17yrs 1
  set travelling17-25yrs 0.775
  set travelling25-35yrs 0.675
  set travelling35-50yrs 0.575
  set travelling50-65yrs 1.375
  set travelling65plusyrs 0.975
  set decimalVT 0.85 ; 0.85
end

to VTneighlockdown
  set travelling0-5yrs 0.7 
  set travelling5-12yrs 0.9 
  set travelling12-17yrs 1.1  ;lowered, because 2.4 is rather high
  set travelling17-25yrs 0.8 
  set travelling25-35yrs 0.7 
  set travelling35-50yrs 0.5 
  set travelling50-65yrs 1.2 
  set travelling65plusyrs 1 
  set decimalVT 0.8 ; 0.8
end

to VTnonneighnormal
  set travelling0-5yrs 1.1  
  set travelling5-12yrs 0.1 
  set travelling12-17yrs 0.0 
  set travelling17-25yrs 1.2  
  set travelling25-35yrs 1.1 
  set travelling35-50yrs 1.1  
  set travelling50-65yrs 1 
  set travelling65plusyrs 1.3 
  set decimalVT 1
end

to VTnonneighconcern
  set travelling0-5yrs 1.025
  set travelling5-12yrs 0.125
  set travelling12-17yrs 0
  set travelling17-25yrs  1.275
  set travelling25-35yrs 1
  set travelling35-50yrs 1
  set travelling50-65yrs 1.1
  set travelling65plusyrs 1.35
  set decimalVT 0.95 ; 0.95
end

to VTnonneighserious
  set travelling0-5yrs 0.95
  set travelling5-12yrs 0.15
  set travelling12-17yrs 0
  set travelling17-25yrs  1.35
  set travelling25-35yrs 0.9
  set travelling35-50yrs 0.9
  set travelling50-65yrs 1.2
  set travelling65plusyrs 1.4
  set decimalVT 0.9 ; 0.9
end

to VTnonneighsevere
  set travelling0-5yrs 0.875
  set travelling5-12yrs 0.175
  set travelling12-17yrs 0
  set travelling17-25yrs  1.425
  set travelling25-35yrs 0.8
  set travelling35-50yrs 0.8
  set travelling50-65yrs 1.3
  set travelling65plusyrs 1.45
  set decimalVT 0.85 ; 0.85
end

to VTnonneighlockdown
  set travelling0-5yrs 0.8 
  set travelling5-12yrs 0.2 
  set travelling12-17yrs 0.0 
  set travelling17-25yrs 1.5  
  set travelling25-35yrs 0.7 
  set travelling35-50yrs 0.7  
  set travelling50-65yrs 1.4 
  set travelling65plusyrs 1.5 
  set decimalVT 0.8 ; 0.8
end
