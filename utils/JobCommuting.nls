to non-commuting
end

to job-commuting-model
  ifelse job-commuting-holiday? [holiday-commuting] [normal-commuting] 
  set jobcommuterstotalNL jobcommuterstotalNL + jobcommuterstotal
  set jobcommuterstotal 0
end

to normal-commuting    
   ; calculate ds for SIR calculation
   let dS631 S631
   let dI631 I631
   let dS632 S632
   let dI632 I632
   let dS611 S611
   let dI611 I611 
   let dS612 S612
   let dI612 I612
   let dS36322 S36322
   let dI36322 I36322
   let dS36311 S36311
   let dI36311 I36311
   let dS36312 S36312
   let dI36312 I36312
   let dS36122 S36122
   let dI36122 I36122
   let dS36111 S36111
   let dI36111 I36111
   let dS36112 S36112
   let dI36112 I36112
   let dS731 S731
   let dI731 I731
   let dS732 S732
   let dI732 I732
   let dS711 S711
   let dI711 I711
   let dS712 S712
   let dI712 I712
   let dS831 S831
   let dI831 I831
   let dS832 S832
   let dI832 I832
   let dS18111 S18111
   let dI18111 I18111
   let dS18112 S18112
   let dI18112 I18112
   
   let sumnoncommuters S611 + E611 + I611 + R611 + S612 + E612 + I612 + R612 + S36122 + E36122 + I36122 + R36122 + S36111 + E36111 + I36111 + R36111 + S36112 + E36112 + I36112 + R36112 + S711 + E711 + I711 + R711 + S712 + E712 + I712 + R712 + S18111 + E18111 + I18111 + R18111 + S18112 + E18112 + I18112 + R18112  
   let sumcommuters S631 + E631 + I631 + R631 + S632 + E632 + I632 + R632 + S36322 + E36322 + I36322 + R36322 + S36311 + E36311 + I36311 + R36311 + S36312 + E36312 + I36312 + R36312 + S731 + E731 + I731 + R731 + S732 + E732 + I732 + R732 + S831 + E831 + I831 + R831 + S832 + E832 + I832 + R832   

   ;; only commuting 5 days a week
   ;; To make the model quicker; only commuting once in seven days. Infections multiplied with 5 (below), corresponding with 5 workingdays
   ;; Downside, ds are the same for the five days, in stead of different each day.
   if (ticks mod 7 = 0) [
   ;set decimaljob 0
   ;; infected destination municipality
   ask my-out-commuterflows [
   if (([I611] of end2) + ([I612] of end2) + ([I36122] of end2) + ([I36111] of end2) + ([I36112] of end2) + ([I711] of end2) + ([I712] of end2) + ([I18111] of end2) + ([I18112] of end2)) > (([sumnoncommuters] of end2) / 100 * Commuter-Threshold) [
    
       let commuters (([nr-people] of self))
       ask end1[
          
       if S631 > 0 [
         ;; multiplied by 5, because there are five workingdays in a week, but it is only calculated once per week.
         ;; More commuters means higher infection chance in municipality. Ranging from 0.5 to 1. Highest nr commuters is 21200
            set extraS631job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS631 * dI611 * (item 158 commutercontact)) + (dS631 * dI612 * (item 183 commutercontact)) + (dS631 * dI36122 * (item 258 commutercontact)) + (dS631 * dI36111 * (item 283 commutercontact)) + (dS631 * dI36112 * (item 308 commutercontact)) + (dS631 * dI711 * (item 408 commutercontact)) + (dS631 * dI712 * (item 433 commutercontact)) + (dS631 * dI18111 * (item 508 commutercontact)) + (dS631 * dI18112 * (item 533 commutercontact)))))) * decimaljobcom)
            set S631 S631 - extraS631job
            set E631 E631 + extraS631job
            if S631 < 1 [set S631 0]
            if E631 > population [set E631 population]
       ]
       
       if S632 > 0 [
            set extraS632job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS632 * dI611 * (item 159 commutercontact)) + (dS632 * dI612 * (item 184 commutercontact)) + (dS632 * dI36122 * (item 259 commutercontact)) + (dS632 * dI36111 * (item 284 commutercontact)) + (dS632 * dI36112 * (item 309 commutercontact)) + (dS632 * dI711 * (item 409 commutercontact)) + (dS632 * dI712 * (item 434 commutercontact)) + (dS632 * dI18111 * (item 509 commutercontact)) + (dS632 * dI18112 * (item 534 commutercontact)))))) * decimaljobcom)
            set S632 S632 - extraS632job
            set E632 E632 + extraS632job
            if S632 < 1 [set S632 0]
            if E632 > population [set E632 population]
       ]
       
       if S36322 > 0 [
            set extraS36322job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36322 * dI611 * (item 163 commutercontact)) + (dS36322 * dI612 * (item 188 commutercontact)) + (dS36322 * dI36122 * (item 263 commutercontact)) + (dS36322 * dI36111 * (item 288 commutercontact)) + (dS36322 * dI36112 * (item 313 commutercontact)) + (dS36322 * dI711 * (item 413 commutercontact)) + (dS36322 * dI712 * (item 438 commutercontact)) + (dS36322 * dI18111 * (item 513 commutercontact)) + (dS36322 * dI18112 * (item 538 commutercontact)))))) * decimaljobcom)
            set S36322 S36322 - extraS36322job
            set E36322 E36322 + extraS36322job
            if S36322 < 1 [set S36322 0]
            if E36322 > population [set E36322 population]
       ]
       
       if S36311 > 0 [
            set extraS36311job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36311 * dI611 * (item 164 commutercontact)) + (dS36311 * dI612 * (item 189 commutercontact)) + (dS36311 * dI36122 * (item 264 commutercontact)) + (dS36311 * dI36111 * (item 289 commutercontact)) + (dS36311 * dI36112 * (item 314 commutercontact)) + (dS36311 * dI711 * (item 414 commutercontact)) + (dS36311 * dI712 * (item 439 commutercontact)) + (dS36311 * dI18111 * (item 514 commutercontact)) + (dS36311 * dI18112 * (item 539 commutercontact)))))) * decimaljobcom)
            set S36311 S36311 - extraS36311job
            set E36311 E36311 + extraS36311job
            if S36311 < 1 [set S36311 0]
            if E36311 > population [set E36311 population]
       ]
       
       if S36312 > 0 [
            set extraS36312job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36312 * dI611 * (item 165 commutercontact)) + (dS36312 * dI612 * (item 190 commutercontact)) + (dS36312 * dI36122 * (item 265 commutercontact)) + (dS36312 * dI36111 * (item 290 commutercontact)) + (dS36312 * dI36112 * (item 315 commutercontact)) + (dS36312 * dI711 * (item 415 commutercontact)) + (dS36312 * dI712 * (item 440 commutercontact)) + (dS36312 * dI18111 * (item 515 commutercontact)) + (dS36312 * dI18112 * (item 540 commutercontact)))))) * decimaljobcom)
            set S36312 S36312 - extraS36312job
            set E36312 E36312 + extraS36312job
            if S36312 < 1 [set S36312 0]
            if E36312 > population [set E36312 population]
       ]
       
       if S731 > 0 [
            set extraS731job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS731 * dI611 * (item 168 commutercontact)) + (dS731 * dI612 * (item 193 commutercontact)) + (dS731 * dI36122 * (item 268 commutercontact)) + (dS731 * dI36111 * (item 293 commutercontact)) + (dS731 * dI36112 * (item 318 commutercontact)) + (dS731 * dI711 * (item 418 commutercontact)) + (dS731 * dI712 * (item 443 commutercontact)) + (dS731 * dI18111 * (item 518 commutercontact)) + (dS731 * dI18112 * (item 543 commutercontact)))))) * decimaljobcom)
            set S731 S731 - extraS731job
            set E731 E731 + extraS731job
            if S731 < 1 [set S731 0]
            if E731 > population [set E731 population]
       ]
       
       if S732 > 0 [
            set extraS732job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS732 * dI611 * (item 169 commutercontact)) + (dS732 * dI612 * (item 194 commutercontact)) + (dS732 * dI36122 * (item 269 commutercontact)) + (dS732 * dI36111 * (item 294 commutercontact)) + (dS732 * dI36112 * (item 319 commutercontact)) + (dS732 * dI711 * (item 419 commutercontact)) + (dS732 * dI712 * (item 444 commutercontact)) + (dS732 * dI18111 * (item 519 commutercontact)) + (dS732 * dI18112 * (item 544 commutercontact)))))) * decimaljobcom)
            set S732 S732 - extraS732job
            set E732 E732 + extraS732job
            if S732 < 1 [set S732 0]
            if E732 > population [set E732 population]
       ]
       
       if S831 > 0 [
            set extraS831job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS831 * dI611 * (item 172 commutercontact)) + (dS831 * dI612 * (item 197 commutercontact)) + (dS831 * dI36122 * (item 272 commutercontact)) + (dS831 * dI36111 * (item 297 commutercontact)) + (dS831 * dI36112 * (item 322 commutercontact)) + (dS831 * dI711 * (item 422 commutercontact)) + (dS831 * dI712 * (item 447 commutercontact)) + (dS831 * dI18111 * (item 522 commutercontact)) + (dS831 * dI18112 * (item 547 commutercontact)))))) * decimaljobcom)
            set S831 S831 - extraS831job
            set E831 E831 + extraS831job
            if S831 < 1 [set S831 0]
            if E831 > population [set E831 population]
       ]
       
       if S832 > 0 [      
            set extraS832job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS832 * dI611 * (item 173 commutercontact)) + (dS832 * dI612 * (item 198 commutercontact)) + (dS832 * dI36122 * (item 273 commutercontact)) + (dS832 * dI36111 * (item 298 commutercontact)) + (dS832 * dI36112 * (item 323 commutercontact)) + (dS832 * dI711 * (item 423 commutercontact)) + (dS832 * dI712 * (item 448 commutercontact)) + (dS832 * dI18111 * (item 523 commutercontact)) + (dS832 * dI18112 * (item 548 commutercontact)))))) * decimaljobcom)
            set S832 S832 - extraS832job
            set E832 E832 + extraS832job
            if S832 < 1 [set S832 0]
            if E832 > population [set E832 population]
       ]           
     ]
   ]
      set jobcommuterstotal jobcommuterstotal + extraS631job + extraS632job + extraS36322job + extraS36311job + extraS36312job + extraS731job + extraS732job + extraS831job + extraS832job
   
   ;;infected home municipality
   if (([I631] of end1) + ([I632] of end1) + ([I36322] of end1) + ([I36311] of end1) + ([I36312] of end1) + ([I731] of end1) + ([I732] of end1) + ([I831] of end1) + ([I832] of end1)) > (([sumcommuters] of end1) / 100 * Commuter-Threshold) [  

       let commuters (([nr-people] of self))
       ask end2[
          
       if S611 > 0 [
            set extraS611job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS611 * dI631 * (item 158 commutercontact)) + (dS611 * dI632 * (item 183 commutercontact)) + (dS611 * dI36322 * (item 258 commutercontact)) + (dS611 * dI36311 * (item 283 commutercontact)) + (dS611 * dI36312 * (item 308 commutercontact)) + (dS611 * dI731 * (item 408 commutercontact)) + (dS611 * dI732 * (item 433 commutercontact)) + (dS611 * dI831 * (item 508 commutercontact)) + (dS611 * dI832 * (item 533 commutercontact)))))) * decimaljobcom)
            set S611 S611 - extraS611job
            set E611 E611 + extraS611job
            if S611 < 1 [set S611 0]
            if E611 > population [set E611 population]
       ]
       if S612 > 0 [
            set extraS612job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS612 * dI631 * (item 159 commutercontact)) + (dS612 * dI632 * (item 184 commutercontact)) + (dS612 * dI36322 * (item 259 commutercontact)) + (dS612 * dI36311 * (item 284 commutercontact)) + (dS612 * dI36312 * (item 309 commutercontact)) + (dS612 * dI731 * (item 409 commutercontact)) + (dS612 * dI732 * (item 434 commutercontact)) + (dS612 * dI831 * (item 509 commutercontact)) + (dS612 * dI832 * (item 534 commutercontact)))))) * decimaljobcom)
            set S612 S612 - extraS612job
            set E612 E612 + extraS612job
            if S612 < 1 [set S612 0]
            if E612 > population [set E612 population]
       ]
       if S36122 > 0 [
            set extraS36122job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36122 * dI631 * (item 163 commutercontact)) + (dS36122 * dI632 * (item 188 commutercontact)) + (dS36122 * dI36322 * (item 263 commutercontact)) + (dS36122 * dI36311 * (item 288 commutercontact)) + (dS36122 * dI36312 * (item 313 commutercontact)) + (dS36122 * dI731 * (item 413 commutercontact)) + (dS36122 * dI732 * (item 438 commutercontact)) + (dS36122 * dI831 * (item 513 commutercontact)) + (dS36122 * dI832 * (item 538 commutercontact)))))) * decimaljobcom)
            set S36122 S36122 - extraS36122job
            set E36122 E36122 + extraS36122job
            if E36122 > population [set E36122 population]
       ]
       if S36111 > 0 [
            set extraS36111job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36111 * dI631 * (item 164 commutercontact)) + (dS36111 * dI632 * (item 189 commutercontact)) + (dS36111 * dI36322 * (item 264 commutercontact)) + (dS36111 * dI36311 * (item 289 commutercontact)) + (dS36111 * dI36312 * (item 314 commutercontact)) + (dS36111 * dI731 * (item 414 commutercontact)) + (dS36111 * dI732 * (item 439 commutercontact)) + (dS36111 * dI831 * (item 514 commutercontact)) + (dS36111 * dI832 * (item 539 commutercontact)))))) * decimaljobcom)
            set S36111 S36111 - extraS36111job
            set E36111 E36111 + extraS36111job
            if S36111 < 1 [set S36111 0]
            if E36111 > population [set E36111 population]
       ]
       if S36112 > 0 [
            set extraS36112job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36112 * dI631 * (item 165 commutercontact)) + (dS36112 * dI632 * (item 190 commutercontact)) + (dS36112 * dI36322 * (item 265 commutercontact)) + (dS36112 * dI36311 * (item 290 commutercontact)) + (dS36112 * dI36312 * (item 315 commutercontact)) + (dS36112 * dI731 * (item 415 commutercontact)) + (dS36112 * dI732 * (item 440 commutercontact)) + (dS36112 * dI831 * (item 515 commutercontact)) + (dS36112 * dI832 * (item 540 commutercontact)))))) * decimaljobcom)
            set S36112 S36112 - extraS36112job
            set E36112 E36112 + extraS36112job
            if S36112 < 1 [set S36112 0]
            if E36112 > population [set E36112 population]
       ]
       if S711 > 0 [
            set extraS711job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS711 * dI631 * (item 168 commutercontact)) + (dS711 * dI632 * (item 193 commutercontact)) + (dS711 * dI36322 * (item 268 commutercontact)) + (dS711 * dI36311 * (item 293 commutercontact)) + (dS711 * dI36312 * (item 318 commutercontact)) + (dS711 * dI731 * (item 418 commutercontact)) + (dS711 * dI732 * (item 443 commutercontact)) + (dS711 * dI831 * (item 518 commutercontact)) + (dS711 * dI832 * (item 543 commutercontact)))))) * decimaljobcom)
            set S711 S711 - extraS711job
            set E711 E711 + extraS711job
            if S711 < 1 [set S711 0]
            if E711 > population [set E711 population]
       ]
       if S712 > 0 [ 
            set extraS712job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS712 * dI631 * (item 169 commutercontact)) + (dS712 * dI632 * (item 194 commutercontact)) + (dS712 * dI36322 * (item 269 commutercontact)) + (dS712 * dI36311 * (item 294 commutercontact)) + (dS712 * dI36312 * (item 319 commutercontact)) + (dS712 * dI731 * (item 419 commutercontact)) + (dS712 * dI732 * (item 444 commutercontact)) + (dS712 * dI831 * (item 519 commutercontact)) + (dS712 * dI832 * (item 544 commutercontact)))))) * decimaljobcom)
            set S712 S712 - extraS712job
            set E712 E712 + extraS712job
            if S712 < 1 [set S712 0]
            if E712 > population [set E712 population]
       ]
       if S18111 > 0 [
            set extraS18111job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18111 * dI631 * (item 172 commutercontact)) + (dS18111 * dI632 * (item 197 commutercontact)) + (dS18111 * dI36322 * (item 272 commutercontact)) + (dS18111 * dI36311 * (item 297 commutercontact)) + (dS18111 * dI36312 * (item 322 commutercontact)) + (dS18111 * dI731 * (item 422 commutercontact)) + (dS18111 * dI732 * (item 447 commutercontact)) + (dS18111 * dI831 * (item 522 commutercontact)) + (dS18111 * dI832 * (item 547 commutercontact)))))) * decimaljobcom)
            set S18111 S18111 - extraS18111job
            set E18111 E18111 + extraS18111job
            if S18111 < 1 [set S18111 0]
            if E18111 > population [set E18111 population]
       ]
       if S18112 > 0 [
            set extraS18112job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18112 * dI631 * (item 173 commutercontact)) + (dS18112 * dI632 * (item 198 commutercontact)) + (dS18112 * dI36322 * (item 273 commutercontact)) + (dS18112 * dI36311 * (item 298 commutercontact)) + (dS18112 * dI36312 * (item 323 commutercontact)) + (dS18112 * dI731 * (item 423 commutercontact)) + (dS18112 * dI732 * (item 448 commutercontact)) + (dS18112 * dI831 * (item 523 commutercontact)) + (dS18112 * dI832 * (item 548 commutercontact)))))) * decimaljobcom)
            set S18112 S18112 - extraS18112job
            set E18112 E18112 + extraS18112job
            if S18112 < 1 [set S18112 0]
            if E18112 > population [set E18112 population]
       ]
     ]
   ]
      set jobcommuterstotal jobcommuterstotal + extraS611job + extraS612job + extraS36122job + extraS36111job + extraS36112job + extraS711job + extraS712job + extraS18111job + extraS18112job
   ]
   ]  
end

to holiday-commuting
  ;; model starts running 1 January. So summerholiday in July and August is ticks between 182 and 244 for year 1. 
  ;; 181 ticks commuting, then 62 ticks holiday, the rest of the year normal commuting again
  
  if (ticks = 0) [normal-commuting]
  if (ticks mod 365 = 182) [holiday]
  if (ticks mod 365 = 245) [normal-commuting]
end

to holiday
  ; on holiday only 50% of commuting (can be changed to 20%)
  set decimaljob decimaljob * 0.5
  normal-commuting
end

;; Job classes commuting     S631 S632 S36322 S36311 S36312 S731 S732 S831 S832
;; Job classes commuting     I631 I632 I36322 I36311 I36312 I731 I732 I831 I832
;; Job classes non-commuting I611 I612 I36122 I36111 I36112 I711 I712 I18111 I18112
;; job classes non-commuting S611 S612 S36122 S36111 S36112 S711 S712 S18111 S18112 
  