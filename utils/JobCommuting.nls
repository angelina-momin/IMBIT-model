to non-commuting
end

to job-commuting-model
  ifelse job-commuting-holiday? [holiday-commuting] [normal-commuting] 
  set jobcommuterstotalNL jobcommuterstotalNL + jobcommuterstotal
  set jobcommuterstotal 0
end

to normal-commuting    
   ; calculate ds for SIR calculation
   let dS631 S631
   let dI631 I631
   let dS26312 S26312
   let dI26312 I26312
   let dS26111 S26111
   let dI26111 I26111 
   let dS26112 S26112
   let dI26112 I26112
   let dS36322 S36322
   let dI36322 I36322
   let dS36311 S36311
   let dI36311 I36311
   let dS36312 S36312
   let dI36312 I36312
   let dS36122 S36122
   let dI36122 I36122
   let dS36111 S36111
   let dI36111 I36111
   let dS36112 S36112
   let dI36112 I36112
   let dS17311 S17311
   let dI17311 I17311
   let dS17312 S17312
   let dI17312 I17312
   let dS17111 S17111
   let dI17111 I17111
   let dS17112 S17112
   let dI17112 I17112
   let dS18311 S18311
   let dI18311 I18311
   let dS18312 S18312
   let dI18312 I18312
   let dS18111 S18111
   let dI18111 I18111
   let dS18112 S18112
   let dI18112 I18112
   
   let sumnoncommuters S26111 + E26111 + I26111 + R26111 + S26112 + E26112 + I26112 + R26112 + S36122 + E36122 + I36122 + R36122 + S36111 + E36111 + I36111 + R36111 + S36112 + E36112 + I36112 + R36112 + S17111 + E17111 + I17111 + R17111 + S17112 + E17112 + I17112 + R17112 + S18111 + E18111 + I18111 + R18111 + S18112 + E18112 + I18112 + R18112  
   let sumcommuters S631 + E631 + I631 + R631 + S26312 + E26312 + I26312 + R26312 + S36322 + E36322 + I36322 + R36322 + S36311 + E36311 + I36311 + R36311 + S36312 + E36312 + I36312 + R36312 + S17311 + E17311 + I17311 + R17311 + S17312 + E17312 + I17312 + R17312 + S18311 + E18311 + I18311 + R18311 + S18312 + E18312 + I18312 + R18312   

   ;; only commuting 5 days a week
   ;; To make the model quicker; only commuting once in seven days. Infections multiplied with 5 (below), corresponding with 5 workingdays
   ;; Downside, ds are the same for the five days, in stead of different each day.
   if (ticks mod 7 = 0) [
   ;set decimaljob 0
   ;; infected destination municipality
   ask my-out-commuterflows [
   if (([I26111] of end2) + ([I26112] of end2) + ([I36122] of end2) + ([I36111] of end2) + ([I36112] of end2) + ([I17111] of end2) + ([I17112] of end2) + ([I18111] of end2) + ([I18112] of end2)) > (([sumnoncommuters] of end2) / 100 * Commuter-Threshold) [
    
       let commuters (([nr-people] of self))
       ask end1[
          
       if S631 > 0 [
         ;; multiplied by 5, because there are five workingdays in a week, but it is only calculated once per week.
         ;; More commuters means higher infection chance in municipality. Ranging from 0.5 to 1. Highest nr commuters is 21200
            set extraS631job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS631 * dI26111 * (item 158 commutercontact)) + (dS631 * dI26112 * (item 183 commutercontact)) + (dS631 * dI36122 * (item 258 commutercontact)) + (dS631 * dI36111 * (item 283 commutercontact)) + (dS631 * dI36112 * (item 308 commutercontact)) + (dS631 * dI17111 * (item 408 commutercontact)) + (dS631 * dI17112 * (item 433 commutercontact)) + (dS631 * dI18111 * (item 508 commutercontact)) + (dS631 * dI18112 * (item 533 commutercontact)))))) * decimaljobcom)
            set S631 S631 - extraS631job
            set E631 E631 + extraS631job
            if S631 < 1 [set S631 0]
            if E631 > population [set E631 population]
       ]
       
       if S26312 > 0 [
            set extraS26312job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS26312 * dI26111 * (item 159 commutercontact)) + (dS26312 * dI26112 * (item 184 commutercontact)) + (dS26312 * dI36122 * (item 259 commutercontact)) + (dS26312 * dI36111 * (item 284 commutercontact)) + (dS26312 * dI36112 * (item 309 commutercontact)) + (dS26312 * dI17111 * (item 409 commutercontact)) + (dS26312 * dI17112 * (item 434 commutercontact)) + (dS26312 * dI18111 * (item 509 commutercontact)) + (dS26312 * dI18112 * (item 534 commutercontact)))))) * decimaljobcom)
            set S26312 S26312 - extraS26312job
            set E26312 E26312 + extraS26312job
            if S26312 < 1 [set S26312 0]
            if E26312 > population [set E26312 population]
       ]
       
       if S36322 > 0 [
            set extraS36322job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36322 * dI26111 * (item 163 commutercontact)) + (dS36322 * dI26112 * (item 188 commutercontact)) + (dS36322 * dI36122 * (item 263 commutercontact)) + (dS36322 * dI36111 * (item 288 commutercontact)) + (dS36322 * dI36112 * (item 313 commutercontact)) + (dS36322 * dI17111 * (item 413 commutercontact)) + (dS36322 * dI17112 * (item 438 commutercontact)) + (dS36322 * dI18111 * (item 513 commutercontact)) + (dS36322 * dI18112 * (item 538 commutercontact)))))) * decimaljobcom)
            set S36322 S36322 - extraS36322job
            set E36322 E36322 + extraS36322job
            if S36322 < 1 [set S36322 0]
            if E36322 > population [set E36322 population]
       ]
       
       if S36311 > 0 [
            set extraS36311job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36311 * dI26111 * (item 164 commutercontact)) + (dS36311 * dI26112 * (item 189 commutercontact)) + (dS36311 * dI36122 * (item 264 commutercontact)) + (dS36311 * dI36111 * (item 289 commutercontact)) + (dS36311 * dI36112 * (item 314 commutercontact)) + (dS36311 * dI17111 * (item 414 commutercontact)) + (dS36311 * dI17112 * (item 439 commutercontact)) + (dS36311 * dI18111 * (item 514 commutercontact)) + (dS36311 * dI18112 * (item 539 commutercontact)))))) * decimaljobcom)
            set S36311 S36311 - extraS36311job
            set E36311 E36311 + extraS36311job
            if S36311 < 1 [set S36311 0]
            if E36311 > population [set E36311 population]
       ]
       
       if S36312 > 0 [
            set extraS36312job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36312 * dI26111 * (item 165 commutercontact)) + (dS36312 * dI26112 * (item 190 commutercontact)) + (dS36312 * dI36122 * (item 265 commutercontact)) + (dS36312 * dI36111 * (item 290 commutercontact)) + (dS36312 * dI36112 * (item 315 commutercontact)) + (dS36312 * dI17111 * (item 415 commutercontact)) + (dS36312 * dI17112 * (item 440 commutercontact)) + (dS36312 * dI18111 * (item 515 commutercontact)) + (dS36312 * dI18112 * (item 540 commutercontact)))))) * decimaljobcom)
            set S36312 S36312 - extraS36312job
            set E36312 E36312 + extraS36312job
            if S36312 < 1 [set S36312 0]
            if E36312 > population [set E36312 population]
       ]
       
       if S17311 > 0 [
            set extraS17311job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17311 * dI26111 * (item 168 commutercontact)) + (dS17311 * dI26112 * (item 193 commutercontact)) + (dS17311 * dI36122 * (item 268 commutercontact)) + (dS17311 * dI36111 * (item 293 commutercontact)) + (dS17311 * dI36112 * (item 318 commutercontact)) + (dS17311 * dI17111 * (item 418 commutercontact)) + (dS17311 * dI17112 * (item 443 commutercontact)) + (dS17311 * dI18111 * (item 518 commutercontact)) + (dS17311 * dI18112 * (item 543 commutercontact)))))) * decimaljobcom)
            set S17311 S17311 - extraS17311job
            set E17311 E17311 + extraS17311job
            if S17311 < 1 [set S17311 0]
            if E17311 > population [set E17311 population]
       ]
       
       if S17312 > 0 [
            set extraS17312job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17312 * dI26111 * (item 169 commutercontact)) + (dS17312 * dI26112 * (item 194 commutercontact)) + (dS17312 * dI36122 * (item 269 commutercontact)) + (dS17312 * dI36111 * (item 294 commutercontact)) + (dS17312 * dI36112 * (item 319 commutercontact)) + (dS17312 * dI17111 * (item 419 commutercontact)) + (dS17312 * dI17112 * (item 444 commutercontact)) + (dS17312 * dI18111 * (item 519 commutercontact)) + (dS17312 * dI18112 * (item 544 commutercontact)))))) * decimaljobcom)
            set S17312 S17312 - extraS17312job
            set E17312 E17312 + extraS17312job
            if S17312 < 1 [set S17312 0]
            if E17312 > population [set E17312 population]
       ]
       
       if S18311 > 0 [
            set extraS18311job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18311 * dI26111 * (item 172 commutercontact)) + (dS18311 * dI26112 * (item 197 commutercontact)) + (dS18311 * dI36122 * (item 272 commutercontact)) + (dS18311 * dI36111 * (item 297 commutercontact)) + (dS18311 * dI36112 * (item 322 commutercontact)) + (dS18311 * dI17111 * (item 422 commutercontact)) + (dS18311 * dI17112 * (item 447 commutercontact)) + (dS18311 * dI18111 * (item 522 commutercontact)) + (dS18311 * dI18112 * (item 547 commutercontact)))))) * decimaljobcom)
            set S18311 S18311 - extraS18311job
            set E18311 E18311 + extraS18311job
            if S18311 < 1 [set S18311 0]
            if E18311 > population [set E18311 population]
       ]
       
       if S18312 > 0 [      
            set extraS18312job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18312 * dI26111 * (item 173 commutercontact)) + (dS18312 * dI26112 * (item 198 commutercontact)) + (dS18312 * dI36122 * (item 273 commutercontact)) + (dS18312 * dI36111 * (item 298 commutercontact)) + (dS18312 * dI36112 * (item 323 commutercontact)) + (dS18312 * dI17111 * (item 423 commutercontact)) + (dS18312 * dI17112 * (item 448 commutercontact)) + (dS18312 * dI18111 * (item 523 commutercontact)) + (dS18312 * dI18112 * (item 548 commutercontact)))))) * decimaljobcom)
            set S18312 S18312 - extraS18312job
            set E18312 E18312 + extraS18312job
            if S18312 < 1 [set S18312 0]
            if E18312 > population [set E18312 population]
       ]           
     ]
   ]
      set jobcommuterstotal jobcommuterstotal + extraS631job + extraS26312job + extraS36322job + extraS36311job + extraS36312job + extraS17311job + extraS17312job + extraS18311job + extraS18312job
   
   ;;infected home municipality
   if (([I631] of end1) + ([I26312] of end1) + ([I36322] of end1) + ([I36311] of end1) + ([I36312] of end1) + ([I17311] of end1) + ([I17312] of end1) + ([I18311] of end1) + ([I18312] of end1)) > (([sumcommuters] of end1) / 100 * Commuter-Threshold) [  

       let commuters (([nr-people] of self))
       ask end2[
          
       if S26111 > 0 [
            set extraS26111job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS26111 * dI631 * (item 158 commutercontact)) + (dS26111 * dI26312 * (item 183 commutercontact)) + (dS26111 * dI36322 * (item 258 commutercontact)) + (dS26111 * dI36311 * (item 283 commutercontact)) + (dS26111 * dI36312 * (item 308 commutercontact)) + (dS26111 * dI17311 * (item 408 commutercontact)) + (dS26111 * dI17312 * (item 433 commutercontact)) + (dS26111 * dI18311 * (item 508 commutercontact)) + (dS26111 * dI18312 * (item 533 commutercontact)))))) * decimaljobcom)
            set S26111 S26111 - extraS26111job
            set E26111 E26111 + extraS26111job
            if S26111 < 1 [set S26111 0]
            if E26111 > population [set E26111 population]
       ]
       if S26112 > 0 [
            set extraS26112job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS26112 * dI631 * (item 159 commutercontact)) + (dS26112 * dI26312 * (item 184 commutercontact)) + (dS26112 * dI36322 * (item 259 commutercontact)) + (dS26112 * dI36311 * (item 284 commutercontact)) + (dS26112 * dI36312 * (item 309 commutercontact)) + (dS26112 * dI17311 * (item 409 commutercontact)) + (dS26112 * dI17312 * (item 434 commutercontact)) + (dS26112 * dI18311 * (item 509 commutercontact)) + (dS26112 * dI18312 * (item 534 commutercontact)))))) * decimaljobcom)
            set S26112 S26112 - extraS26112job
            set E26112 E26112 + extraS26112job
            if S26112 < 1 [set S26112 0]
            if E26112 > population [set E26112 population]
       ]
       if S36122 > 0 [
            set extraS36122job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36122 * dI631 * (item 163 commutercontact)) + (dS36122 * dI26312 * (item 188 commutercontact)) + (dS36122 * dI36322 * (item 263 commutercontact)) + (dS36122 * dI36311 * (item 288 commutercontact)) + (dS36122 * dI36312 * (item 313 commutercontact)) + (dS36122 * dI17311 * (item 413 commutercontact)) + (dS36122 * dI17312 * (item 438 commutercontact)) + (dS36122 * dI18311 * (item 513 commutercontact)) + (dS36122 * dI18312 * (item 538 commutercontact)))))) * decimaljobcom)
            set S36122 S36122 - extraS36122job
            set E36122 E36122 + extraS36122job
            if E36122 > population [set E36122 population]
       ]
       if S36111 > 0 [
            set extraS36111job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36111 * dI631 * (item 164 commutercontact)) + (dS36111 * dI26312 * (item 189 commutercontact)) + (dS36111 * dI36322 * (item 264 commutercontact)) + (dS36111 * dI36311 * (item 289 commutercontact)) + (dS36111 * dI36312 * (item 314 commutercontact)) + (dS36111 * dI17311 * (item 414 commutercontact)) + (dS36111 * dI17312 * (item 439 commutercontact)) + (dS36111 * dI18311 * (item 514 commutercontact)) + (dS36111 * dI18312 * (item 539 commutercontact)))))) * decimaljobcom)
            set S36111 S36111 - extraS36111job
            set E36111 E36111 + extraS36111job
            if S36111 < 1 [set S36111 0]
            if E36111 > population [set E36111 population]
       ]
       if S36112 > 0 [
            set extraS36112job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS36112 * dI631 * (item 165 commutercontact)) + (dS36112 * dI26312 * (item 190 commutercontact)) + (dS36112 * dI36322 * (item 265 commutercontact)) + (dS36112 * dI36311 * (item 290 commutercontact)) + (dS36112 * dI36312 * (item 315 commutercontact)) + (dS36112 * dI17311 * (item 415 commutercontact)) + (dS36112 * dI17312 * (item 440 commutercontact)) + (dS36112 * dI18311 * (item 515 commutercontact)) + (dS36112 * dI18312 * (item 540 commutercontact)))))) * decimaljobcom)
            set S36112 S36112 - extraS36112job
            set E36112 E36112 + extraS36112job
            if S36112 < 1 [set S36112 0]
            if E36112 > population [set E36112 population]
       ]
       if S17111 > 0 [
            set extraS17111job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17111 * dI631 * (item 168 commutercontact)) + (dS17111 * dI26312 * (item 193 commutercontact)) + (dS17111 * dI36322 * (item 268 commutercontact)) + (dS17111 * dI36311 * (item 293 commutercontact)) + (dS17111 * dI36312 * (item 318 commutercontact)) + (dS17111 * dI17311 * (item 418 commutercontact)) + (dS17111 * dI17312 * (item 443 commutercontact)) + (dS17111 * dI18311 * (item 518 commutercontact)) + (dS17111 * dI18312 * (item 543 commutercontact)))))) * decimaljobcom)
            set S17111 S17111 - extraS17111job
            set E17111 E17111 + extraS17111job
            if S17111 < 1 [set S17111 0]
            if E17111 > population [set E17111 population]
       ]
       if S17112 > 0 [ 
            set extraS17112job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS17112 * dI631 * (item 169 commutercontact)) + (dS17112 * dI26312 * (item 194 commutercontact)) + (dS17112 * dI36322 * (item 269 commutercontact)) + (dS17112 * dI36311 * (item 294 commutercontact)) + (dS17112 * dI36312 * (item 319 commutercontact)) + (dS17112 * dI17311 * (item 419 commutercontact)) + (dS17112 * dI17312 * (item 444 commutercontact)) + (dS17112 * dI18311 * (item 519 commutercontact)) + (dS17112 * dI18312 * (item 544 commutercontact)))))) * decimaljobcom)
            set S17112 S17112 - extraS17112job
            set E17112 E17112 + extraS17112job
            if S17112 < 1 [set S17112 0]
            if E17112 > population [set E17112 population]
       ]
       if S18111 > 0 [
            set extraS18111job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18111 * dI631 * (item 172 commutercontact)) + (dS18111 * dI26312 * (item 197 commutercontact)) + (dS18111 * dI36322 * (item 272 commutercontact)) + (dS18111 * dI36311 * (item 297 commutercontact)) + (dS18111 * dI36312 * (item 322 commutercontact)) + (dS18111 * dI17311 * (item 422 commutercontact)) + (dS18111 * dI17312 * (item 447 commutercontact)) + (dS18111 * dI18311 * (item 522 commutercontact)) + (dS18111 * dI18312 * (item 547 commutercontact)))))) * decimaljobcom)
            set S18111 S18111 - extraS18111job
            set E18111 E18111 + extraS18111job
            if S18111 < 1 [set S18111 0]
            if E18111 > population [set E18111 population]
       ]
       if S18112 > 0 [
            set extraS18112job ((5 * (((0.5 + (1 / 21200 * commuters * 0.5)) * ((dS18112 * dI631 * (item 173 commutercontact)) + (dS18112 * dI26312 * (item 198 commutercontact)) + (dS18112 * dI36322 * (item 273 commutercontact)) + (dS18112 * dI36311 * (item 298 commutercontact)) + (dS18112 * dI36312 * (item 323 commutercontact)) + (dS18112 * dI17311 * (item 423 commutercontact)) + (dS18112 * dI17312 * (item 448 commutercontact)) + (dS18112 * dI18311 * (item 523 commutercontact)) + (dS18112 * dI18312 * (item 548 commutercontact)))))) * decimaljobcom)
            set S18112 S18112 - extraS18112job
            set E18112 E18112 + extraS18112job
            if S18112 < 1 [set S18112 0]
            if E18112 > population [set E18112 population]
       ]
     ]
   ]
      set jobcommuterstotal jobcommuterstotal + extraS26111job + extraS26112job + extraS36122job + extraS36111job + extraS36112job + extraS17111job + extraS17112job + extraS18111job + extraS18112job
   ]
   ]  
end

to holiday-commuting
  ;; model starts running 1 January. So summerholiday in July and August is ticks between 182 and 244 for year 1. 
  ;; 181 ticks commuting, then 62 ticks holiday, the rest of the year normal commuting again
  
  if (ticks = 0) [normal-commuting]
  if (ticks mod 365 = 182) [holiday]
  if (ticks mod 365 = 245) [normal-commuting]
end

to holiday
  ; on holiday only 50% of commuting (can be changed to 20%)
  set decimaljob decimaljob * 0.5
  normal-commuting
end

;; Job classes commuting     S631 S26312 S36322 S36311 S36312 S17311 S17312 S18311 S18312
;; Job classes commuting     I631 I26312 I36322 I36311 I36312 I17311 I17312 I18311 I18312
;; Job classes non-commuting I26111 I26112 I36122 I36111 I36112 I17111 I17112 I18111 I18112
;; job classes non-commuting S26111 S26112 S36122 S36111 S36112 S17111 S17112 S18111 S18112 
  