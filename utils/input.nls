
to initiate-helpstep
  ;; init the commuting-situation to non-holiday .. in case for some reason we "miss" the init in the commuting/schoolcommuting
  set helpstep 1
  set helpstepb 1   
end


to setup-links-job
;;reads in a file with all the links that are formed between municipalities by job-commuters
;;file contains 3 columns, first column name of originating municipality
;;second column name of end municipality, third column number of commuters
  
  file-open "data/input/links/LinksCommuter.txt"
  while [not file-at-end?] [
    set items read-from-string (word "[" file-read-line "]")
    ask get-node (item 0 items)
    [
     create-commuterflow-to get-node (item 1 items)
     [ set frommuni item 0 items 
       set tomuni item 1 items 
       set nr-people item 2 items ]
     
     ]
    ]  
      
  file-close
  
  ;;to make testing the model quicker
  ;;ask commuterflows[ 
  ;;if nr-people < 500 [die] ]
end

    
to setup-links-school
;;reads in a file with all the links that are formed between municipalities by school-commuters
;;file contains 3 columns, first column name of originating municipality
;;second column name of end municipality, third column number of commuters
  
  file-open "data/input/links/LinksSchool.txt"
  while [not file-at-end?] [
    set items read-from-string (word "[" file-read-line "]")
    ask get-node (item 0 items)
    [
     create-schoolflow-to get-node (item 1 items)
     [ set frommuni item 0 items 
       set tomuni item 1 items 
       set nr-people item 2 items ]
     
     ]
    ] 
  
  file-close
  
  ;;to make testing the model quicker
  ;;ask schoolflows[ 
  ;;if nr-people < 500 [die] ]  
end

to setup-links-travelling-neigh
;;reads in a file with all the links that are formed between municipalities by travellers 1
;;file contains 3 columns, first column name of originating municipality
;;second column name of end municipality, third column number of travellers
  
  file-open "data/input/links/LinksTravelNeigh.txt"
  while [not file-at-end?] [
    set items read-from-string (word "[" file-read-line "]")
    ask get-node (item 0 items)
    [
     create-travelneighflow-to get-node (item 1 items)
     [ set frommuni item 0 items 
       set tomuni item 1 items 
       set nr-people item 2 items ]     
     ]
    ] 
      
  file-close
     
  ;;to make testing the model quicker
  ;;ask visitflows[ 
  ;;if nr-people < 500 [die] ]  
end

to setup-links-travelling-non-neigh
;;reads in a file with all the links that are formed between municipalities by travellers 2
;;file contains 3 columns, first column name of originating municipality
;;second column name of end municipality, third column number of travellers
  
  file-open "data/input/links/LinksTravelNonNeigh.txt"
  while [not file-at-end?] [
    set items read-from-string (word "[" file-read-line "]")
    ask get-node (item 0 items)
    [
     create-travelnonneighflow-to get-node (item 1 items)
     [ set frommuni item 0 items 
       set tomuni item 1 items 
       set nr-people item 2 items ]     
     ]
    ] 
      
  file-close
     
  ;;to make testing the model quicker
  ;;ask visitflows[ 
  ;;if nr-people < 500 [die] ]  
end

to setup-economic
  set economicscore []   
  file-open "data/input/others/EconomicScore.txt"   
  while [not file-at-end?]    
  [set economicscore sentence economicscore (list file-read)]   
  
  file-close  
end

to setup-age
  ; because of time constraints this is not used and the age score is hard coded
  set agescore []   
  file-open "data/input/others/AgeScore.txt"   
  while [not file-at-end?]    
  [set economicscore sentence economicscore (list file-read)]   
  
  file-close 
end

to-report get-node [node-name]
  report one-of municipalities with [name = node-name]
end

  ; contactrate
to contactrate0_000
  set contactrates contactrate0_000t  
end

to contactrate0_020
  set contactrates contactrate0_020t
end

to contactrate0_029
  set contactrates contactrate0_029t
end

to contactrate0_040
  set contactrates contactrate0_040t  
end

to contactrate0_050
  set contactrates contactrate0_050t  
end

to contactrate0_067
  set contactrates contactrate0_067t  
end

to contactrate0_100
  set contactrates contactrate0_100t 
end 

to contactrate0_200
  set contactrates contactrate0_200t  
end

to contactrate0_300
  set contactrates contactrate0_300t  
end

to contactrate0_400
  set contactrates contactrate0_400t
end

to contactrate0_600
  set contactrates contactrate0_600t  
end

to contactrate0_800
  set contactrates contactrate0_800t  
end

to contactrate1_000
  set contactrates contactrate1_000t  
end

to contactrate1_400
  set contactrates contactrate1_400t  
end

to contactrate2_000
  set contactrates contactrate2_000t  
end


  ; commutercontact
to commutercontact0_000
  set commutercontact commutercontact0_000t  
end

to commutercontact0_020
  set commutercontact commutercontact0_020t
end

to commutercontact0_029
  set commutercontact commutercontact0_029t
end

to commutercontact0_040
  set commutercontact commutercontact0_040t  
end

to commutercontact0_050
  set commutercontact commutercontact0_050t  
end

to commutercontact0_067
  set commutercontact commutercontact0_067t  
end

to commutercontact0_100
  set commutercontact commutercontact0_100t 
end 

to commutercontact0_200
  set commutercontact commutercontact0_200t  
end

to commutercontact0_300
  set commutercontact commutercontact0_300t  
end

to commutercontact0_400
  set commutercontact commutercontact0_400t
end

to commutercontact0_600
  set commutercontact commutercontact0_600t  
end

to commutercontact0_800
  set commutercontact commutercontact0_800t  
end

to commutercontact1_000
  set commutercontact commutercontact1_000t  
end

to commutercontact1_400
  set commutercontact commutercontact1_400t  
end

to commutercontact2_000
  set commutercontact commutercontact2_000t  
end
